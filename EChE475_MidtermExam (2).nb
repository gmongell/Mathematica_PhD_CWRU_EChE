(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    385548,       8011]
NotebookOptionsPosition[    372714,       7594]
NotebookOutlinePosition[    373089,       7610]
CellTagsIndexPosition[    373046,       7607]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"Guy", " ", 
  RowBox[{"F", ".", " ", "Mongelli"}], "                        ", 
  RowBox[{
   RowBox[{"11", "/", "3"}], "/", "2012"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Prof", ".", " ", "J", ".", " ", "Adin"}], " ", "Mann", "       ", 
  "ECHE", " ", "475"}]}], "Input",
 CellChangeTimes->{{3.560980435379281*^9, 3.560980452594266*^9}}],

Cell[BoxData[
 RowBox[{"Midterm", " ", "Take", " ", "Home", " ", "Problem", " ", 
  "Set"}]], "Input",
 CellChangeTimes->{{3.560980455971459*^9, 3.560980461643783*^9}}],

Cell[BoxData[
 RowBox[{"Problem", " ", "1"}]], "Input",
 CellChangeTimes->{{3.5609804623308225`*^9, 3.5609804638759108`*^9}}],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"A", ":"}]}]], "Input",
 CellChangeTimes->{{3.56121753905228*^9, 3.561217541556423*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "following", " ", "is", " ", "a", " ", "parametrically", " ", 
   "defined", " ", "vector", " ", "function", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Rank", " ", "1"}], ")"}], ".", "  ", "The"}], " ", "parameter", 
   " ", "variable"}], ",", " ", "t", ",", " ", 
  RowBox[{
   RowBox[{"is", " ", "varied", " ", "in", " ", "the", " ", "domain", " ", 
    RowBox[{
     RowBox[{"of", " ", "[", 
      RowBox[{"0", ",", 
       FractionBox["\[Pi]", "2"]}], "]"}], ".", "  ", "Therefore"}], " ", 
    "the", " ", "codomain", " ", "of", " ", "x", " ", "is", " ", 
    RowBox[{
     RowBox[{"identically", " ", "[", 
      RowBox[{"0", ",", 
       FractionBox["\[Pi]", "2"]}], "]"}], ".", "The"}], " ", "codomain", " ",
     "of", " ", "y", " ", 
    RowBox[{
     RowBox[{"is", " ", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ".", "  ", "The"}], " ", "x", " ", 
    "and", " ", "x", " ", "components", " ", "of", " ", "this", " ", 
    "parameterized", " ", "function", " ", "is", " ", "continuous", " ", "on",
     " ", "the", " ", "domain", " ", "of", " ", "t", " ", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
      "and", " ", "even", " ", "in", " ", "extended", " ", "domains", " ", 
       RowBox[{"of", " ", "[", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "]"}]}], ")"}], 
     ".", "  ", "It"}], " ", "is", " ", "also", " ", "infinitely", " ", 
    "differentiable", " ", "in", " ", "the", " ", "bounded", " ", "and", " ", 
    "infinite", " ", "limits", " ", "of", " ", 
    RowBox[{"t", ".", " ", "The"}], " ", "x", " ", "component", " ", "will", 
    " ", "have", " ", "issues", " ", "after", " ", "the", " ", "first", " ", 
    "derivative", " ", "because", " ", "the", " ", "function", " ", "will", 
    " ", "be", " ", "undefined", " ", "as", " ", "all", " ", "of", " ", "the",
     " ", "y", " ", "values", " ", "will", " ", "be", " ", "mapped", " ", 
    "onto", " ", "the", " ", "x"}], "=", 
   RowBox[{"0", " ", 
    RowBox[{"ordinate", ".", " ", "Because"}], " ", "of", " ", "their", " ", 
    "defferentiability", " ", "properties"}]}], ",", " ", 
  RowBox[{
  "they", " ", "are", " ", "also", " ", "square", " ", "integrable", " ", 
   RowBox[{"functions", "."}]}]}]], "Input",
 CellChangeTimes->{{3.5612176127334943`*^9, 3.5612176967743015`*^9}, {
  3.561302636311034*^9, 3.5613026823626685`*^9}, {3.5613027451642604`*^9, 
  3.561302922943429*^9}, {3.561303248422045*^9, 3.5613032499201307`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y1", "=", 
  RowBox[{"(", GridBox[{
     {"t"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Sin", "[", "t", "]"}], ")"}], "^", "2"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.560980469853253*^9, 3.560980483202016*^9}, {
   3.5612175693980155`*^9, 3.5612175813386984`*^9}, 3.561217709672039*^9, {
   3.5612177445650344`*^9, 3.5612177507523885`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "t", "}"}], ",", 
   RowBox[{"{", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "t", "]"}], "2"], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.56121758363083*^9, 3.561217751160412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Pi", "/", "2"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.561218205584403*^9, 3.561218212638807*^9}}],

Cell[BoxData["1.5707963267948966192313216916397514421`3."], "Output",
 CellChangeTimes->{{3.561218207466511*^9, 3.561218213114834*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Sin", "[", "t", "]"}], ")"}], "^", "2"}], ",", "t"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.561218134755352*^9, 3.561218192344646*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "1.5707963267948888`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5612181931896944`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Sin", "[", "t", "]"}], ")"}], "^", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Elements of the Vector Function, y1\>\""}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"f", "[", "t", "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561217753983573*^9, 3.5612178220984693`*^9}, 
   3.561217949074732*^9, {3.561305994582116*^9, 3.5613060184724827`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFxX0s1HEcAODjrI6t7dg5sxtCtGFTa61ud7oyIZY4643q+KHOqbvzsoo0
q3TXKJ1fMq9dag5rjImTpFu6dewy4yJ33t/lXVznzkv1h8/3j2ePMyZgx5kT
CISz//yf+Nmqc/xo9Ind3WZbGY4vWKzdjbXesf34OXiSwjU04hxY65/5pRwX
wD84+MFSPANm37TXFuDP4dzVK/X5uBRmKIOsfJNrYWFaSHS9sAm+1RSXY+6q
gDUzZywrsK9wlree0HhZBSd6ql4qytWwMSahZpDfBWOfLoRKrnfDMSsaheKJ
Bn56SC6QiXphc4X8WGbaT9jaI7hzuEALB0p93y7jA7Ddkto/Qz4EF31rNiPG
j8BMh1M7+2NHYc8R8sT9lDG4utKG25A0DqcPXe3xFE3Aiczjwa/yJmGj1A+b
k0zBXcKiqDtvpmF6gMv2YNkM3H6aXnmyZBYuryukj737Bdu6evGuVc3B3Wak
h/Yt83ADKVnW1b4Ae9mSeZhyEV7K0VOO9C7BrmKxt4C3DI9F6LS+0+jAyZ6N
Bv4KfDcpjktdQIc0FgdRb6/Ci5u8dKIeXdb34D0/+Tds5PpEpZrQDlu5kYlp
a/BUQHYHyWIdbnNXsxyz0TySzMLZUg/LXx/wactFdzKYSrb1H9jAKw6PykGr
QqXn91ENMEZnVlTkoeMXvq8P5KOFZRw/m0J0huWj0fRSdEl/O40tQ/emXpRs
ytFBzUmpYTp0GN9CJRpEX3LJp7YMo29kfah3n0BnRhAWTfPoVuMzTLaNVtY4
1ekIG7Aaq9shE9G6Dk3Jvb1oQxGtL5SM3gmpdhPZoPcQWSkfKWhKAmbtbo+m
Oa1xImlol57HNRIHtIfYbkvphD7MqAo2OaP/Akr3dkM=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
VAsuYvDDtM0q5QPKL/SWhRepvv8vBP4H2kqjug==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox[
     RowBox[{"f", "(", "t", ")"}], TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"Elements of the Vector Function, y1\"", TraditionalForm],
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 1.5707962947378287`}}, {{
     0, 1.5707963267948966`}, {0., 1.5707962947378287`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5612177721036096`*^9, 3.5612178161571293`*^9, 3.561217949705768*^9, {
   3.561305998698352*^9, 3.5613060195045424`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", " ", "interest"}], ",", " ", 
  RowBox[{
  "the", " ", "legnth", " ", "of", " ", "the", " ", "vector", " ", "as", " ", 
   "a", " ", "function", " ", "of", " ", "time", " ", 
   RowBox[{"is", ":"}]}]}]], "Input",
 CellChangeTimes->{{3.561302970220133*^9, 3.561302991870371*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dist", "[", "t_", "]"}], "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"t", "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sin", "[", "t", "]"}], ")"}], "^", "4"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.561218241276445*^9, 3.5612182912103004`*^9}, {
  3.561218363268422*^9, 3.5612184004075465`*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["t", "2"], "+", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "t", "]"}], "4"]}]]], "Output",
 CellChangeTimes->{3.5612184010525837`*^9, 3.561303066441636*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"dist", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"dist", "[", "t", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561303054416949*^9, 3.5613030648165436`*^9}, {
  3.561305978691208*^9, 3.561305987432708*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
    SqrtBox[
     RowBox[{
       SuperscriptBox["t", "2"], "+", 
       RowBox[{
         SuperscriptBox["sin", "4"], "(", "t", ")"}]}]], TraditionalForm],
  PlotRange->{{0, 10}, {0., 10.004378417446572`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.561303067649706*^9, 3.561305988047743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dist", "[", 
  RowBox[{"Pi", "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.5612184023446574`*^9, 3.5612184085760136`*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{"1", "+", 
   FractionBox[
    SuperscriptBox["\[Pi]", "2"], "4"]}]]], "Output",
 CellChangeTimes->{3.561218409104044*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"Pi", "/", "2"}], "]"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.5612184150403833`*^9, 3.5612184173805175`*^9}}],

Cell[BoxData["1.86209588911858662497013867859605952481`3."], "Output",
 CellChangeTimes->{3.561218417758539*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Sin", "[", "t", "]"}], ")"}], "^", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612175931573744`*^9, 3.5612176037519803`*^9}, {
  3.5612179652736588`*^9, 3.5612179862538586`*^9}, {3.561305967874589*^9, 
  3.5613059733549023`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
wP8C4kyAew==
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1.5707963267948966`}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5612179874379263`*^9, 3.561305973743925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "^", "n"}], "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Sin", "[", "t", "]"}], ")"}], "^", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5612180072870617`*^9, 3.561218110645973*^9}, {
  3.5613032340372224`*^9, 3.5613032380974545`*^9}, {3.561305829611681*^9, 
  3.5613058358410373`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 2, 3, 4, 5}}, Typeset`size$$ = {
    339., {170., 174.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{$CellContext`t^$CellContext`n$$, 
         Sin[$CellContext`t]^2}, {$CellContext`t, 0, Pi/2}, 
        PlotRange -> {0, 1}, AxesLabel -> {$CellContext`x, $CellContext`y}], 
      "Specifications" :> {{$CellContext`n$$, 1, 2, 3, 4, 5}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{394., {217., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.561218033785577*^9, 3.561218058529992*^9}, {
   3.5612180956641164`*^9, 3.561218111091999*^9}, 3.561305838674199*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"The", " ", "following", " ", "function", " ", "is", " ", "a", " ", 
  "scalar", " ", "function", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Rank", " ", "0", " ", "tensor"}], ")"}], ".", "  ", "The"}], " ",
   "domain", " ", "is", " ", 
  RowBox[{
   RowBox[{"from", " ", "[", 
    RowBox[{"0", ",", "1"}], "]"}], ".", "  ", "The"}], " ", "codomain", " ", 
  "is", " ", 
  RowBox[{
   RowBox[{"from", " ", "[", 
    RowBox[{"0", ",", "1"}], "]"}], ".", " ", "The"}], " ", "function", " ", 
  "is", " ", "continuous", " ", "over", " ", "the", " ", "domain", " ", "and",
   " ", "extended", " ", 
  RowBox[{"domain", ".", "  ", "The"}], " ", "function", " ", "is", " ", 
  "smooth", " ", "and", " ", "infinitely", " ", 
  RowBox[{"differentiable", " ", ".", "  ", "It"}], " ", "is", " ", "also", 
  " ", "square", " ", 
  RowBox[{"integrable", "."}]}]], "Input",
 CellChangeTimes->{{3.561217721860736*^9, 3.561217730773246*^9}, 
   3.561218461887063*^9, {3.561303155023703*^9, 3.561303158031875*^9}, {
   3.561303228728919*^9, 3.561303232260121*^9}, {3.5613032727474365`*^9, 
   3.561303350771899*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y2", "=", 
  RowBox[{"x", "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.5612177059808273`*^9, 3.561217720461656*^9}, {
  3.561305741811659*^9, 3.561305742970725*^9}}],

Cell[BoxData[
 SuperscriptBox["x", "2"]], "Output",
 CellChangeTimes->{3.561218475391835*^9, 3.56130574339775*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"The", " ", "domain", " ", "of", " ", "this", " ", "function", " ", 
  RowBox[{"is", " ", "[", 
   RowBox[{"0", ",", "1"}], "]"}], " ", "and", " ", "the", " ", "codomain", 
  " ", 
  RowBox[{
   RowBox[{"is", " ", "[", 
    RowBox[{"0", ",", "1"}], "]"}], "."}]}]], "Input",
 CellChangeTimes->{{3.5612184856524224`*^9, 3.561218499655223*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"y2", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<y2=\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561217605068056*^9, 3.5612176074711933`*^9}, {
  3.5612184733277173`*^9, 3.5612184821522217`*^9}, {3.5613057455658736`*^9, 
  3.561305791510502*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
l0zPzRHYjtWjv/N/9SW6zA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"y2=\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\"", TraditionalForm],
  PlotRange->{{0, 1}, {0., 0.9999999591836739}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5612184831722803`*^9, {3.5613057541833663`*^9, 3.5613057922675447`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"B", ":"}]}]], "Input",
 CellChangeTimes->{{3.5612175456006546`*^9, 3.5612175466517143`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Strange", "[", "x_", "]"}], "=", 
  FractionBox[
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "+", 
    RowBox[{"Cos", "[", "x", "]"}], "+", 
    RowBox[{"Exp", "[", "x", "]"}]}], 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     RowBox[{"x", "^", "2"}]}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.5613034014537983`*^9, 3.5613034117013845`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], "+", 
   RowBox[{"Cos", "[", "x", "]"}], "+", 
   RowBox[{"Sin", "[", "x", "]"}]}], 
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], "]"}]]], "Output",
 CellChangeTimes->{3.5613034136224937`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Strange", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.5613034148515644`*^9, 3.561303422469*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.5613034189357977`*^9, 3.5613034231940413`*^9}}],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{{3.561303418936798*^9, 3.5613034231960416`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "function", " ", "is", " ", "not", " ", "defined", " ", "at", 
   " ", "the", " ", "origin"}], ",", " ", 
  RowBox[{
  "otherwise", " ", "the", " ", "limit", " ", "would", " ", "be", " ", 
   "simple", " ", "to", " ", 
   RowBox[{"compute", ".", "  ", "Because"}], " ", "the", " ", "function", 
   " ", "goes", " ", "to", " ", "zero", " ", "over", " ", "zero"}], ",", " ", 
  RowBox[{"it", " ", "is", " ", "possible", " ", "to", " ", "apply", " ", 
   RowBox[{"L", "'"}], 
   RowBox[{"Hospotal", "'"}], "s", " ", 
   RowBox[{"Rule", ".", "  ", "This"}], " ", "Rule", " ", "indicates", " ", 
   "that", " ", "the", " ", "limit", " ", "of", " ", "the", " ", "function", 
   " ", "can", " ", "be", " ", "evaluated", " ", "by", " ", "observing", " ", 
   "the", " ", "limit", " ", "of", " ", "the", " ", "ratio", " ", "of", " ", 
   "the", " ", "derivatives", " ", "of", " ", "the", " ", "numerator", " ", 
   "and", " ", "denominator", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"sans", " ", 
      RowBox[{"Product", "/", "Quotient"}], " ", "Rule"}], ")"}], 
    "."}]}]}]], "Input",
 CellChangeTimes->{{3.5613034279313126`*^9, 3.561303495335168*^9}, {
  3.5613035290750976`*^9, 3.5613035904206066`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", 
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Exp", "[", "x", "]"}]}], 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "2"}]}], "]"}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.5613036135549297`*^9, 3.5613036164560957`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], "+", 
    RowBox[{"Cos", "[", "x", "]"}], "-", 
    RowBox[{"Sin", "[", "x", "]"}]}], 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], "]"}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], "+", 
      RowBox[{"Cos", "[", "x", "]"}], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], "]"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.5613036168301167`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "For", " ", "interest", " ", "into", " ", "the", " ", "true", " ", 
   "derivative", " ", "of", " ", "the", " ", "function"}], ",", " ", 
  RowBox[{"it", " ", "is", " ", "computed", " ", "here"}], ",", " ", 
  RowBox[{
  "although", " ", "it", " ", "does", " ", "not", " ", "assist", " ", "in", 
   " ", "solving", " ", "this", " ", 
   RowBox[{"problem", "."}]}]}]], "Input",
 CellChangeTimes->{{3.5613036808557787`*^9, 3.5613037092334023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", "x", "]"}], "+", 
      RowBox[{"Exp", "[", "x", "]"}]}], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       RowBox[{"x", "^", "2"}]}], "]"}]], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5613036207243395`*^9, 3.5613036283337746`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}], "]"}], "2"]}]]}], "-", 
  FractionBox[
   RowBox[{"2", " ", "x", " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], "]"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "x"], 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], "]"}]], "+", 
  FractionBox[
   RowBox[{"Cos", "[", "x", "]"}], 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], "]"}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "x", " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], "]"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", "x", "]"}], 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], "]"}]]}]], "Output",
 CellChangeTimes->{3.5613036293978357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Full", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "+", 
       RowBox[{"Cos", "[", "x", "]"}], "+", 
       RowBox[{"Exp", "[", "x", "]"}]}], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        RowBox[{"x", "^", "2"}]}], "]"}]], ",", "x"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5613036335310717`*^9, 3.5613036454617543`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], "]"}], "2"]], 
  RowBox[{"Full", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "x"], "+", 
        RowBox[{"Cos", "[", "x", "]"}], "-", 
        RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"2", " ", "x", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "x"], "+", 
         RowBox[{"Cos", "[", "x", "]"}], "+", 
         RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.561303646454811*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "+", 
       RowBox[{"Cos", "[", "x", "]"}], "+", 
       RowBox[{"Exp", "[", "x", "]"}]}], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        RowBox[{"x", "^", "2"}]}], "]"}]], ",", "x"}], "]"}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5613035942258244`*^9, 3.561303611957838*^9}, {
  3.561303656781402*^9, 3.561303657359435*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellChangeTimes->{{3.5613036549893*^9, 3.5613036580484743`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Finally", ",", " ", 
  RowBox[{"the", " ", 
   RowBox[{"L", "'"}], "Hospital", " ", "derivative", " ", "is", " ", 
   RowBox[{"computed", "."}]}]}]], "Input",
 CellChangeTimes->{{3.5613037176338825`*^9, 3.5613037321997156`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", 
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Exp", "[", "x", "]"}]}], ",", "x"}], "]"}], 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "2"}]}], "]"}], ",", "x"}], "]"}]]], "Input",
 CellChangeTimes->{{3.561303735540907*^9, 3.5613037546920023`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], "+", 
     RowBox[{"Cos", "[", "x", "]"}], "-", 
     RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], 
  RowBox[{"2", " ", "x"}]]], "Output",
 CellChangeTimes->{3.561303755650057*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  FractionBox[
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", "x", "]"}], "+", 
      RowBox[{"Exp", "[", "x", "]"}]}], ",", "x"}], "]"}], 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       RowBox[{"x", "^", "2"}]}], "]"}], ",", "x"}], "]"}]], "]"}]], "Input",
 CellChangeTimes->{{3.561303764128542*^9, 3.561303766741691*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "x"], 
   RowBox[{"2", " ", "x"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}], "2"], "+", 
  FractionBox[
   RowBox[{"Cos", "[", "x", "]"}], 
   RowBox[{"2", " ", "x"}]], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "x", " ", 
   RowBox[{"Cos", "[", "x", "]"}]}], "-", 
  FractionBox[
   RowBox[{"Sin", "[", "x", "]"}], 
   RowBox[{"2", " ", "x"}]], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "x", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.5613037671117125`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", "x", "]"}], "+", 
      RowBox[{"Exp", "[", "x", "]"}]}], ",", "x"}], "]"}], 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       RowBox[{"x", "^", "2"}]}], "]"}], ",", "x"}], "]"}]], "]"}]], "Input",
 CellChangeTimes->{{3.5613037687198043`*^9, 3.561303772431017*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], "+", 
     RowBox[{"Cos", "[", "x", "]"}], "-", 
     RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], 
  RowBox[{"2", " ", "x"}]]], "Output",
 CellChangeTimes->{3.5613037741341143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "+", 
       RowBox[{"Cos", "[", "x", "]"}], "+", 
       RowBox[{"Exp", "[", "x", "]"}]}], ",", "x"}], "]"}], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        RowBox[{"x", "^", "2"}]}], "]"}], ",", "x"}], "]"}]], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5613037812685223`*^9, 3.5613037870068502`*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.5613037875658827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", 
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Exp", "[", "x", "]"}]}], 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "2"}]}], "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*FractionBox[\(Sin[x] + Cos[x] + Exp[x]\), \(Log[1 + \
x^2]\)]\)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560985021260578*^9, 3.5609850371924896`*^9}, {
  3.561305727632848*^9, 3.5613057331331625`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVl3c81d8fx++1siq5kWwSUdkNUZ9PdpFkN0RGESFCiZCZhpCR6ptRVjIa
QnifQlnZMyPr3g8qO5v7u7+/zuP51znn9Xq93+9zJOzcTRyZSCSSBZlE+v8a
QJyapdMp6HtkhcjtqG6Mdpv/X+8aBf2w3NHlfLcbM+L5tfhpmYLabZU99f26
MXE1j3X3OQrKi1g363Duxr5GxbIP0ihIQmWSLK/fjbHLd4miHxTEfSGxvI/c
jT25YWsQ9IyCpmdVUjHnLmydXdboQhIFhe4dq5C36cIuv5gxPhxPQbxOchxb
zLuwQ9/uWkw/oiA/ySn5F3gX9nPH60u2dylI5O113g3+Lkz887gv7kxBnA83
/jSgTuwN2esV6RAF1WzInixi78QOm+awPVWhIKl/EvlvVzuwb6+GnJQUKeis
ftlK7GQHNqhnvN9OloJi3ZnPybR3YPyP9hdVClHQdbPYGt//OrC7gmPfw0kU
lOqqwlGm0IFZqVj/5q7jRVKeuo+WtdsxVkc95Z3WvOi14YmwbPVWrPWikuXv
s7yoneAt8djbiv1nJeRfbsGLxFLd7ssKtWIHDaeqLxnzopxZx90eKy3YZZXE
szlavEjEYnj4THELVkMmgtTleFGEvoXWNaUW7MF/4U3Wi9sQ5+rPoyo7mzFK
d7VrWsw2NBpulicdXI+ZVCbby9bxoD/Lc+9klL9gt6eOuj4e2YoSXgQk7wxK
w4p9k6/mn96CeN7nyrwSKwCjWHPxjafcaLohSE/O+RvovSg30v/DiSTaHvcH
nm6FjO+3Or3Oc6Dezro9/yq74WLoE76mrE1IRq9y5+qZX3DHljmPi8KGygYD
DxD2w1DQpPeonZsNnWdti2q+NgzDxx64vWBjQxofjou+9x0GXRE+BYUVVnTR
v2LY/v4wbPkpXWAyxIp8Xbl2er0bhv9MT757ms+Kvvb7/T1OHwbQjSmSMWRF
wQ9+BbvFjcDsx46EaR1W9J6zL/n68xGQ2i3oW4KxopNRZRzXXo9AJHP6IQMV
VnSqurje8NMIGKMPxW6CrGj9mgRv/s8RGFTrLv04xoLqZO7IL4mNAmm/GGiF
saCNN7svO70aBX/+4xfD7rCg/MbAm3xvR2GRbrf+zZcFlSPtq8UfR2GyNUP9
5FUW1PQfU/Wvb6PQe1O+2Pg0C7p8VFTn/dgoFFUdLbTeyYKm9Te3OMhR4dqF
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
w/8HiYla0Q==
     "]], LineBox[CompressedData["
1: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
j2Y=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"\\!\\(\\*FractionBox[\\(Sin[x] + Cos[x] + Exp[x]\\), \\(Log[1 + \
x^2]\\)]\\)\"", TraditionalForm],
  PlotRange->{{-5, 5}, {-0.7397805614801761, 46.73066470828262}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5609850381855464`*^9, 3.5613057335321856`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", 
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Exp", "[", "x", "]"}]}], 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "2"}]}], "]"}]], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560984968891583*^9, 3.560985050021223*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.560985050801268*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"The", " ", "left"}], "-", 
  RowBox[{"hand", " ", "limit", " ", 
   RowBox[{"is", ":"}]}]}]], "Input",
 CellChangeTimes->{{3.5612185464969025`*^9, 3.5612185541393394`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", 
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Exp", "[", "x", "]"}]}], 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "2"}]}], "]"}]], ",", 
   RowBox[{"x", "\[Rule]", "0"}], ",", 
   RowBox[{"Direction", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612185321270804`*^9, 3.561218535916297*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.56121853649333*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"The", " ", "right"}], "-", 
  RowBox[{"hand", " ", "limit", " ", 
   RowBox[{"is", ":"}]}]}]], "Input",
 CellChangeTimes->{{3.5612185598516665`*^9, 3.561218568027134*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", 
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Exp", "[", "x", "]"}]}], 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{"x", "^", "2"}]}], "]"}]], ",", 
   RowBox[{"x", "\[Rule]", "0"}], ",", 
   RowBox[{"Direction", "\[Rule]", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.561218558019562*^9},
 FontWeight->"Plain"],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.561218570905298*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Looking", " ", "at", " ", "a", " ", "plot", " ", "of", " ", "this", " ", 
   "function", " ", "and", " ", "evaluating", " ", "the", " ", "left", " ", 
   "and", " ", "right", " ", "hand", " ", "limits", " ", "indicated", " ", 
   "that", " ", "the", " ", "limit", " ", "diverges", " ", "to", " ", 
   "positive", " ", "infinity", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"does", " ", "not", " ", "exist"}], ")"}], ".", "  ", "This"}], 
   " ", "comes", " ", "from", " ", "the", " ", "misbehavior", " ", "of", " ", 
   "the", " ", "logarithm", " ", "in", " ", "the", " ", "denominator", " ", 
   "around", " ", "x"}], "=", "0."}]], "Input",
 CellChangeTimes->{{3.561218583007991*^9, 3.561218651214892*^9}, {
  3.561303801766695*^9, 3.561303815197463*^9}}],

Cell[BoxData[
 RowBox[{"<<", "PlotLegends`"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Exp", "[", "x", "]"}], ",", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       RowBox[{"x", "^", "2"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegend", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Sin[x]\>\"", ",", "\"\<Cos[x]\>\"", ",", "\"\<Exp[x]\>\"", ",", 
      "\"\<Log[1+\!\(\*SuperscriptBox[\(x\), \(2\)]\)]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.56121865275998*^9, 3.561218679556513*^9}, {
  3.5612189150529823`*^9, 3.5612189572043934`*^9}}],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    GraphicsBox[{{}, {}, 
      {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwt1Gs01Hkcx3ElqVGKXe1OGsqtqJ11qXEi+7WlDpkRUpQ0sUWbikgGuyJ2
ydGyIWrZtgZb6oxLF4eGbyYalTSWyWQYZsy4/GT+0k2qbe05Pfic17PPw/eK
sCj/A7N1dHQ4M/tfJiwhnz5RmLTEMS1gnGDUO8vMd9MUZnDNrUsIwaobDjYv
X1OYKrJkaIYJOq7ihA2NUeiYentRrIqgs1F6T1s3hYk8jU5GN0H3wRcPz1dS
mNOYZpHTRNA/4/E1Jy6FDmbRvcsLCMY/ST8S0ajF+Gr6XB8Xgl1dBqQpdBzn
bM4pyzo8ioy7UV86L3uO7Gz39nuXRvBWZLPeoj6CzKPhHHbHMO7Ldph4dmoU
A3wf5d9SD+HU2aRMhBFcFtyeGvevBvmGCnqRcghrCvvohu/VWLzVIabztAaF
D38qkU4O4qnDoTxbLzVKXKOrvn+lwiTdiviYcRVefuKQLelWYmjKE6unV5QY
Z1g4Lb0/gAUNmqLiQwOYZ7ZcGvxjP9b3r1pw3UKBc78239Qwrw8tF7tvDPhT
jqCgPSPNPVhjl3lINShDydoN23keMuxvqV7OYj3F66pYE2yWomZNgSPe7kTP
LK6jX0QnGiVfZTFndSAv5ddIq3YJrmFRa8petuE3hUzn4pttmOYxLqnjibE+
x6neNFCMJgGC3F1fiXDWp7lLJ/VFWPOmZVGrVT3a+E7ErKTXY5lcc2Y0XYDe
O+U7vVIEGOK37Kb8h3wMKU4OT5uxjpYkFcXlQYrC3fjEjOtUs8xSgyrBcP42
4+TtlWA5ceedi6gOclRRKtPaOvDiP3vsEySC328G2YOnCDZzjHVf3xJDw8r7
0Zw8MeRwu1Psa9sgwqPqN0FCG4h9GAt9jTvA6o110zWFBMZXmCT/c6ETDOLr
GTfYnRB3fHVozpKnQGMnPJgql0J372L/8FYZ6FoEH9FfLYN9CRuG9dlyePSe
OfZFYg/cW+2cdU9PAUPsNpu32l6wmS8cKfUcAGHQxmI6sx8YwsjNeplKmLIY
jZBXDIDO9OyrMSoV5B5bYChoV8Jbv4a9LdZqOH/RdldNtwrka7mm1ukaCLCe
sNyvHYTowMVGFr1DELuT9a32jRro+eqgOYwRYJ3l7GJqNCAI/uvvl7xRcHHq
ePigbwgC3U56tjYQqPKoqAgRDkP13iMWLh/GILH2+FL2mRGYom3SrdsxDheH
d4+vPzAK/h2uLEaRFkh5ery3FQGaq0GTsEQLrwIL2KdXEmgq7fHew9fCybdq
//t2BOx5CaF/CLSw/XLPpJsDAUPz2mx6ixZcjwb8bPkdgQeHHQdNJrVA0d3K
xYEE3OfZ5hqyKVhXsrAwNovA1LGppQI/Co5LFGGFZwhUysVlnEAKbO1b99Tn
EjCrDL+THUbBc3ZKz8dzBD7sKB2iJVBA+XRMJ/IJ1PLN3fTLKfDghtdxhASO
LqTE5dcoAFPb4P1IwCa+0X9L9cz/jkTbRBGB/K0hB38RUqDXEO7NbyUQ8+JC
nm4nBR+NGi+NdRGwCz5kxpdREOTtXfa+m4Cyef3VjQoK5CWlXTQ5Ad8iWWPq
KAXOst23bZQE5s2+4rWCoiA0LuOgk5oARsZ33X1FQeA58y0wTOCEdAt33zQF
djYG27YSAp/7BZ/7Bf8B10WQvQ==
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
kP8Bx9pABw==
        "]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwtlGs01GkcgKeZ+buMZHRQKkoui7HSja3Z+r3dbIRQGnuUQRcd0pSytJTL
Tu20qxVRk82u3ZHYWhrUHLm85Ta21dKOzDAatxkZZf5EMnKyu+fsh+c8X57P
j10UL/golUKh+P/Lf3YHq9H5eRKzD/p5H/heDjy9vUA/S+Kppj1GxllyuF+5
1mnyHYkLKVRubY4c1jn7Rw2/JnHdkfGnDvly8DLn97TJSczsPvzzXIkc0NDE
05vlJE7xc9nb2iKH4G+f3V3PJbEl04zXQVVAYjs/Lrpehw3Y6UMlKQro7DQZ
fRI5hlu6fjix8Uo32DzmWXiteIM3Bphxoq73wIPYJsLs5Sg2OH7066dFSojI
XDvenaHF03M+Bl909cJMTrIAwwimSMROO+ZfgmiRylo4MIwNGw0eFwT0wS3f
tfGyyxrctsX71MJ9/ZBxIjLJxUeNXSQKk359PyTTfkuMHxvEJ02it+59OACR
ae0OXSUDOOb0npU34gYhr04jvBXTjxu33jp11nkIHvU5L7y3WoUb7FgDeR+G
wJ6Jtu//SYmjPVmEtFUNFa6CmMEhBTa0w5+m39dAX7N4ladnF6Y5WC5sLxgG
jVveOvxQhr2SChIQ/xWYXyj1dF/wHFfUxxzMEYyAmyfpdnuyDSfIjPrFF7Xw
zc6xjuokKWZvZ+1ME42C5f6yq18uacDDj1JDd7S+horpZrNWh0fYOK/xVaX6
DdxWaq5o+WWY9z7CadpRB4eCVlQpD+di6+UShwvhJFQzkl80JFyD7PZjwryA
cdg4uMA2PbQcLHqNVTepE2A/XqPf3FANE7YOkdfFE+Aj6n4WENoAXp1FqR6J
b2GX/2LauwdS+FOVEpC9bRKyuPI0D0kbGB+IfmZnMAXSABvTwMXP4a+s38Nd
1VMwZmd54e98GeyLCJywrn0HCWdZkVlWXVA3nle9VTgN8l5m8LFWBQg6UqVz
V99DxLnPXxn6KSHZlMOrypiBRpbXd42ECrz1sm3ia3pwMq4dKdrdD8XFrr6B
BbNgUxu7ixAMQHaAkXDNvQ9AmaWWxg8OQseKtDseqjl4H1QX3uyohvz7Xcsr
DT+CcgN3uSNfAwVsK3cRZx5OcZjmq3uHwZ5/4+hLDgVZ56pD6TYj8Eu7dhVl
noLKwgrvTCZpwUIQFCutWYA4W1J3t9aNQjK3Kuz4GSoSh8et3jz3GqrYvJhf
3WlohrGDVh0yBg17c11YVDoKfs72tBHqwG2p0cWmdjpisE2e1BboQH9YxIyT
0dGTop49B0U66PPtR1ZyOvJIOhf5Y5kO4sUVWTEqOlq0UpJp3awD+hmNdtkY
Hf1xYt2Q5VsduDDHS/MZBEJGLlcX+ZFgP8l0XOJNoJnTM8vKgkhoke8/3+lD
oHKl9LY/h4T1nMHzOf4Esi0/VpMZRQIrLTCJGUKguZCiYcY5Ej6aS0IsjhBI
Ilq5xbCYhEumd9vYGQQ6aUpKi++SsHTstIR2iUBOifXB3mIScljhfm2XCZTr
e+j4xdp/+zjbBG42geIn8q/RZCRsa+E3XykkkGtYjK1IQYL5pjp6WBGBBpo2
lW5XkeCrZpDOJQQKFCrq07UkfNgQ3txSTiAjaomPHUmCM7NQfL2SQDg2sfPx
FAlrsng+0RICffXCmxsxS8InPaOZn9UQ6P9/QYKtRwoDE+gfyFFhEQ==
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJw1l2c4FXzAxkVFZFUqhWSFSsSj5HHuiiQloxKJkJWRkRnZZYSEZGWEkLIl
kr/5IJSdjGScE8o5pDJab+91ve+H+7q/3N9/92+nuaOeJTMTE9Ovv/nflsHm
mT9/GETIi2f6qAwNjsuiocsrDJJ1QzTkXykaikrlJBa+MUipqr64ohgN+yW1
zGmfGETFJMlcahsNB3iDB9vfMkgK//ZJ7rU0HJ6Yf5VYyCBVbiI7Rkao0Avp
yJe/xCDKsUGGXpFUeLwJdrCuoZPdlp/kaz9PoreXY6bObJZ0LTR5dEZPQLDW
cdMBgc9kUW7toJTWOMrtGtdwj8yQ77nMGUW8YzCNkJt7FzhNMtq6wl74jGIp
xjuUYIrU+JnsDmcfQSbXe/6EMRqR5WvJHHcYRIqmnEtPGJUMD/O3TEy/RaC9
mafUiUkiyaVRmpLaB2+Wxx4us+Mk3ru2WkK+B2b+b8T6c8fIvkdq029YunDv
JTUhxfYDUXjIZFX3sQNVo5Lrn4i8J8EtIbXLGa0Q5Tl89GzqEHmY4CmyargJ
JdKhtuMTA8TLjOeuHms9RpuKhRUV+0nbR/9b9oIvQd1zbz951kNKT91ST1ao
AK9vnqLMqi4yFqBlHOBejD2KjD3ZC+1kQ9T5jS9u58FKxs+vcqSdxK+jz3FY
5SFNgru7o7mdvNvln+p+OA8btuzz+J7cTpg+iwQkfsvF4uLVuuNq7STgahjb
ZrNc1FfSz83EtRGT4m+KjH9zYKBC992n+IoI5nWJa7JlI0httrPSs5lQL7oK
D9DTUa/xWVvhcjNhvd7wzrAzHUxan14XaDUTad2tzd+K0+Fzbro9U6SZyGyb
1vFxS4e7FbUlsv0/ot3782TYjzTYhI7Umgn/RzqMr41HSKTiVHtH0bqWRtJ5
+rO+cVYSwjvb9wWXNBLtpT/1fxyS0NLbVvA7pZGEOn+tensgCcdGWp8sODcS
725eZ8n2RFDoTbkj2xuJb78HTWsxAbI8NenFjg3EZuLTpaLz98F3tiDacEs9
MRQt1+Q8EocSidtVx1jqScqciFPGpjjoLFtPyjHqyI3/ZDdaTsUiPHXnQfbm
OvL617ZP16Nj8XsqbrTKvY6snze8MzYeA9oNbxmB/loyFs34nRZ9F1e17ya8
lCLEvlK4nk84CrlfNT/fW0VItI9TqUJPJMYTVx+++q6GPEs6s6XsViT0Jz0+
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
pWGSKUnD//k7/t/f/wevevhi
        "]]}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->True,
     AxesOrigin->{0, 0},
     DisplayFunction:>$DisplayFunction,
     FormatType->TraditionalForm,
     PlotRange->{{-1, 1}, {-0.8414709627547404, 2.7182817175087686`}},
     PlotRangeClipping->True,
     PlotRangePadding->{
       Scaled[0.02], 
       Scaled[0.02]}], {-1, -0.6180339887498948}, {
    Left, Bottom}, {2, 1.2360679774997896`}], GraphicsGroupBox[{
     {GrayLevel[0], 
      RectangleBox[{-1.15, -0.8680339887498949}, \
{-0.5946280991735535, -0.06803398874989493}]}, 
     {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
      GraphicsGroupBox[{
        RectangleBox[{-1.2, -0.8180339887498949}, \
{-0.6446280991735536, -0.018033988749894925`}], InsetBox[
         GraphicsBox[{{{InsetBox[
              GraphicsBox[
               {Hue[0.37820393249936846`, 0.6, 0.6], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"Log[1+\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)]\"\>", {1.2100000000000002`, 0.58}, {-1, 0}, Automatic, {1, 
              0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.1421359549995791, 0.6, 0.6], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"Exp[x]\"\>", {1.2100000000000002`, 1.74}, {-1, 0}, 
              Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.9060679774997897, 0.6, 0.6], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 2.4}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"Cos[x]\"\>", {1.2100000000000002`, 2.9}, {-1, 0}, 
              Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[
               {Hue[0.67, 0.6, 0.6], 
                LineBox[{{0, 0}, {1, 0}}]}], {0.08, 3.56}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"Sin[x]\"\>", \
{1.2100000000000002`, 4.0600000000000005`}, {-1, 0}, Automatic, {1, 0}]}}, {}},
          AspectRatio->1.44047619047619,
          FormatType->TraditionalForm,
          
          PlotRange->{{-0.1, 3.26}, {-0.1, 
           4.739999999999999}}], {-1.2, -0.8180339887498949}, {Left, Bottom}, 
         {0.5553719008264464, 0.7999999999999999}]}]}}]},
  AspectRatio->Automatic,
  Background->None,
  ColorOutput->Automatic,
  ImageSize->Automatic,
  PlotRange->All]], "Output",
 CellChangeTimes->{{3.561218675219265*^9, 3.561218679959536*^9}, 
   3.5612189593735175`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"C", ":"}]}]], "Input",
 CellChangeTimes->{{3.5612175524040437`*^9, 3.561217553253092*^9}}],

Cell[BoxData[
 RowBox[{"The", " ", "infinite", " ", "product", " ", "can", " ", "be", " ", 
  "rewritten", " ", 
  RowBox[{"as", ":"}]}]], "Input",
 CellChangeTimes->{{3.5613038411679487`*^9, 3.561303853067629*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Product]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "n"}], "-", "1"}], ")"}], 
   RowBox[{"2", "n"}]]}]], "Input",
 CellChangeTimes->{{3.5609850719364767`*^9, 3.560985098373989*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5609851244824824`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"The", " ", "correct", " ", "way", " ", "to", " ", "discuss", " ", 
  "the", " ", "infinite", " ", "product", " ", "in", " ", "this", " ", 
  "context", " ", "is", " ", "to", " ", "say", " ", "that", " ", "the", " ", 
  "infinite", " ", "product", " ", "diverges", " ", "to", " ", 
  RowBox[{"zero", "."}]}]], "Input",
 CellChangeTimes->{{3.561219006637221*^9, 3.5612190267333703`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "To", " ", "understand", " ", "why", " ", "this", " ", "is", " ", "the", 
   " ", "case"}], ",", " ", 
  RowBox[{
  "a", " ", "careful", " ", "examination", " ", "of", " ", "the", " ", 
   "value", " ", "of", " ", "each", " ", "term", " ", "is", " ", 
   RowBox[{"required", ".", "  ", "The"}], " ", "integer", " ", "values", " ",
    "are", " ", "the", " ", "most", " ", 
   RowBox[{"critical", ".", "  ", "The"}], " ", "funcion", " ", "starts", " ",
    "by", " ", "generating", " ", 
   RowBox[{"(", 
    RowBox[{"1", "/", "2"}], ")"}], " ", "and", " ", "multiplying", " ", "it",
    " ", "by", " ", 
   RowBox[{"(", 
    RowBox[{"3", "/", "4"}], ")"}]}], ",", " ", 
  RowBox[{"then", " ", 
   RowBox[{"(", 
    RowBox[{"5", "/", "6"}], ")"}], " ", "then", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"7", "/", "8"}], ")"}], ".", " ", "and"}], " ", "so", " ", 
   RowBox[{"on", ".", "  "}]}]}]], "Input",
 CellChangeTimes->{{3.5613038693765616`*^9, 3.5613038915898323`*^9}, {
  3.561304465626665*^9, 3.56130455872799*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"2", "n"}], "-", "1"}], 
      RowBox[{"2", "n"}]], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<y1=\!\(\*FractionBox[\(2  n - 1\), \(2  n\)]\), y2=1\>\""}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.56121687293318*^9, 3.5612169343236914`*^9}, {
  3.561305662089099*^9, 3.5613057099208345`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
NdXku2Jyw/zKCg4tyY2a4vj+H0eA6vs=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbYdAxh8sGe//Uj9rfxJexh/4an5ha/l
b8L569Z33s7RewXnp9tfnPmm6DOcn/dU8/GWdT/hfC7FFvX7FgwOMH6fwGmt
hQnMcH7S7ZD9zGfY4PzCoy1J+epccP7GAp5gCU9eOH9hdfYrg3ABOL9p/p/A
L28E4XyGyw8c9lQJw/lqJWkVIVqicP6Tr9PDuPeKwfleT7NqJxVKwPl+TyZo
y8lJwfmvDic1nFgrDefrCV6TdY6XhfO57L8m3vksB+e7v436rhSqAOffOJTC
GKWjCOdv7TgSp/AVwU9jLX1w7pwSnJ9cVL2VZ5YynK+frn3OJ1EFzj8vpMNd
aqkK5+9e1zRbh1kNzq9m1Ao4cxfB57pT5ZG3RR3Of7pMccr8Gg04f4qGJMvO
UE04f8KstOOJClpwftSU2HM8zxH8Hy5Lf87fpw3nP37qVHGoXQfOX2RrKH02
URfOX9taKpiuqwfnt4cmezN/RfBN7yxc2X5WH86foTl77VlvAzi//kDvDO+d
CL6vdOjSUyqGcL5j3vFowU4Ef75MksqZrwi+yuHl0/yijRD+0z2kdWkfgp/2
meXiSS1jOD9p4yeFzn4Ef8Ilnt4jxxH8fZ/Vfv7/j+ADAIh78Z8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"y1=\\!\\(\\*FractionBox[\\(2  n - 1\\), \\(2  n\\)]\\), y2=1\"", 
    TraditionalForm],
  PlotRange->{{0, 20}, {-1.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.561216888480069*^9, 3.561216935409754*^9}, {
  3.5613056858394575`*^9, 3.561305711122904*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"A", " ", "method", " ", "to", " ", "rewrite", " ", "the", " ", 
  "infinite", " ", "product", " ", "of", " ", "a", " ", "certain", " ", 
  "number", " ", "of", " ", "terms", " ", "is", " ", "to", " ", "recall", " ",
   "the", " ", "gamma", " ", 
  RowBox[{"function", ".", "  ", "Relating"}], " ", "the", " ", "gamma", " ", 
  "function", " ", "to", " ", "the", " ", "infinte", " ", "product", " ", 
  "is", " ", "fascinating", " ", "because", " ", "it", " ", "reiterates", " ",
   "the", " ", "connection", " ", "of", " ", "the", " ", "integral", " ", 
  "convergence", " ", "tests", " ", "for", " ", 
  RowBox[{"series", ".", "  ", "This"}], " ", "infinite", " ", "product", " ",
   "can", " ", "be", " ", "rewritten", " ", "as", " ", "an", " ", "infinite", 
  " ", 
  RowBox[{"series", "."}]}]], "Input",
 CellChangeTimes->{{3.561219525778914*^9, 3.5612196382273455`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  RowBox[{
   UnderoverscriptBox["\[Product]", 
    RowBox[{"n", "=", "1"}], "x"], 
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "n"}], "-", "1"}], ")"}], 
    RowBox[{"2", "n"}]]}]}]], "Input",
 CellChangeTimes->{{3.561216947167426*^9, 3.561216959452129*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Gamma", "[", 
   RowBox[{
    FractionBox["1", "2"], "+", "x"}], "]"}], 
  RowBox[{
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "x"}], "]"}]}]]], "Output",
 CellChangeTimes->{3.561216963238345*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "When", " ", "each", " ", "term", " ", "is", " ", "multiplied", " ", "by", 
   " ", "successive", " ", "terms", " ", "which", " ", "are", " ", "larger"}],
   ",", " ", 
  RowBox[{
  "the", " ", "number", " ", "decreases", " ", "and", " ", "in", " ", "the", 
   " ", "infinte", " ", "limit", " ", "goes", " ", "to", " ", 
   RowBox[{"zero", ".", "  ", "This"}], " ", "sysstem", " ", "is", " ", 
   "analogous", " ", "to", " ", "the", " ", "problem", " ", "of", " ", 
   "being", " ", "1", " ", "foot", " ", "away", " ", "from", " ", "the", " ", 
   "wall", " ", "and", " ", "sequentially", " ", "taking", " ", "steps", " ", 
   "equal", " ", "to", " ", "half", " ", "of", " ", "the", " ", "distance", 
   " ", "remaining", " ", "from", " ", "you", " ", "to", " ", "the", " ", 
   "wall", " ", "to", " ", "get", " ", "to", " ", "the", " ", 
   RowBox[{"wall", ".", "  ", "In"}], " ", "any", " ", "finite", " ", 
   "limit"}], ",", " ", 
  RowBox[{
  "it", " ", "seems", " ", "that", " ", "you", " ", "will", " ", "never", " ",
    "reach", " ", "the", " ", "wall"}], ",", " ", 
  RowBox[{"however", " ", "in", " ", "the", " ", "infinite", " ", "limit"}], 
  ",", " ", 
  RowBox[{"you", " ", 
   RowBox[{"do", ".", "  ", "This"}], " ", "infinite", " ", "product", " ", 
   "represents", " ", "the", " ", "same", " ", "problem", " ", "by", " ", 
   "using", " ", "multiplication", " ", "to", " ", "relate", " ", "the", " ", 
   "distance", " ", "you", " ", "step", " ", "as", " ", "a", " ", "certain", 
   " ", "fraction", " ", "of", " ", "the", " ", "distance", " ", "of", " ", 
   "the", " ", "last", " ", 
   RowBox[{"step", ".", "  ", "These"}], " ", "steps", " ", "are", " ", 
   "getting", " ", "smaller", " ", "and", " ", "smalle"}], ",", " ", 
  RowBox[{
  "as", " ", "the", " ", "distance", " ", "from", " ", "the", " ", "final", 
   " ", "destination", " ", "gets", " ", "smaller", " ", "and", " ", 
   "smaller", " ", "as", " ", 
   RowBox[{"well", ".", "  ", "In"}], " ", "essence", " ", "it", " ", "tells",
    " ", "you", " ", "how", " ", "far", " ", "you", " ", "are", " ", "from", 
   " ", "the", " ", "origin", " ", "and", " ", "tells", " ", "you", " ", 
   "how", " ", "far", " ", "you", " ", "have", " ", 
   RowBox[{"left", ".", " ", "In"}], " ", "this", " ", "example", " ", "the", 
   " ", "distance", " ", "stepped", " ", "is", " ", "not", " ", "the", " ", 
   "same", " ", "fraction", " ", "of", " ", "the", " ", "distance", " ", 
   "taken", " ", "in", " ", "the", " ", "last", " ", 
   RowBox[{"step", ".", " ", "Another"}], " ", "way", " ", "to", " ", "think",
    " ", "about", " ", "it", " ", "is", " ", "to", " ", "consider", " ", 
   "that", " ", "even", " ", "though", " ", "the", " ", "numbers", " ", 
   "multiplied", " ", "in", " ", "each", " ", "term", " ", "are", " ", 
   "getting", " ", "larger"}], ",", " ", 
  RowBox[{
  "there", " ", "are", " ", "an", " ", "infinite", " ", "number", " ", "of", 
   " ", "fractions", " ", "less", " ", "than", " ", "on", " ", "ebeing", " ", 
   "mutiplied", " ", "by", " ", "one", " ", 
   RowBox[{"another", ".", " ", "It"}], " ", "is", " ", "not", " ", 
   "terribly", " ", "surprising"}], ",", " ", 
  RowBox[{
  "then", " ", "that", " ", "the", " ", "product", " ", "of", " ", "this", 
   " ", "infinite", " ", "set", " ", "of", " ", "numbers", " ", "is", " ", 
   "close", " ", "enought", " ", "to", " ", "zero", " ", "to", " ", "call", 
   " ", "it", " ", "just", " ", 
   RowBox[{"that", "."}]}]}]], "Input",
 CellChangeTimes->{{3.561304564266307*^9, 3.5613047005981045`*^9}, {
  3.5613048013848696`*^9, 3.5613049203166723`*^9}, {3.561304963538144*^9, 
  3.561304973532716*^9}, {3.5613060834842014`*^9, 3.5613061605316086`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], "+", "x"}], "]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "+", "x"}], "]"}]}]], ",", 
   RowBox[{"x", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612170195425653`*^9, 3.5612170289831057`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.561217029443132*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], "+", "x"}], "]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "+", "x"}], "]"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*FractionBox[\(Gamma[\*FractionBox[\(1\), \(2\)] + x]\), \
\(\*SqrtBox[\(\[Pi]\)]\\\ Gamma[1 + x]\)]\)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612169741469693`*^9, 3.561216996578252*^9}, 
   3.561304607571784*^9, {3.5613056432960243`*^9, 3.5613056522705374`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"\\!\\(\\*FractionBox[\\(Gamma[\\*FractionBox[\\(1\\), \\(2\\)] + x]\\), \
\\(\\*SqrtBox[\\(\[Pi]\\)]\\\\ Gamma[1 + x]\\)]\\)\"", TraditionalForm],
  PlotRange->{{0, 100}, {-1.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.5612169824254427`*^9, 3.561216997405299*^9}, 
   3.5613046083228273`*^9, 3.5613056527535653`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"The", " ", "convergence", " ", "criteria", " ", "for", " ", "the", 
  " ", "infinite", " ", "product", " ", "will", " ", "be", " ", "that", " ", 
  "the", " ", "infinite", " ", "product", " ", "of", " ", "a", " ", "series", 
  " ", "term", " ", "denoted", " ", 
  RowBox[{"a", "[", "n", "]"}], " ", "will", " ", "converge", " ", "if", " ", 
  "and", " ", "only", " ", "of", " ", "the", " ", "infinite", " ", "series", 
  " ", "of", " ", "the", " ", "logarithm", " ", "of", " ", 
  RowBox[{"a", "[", "n", "]"}], " ", "with", " ", "base", " ", "ten", " ", 
  RowBox[{"converges", "."}]}]], "Input",
 CellChangeTimes->{{3.5612196603236094`*^9, 3.561219716348814*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"2", "n"}], "-", "1"}], 
    RowBox[{"2", "n"}]], "]"}]}]], "Input",
 CellChangeTimes->{{3.561216828035612*^9, 3.5612168285896435`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Sum", "::", "div"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Sum does not converge. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Sum/div\\\", ButtonNote -> \
\\\"Sum::div\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.561216829502696*^9}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "n"}]}], 
    RowBox[{"2", " ", "n"}]], "]"}]}]], "Output",
 CellChangeTimes->{3.561216829503696*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  RowBox[{"Log", "[", 
   RowBox[{"10", ",", 
    FractionBox[
     RowBox[{
      RowBox[{"2", "n"}], "-", "1"}], 
     RowBox[{"2", "n"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560985083762153*^9, 3.5609851193081865`*^9}, {
  3.560985364814228*^9, 3.560985369230481*^9}, {3.561216819468122*^9, 
  3.5612168197911406`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Sum", "::", "div"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Sum does not converge. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Sum/div\\\", ButtonNote -> \
\\\"Sum::div\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.56098515381716*^9, 3.5609853663153143`*^9, 
  3.5612168236423607`*^9}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "n"}]}], 
     RowBox[{"2", " ", "n"}]], "]"}], 
   RowBox[{"Log", "[", "10", "]"}]]}]], "Output",
 CellChangeTimes->{3.56098515381816*^9, 3.5609853663163147`*^9, 
  3.561216823645361*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Since", " ", "these", " ", "inifinite", " ", "series", " ", "do", " ", 
   "not", " ", "converge"}], ",", " ", 
  RowBox[{
  "we", " ", "would", " ", "expect", " ", "the", " ", "appropriate", " ", 
   "manipulation", " ", "of", " ", "the", " ", "infinite", " ", "product", 
   " ", "not", " ", "to", " ", 
   RowBox[{"converge", "."}]}]}]], "Input",
 CellChangeTimes->{{3.561305157164219*^9, 3.561305192311229*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"In", " ", "the", " ", "infinite", " ", "limit"}], ",", " ", 
  RowBox[{
  "each", " ", "successive", " ", "multiplication", " ", "step", " ", "is", 
   " ", "multiplying", " ", "by", " ", "a", " ", "number", " ", "that", " ", 
   "is", " ", "approxamately", " ", "1."}]}]], "Input",
 CellChangeTimes->{{3.561219806633978*^9, 3.5612198301003203`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"2", "n"}], "-", "1"}], 
    RowBox[{"2", "n"}]], ",", 
   RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.561219748684664*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.5612197495577135`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"In", " ", "the", " ", "infinite", " ", "series", " ", "case"}], 
  ",", " ", 
  RowBox[{
  "each", " ", "term", " ", "essentially", " ", "adds", " ", "zero", " ", 
   "to", " ", "the", " ", "total", " ", 
   RowBox[{"sum", "."}]}]}]], "Input",
 CellChangeTimes->{{3.561219841407967*^9, 3.5612198548717375`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"2", "n"}], "-", "1"}], 
     RowBox[{"2", "n"}]], "]"}], ",", 
   RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561219763583516*^9, 3.561219783834674*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5612197851107473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"2", "n"}], "-", "1"}], 
    RowBox[{"2", "n"}]], ",", 
   RowBox[{"n", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.56098520381102*^9, 3.5609852215750356`*^9}, {
   3.560985354332629*^9, 3.560985357985838*^9}, 3.561217509109567*^9}],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellChangeTimes->{
  3.560985222138068*^9, {3.5609853548766603`*^9, 3.5609853585088677`*^9}, 
   3.561216848590788*^9, 3.5612175124097557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "n"}], 
    RowBox[{
     RowBox[{"2", "n"}], "+", "1"}]], ",", 
   RowBox[{"n", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612174956877995`*^9, 3.5612174995910225`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5612174999540434`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}], 
     RowBox[{"2", "n"}]], "]"}], ",", 
   RowBox[{"n", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560985236128868*^9, 3.560985253517863*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.560985254393913*^9, 3.5612168514909534`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Problem", " ", "2"}], ":"}]], "Input",
 CellChangeTimes->{{3.561219869191556*^9, 3.5612198740028315`*^9}}],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"A", ":"}]}]], "Input",
 CellChangeTimes->{{3.5612199142411327`*^9, 3.5612199162482476`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "function", " ", "is", " ", "plotted", " ", "before", " ", 
   "the", " ", "limit", " ", "is", " ", 
   RowBox[{"evaluated", ".", "The"}], " ", "existence", " ", "of", " ", "the",
    " ", "function", " ", "at", " ", "the", " ", "point", " ", "in", " ", 
   "the", " ", "limit", " ", "of", " ", "evaluation", " ", 
   RowBox[{"exists", ".", "  ", "Since"}], " ", "the", " ", "right", " ", 
   "hand", " ", "and", " ", "left", " ", "hand", " ", "limits", " ", "exist", 
   " ", "and", " ", "equal", " ", "the", " ", "same", " ", "value"}], ",", 
  " ", 
  RowBox[{
  "the", " ", "limit", " ", "is", " ", "said", " ", "to", " ", "exist", " ", 
   "and", " ", "go", " ", "to", " ", "1."}]}]], "Input",
 CellChangeTimes->{{3.5613052388708925`*^9, 3.561305307085794*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<1-\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561219918295365*^9, 3.561219930652072*^9}, {
  3.5613056216007833`*^9, 3.5613056326784167`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
p4aJKZ4zlLL3E76uhvB/z0Pg/5+H/A9RpESx
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"1-\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\"", TraditionalForm],
  PlotRange->{{-1, 1}, {0., 0.9999999763056703}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5612199338012514`*^9, 3.561305633398458*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612199390815535`*^9, 3.561219950434203*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.561219951394258*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"x", "\[Rule]", "0"}], ",", 
   RowBox[{"Direction", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561219957812625*^9, 3.5612199604447756`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.5612199610978127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"x", "\[Rule]", "0"}], ",", 
   RowBox[{"Direction", "\[Rule]", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561219966025095*^9, 3.5612199683842297`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.5612199689432616`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"B", ":"}]}]], "Input",
 CellChangeTimes->{{3.561219972950491*^9, 3.5612199738805437`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"The", " ", "function", " ", "is", " ", 
   RowBox[{"plotted", ".", "  ", "This"}], " ", "goes", " ", "back", " ", 
   "to", " ", "the", " ", "notion", " ", "of", " ", "taking", " ", "steps", 
   " ", "toward", " ", "an", " ", "wall", " ", "a", " ", "certain", " ", 
   "fixed", " ", "distance", " ", "away"}], ",", " ", 
  RowBox[{
  "where", " ", "the", " ", "legnth", " ", "of", " ", "the", " ", "step", " ",
    "is", " ", "proportional", " ", "to", " ", "either", " ", "the", " ", 
   "distnace", " ", "travelled", " ", "or", " ", "to", " ", "the", " ", 
   "distance", " ", 
   RowBox[{"remaining", ".", "  ", "These"}], " ", "cases", " ", "will", " ", 
   "show", " ", "that", " ", "the", " ", "relationship", " ", "between", " ", 
   "the", " ", "distance", " ", "taken", " ", "in", " ", "a", " ", "step", 
   " ", "to", " ", "the", " ", "distance", " ", "travelled"}], ",", " ", 
  RowBox[{
  "the", " ", "distance", " ", "taken", " ", "in", " ", "the", " ", "last", 
   " ", "step", " ", "or", " ", "the", " ", "distance", " ", "remaining", " ",
    "is", " ", "not", " ", "the", " ", 
   RowBox[{"same", "."}]}]}]], "Input",
 CellChangeTimes->{{3.561305329796093*^9, 3.5613054481028595`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox["x", 
    RowBox[{"1", "+", "x"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "10"}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*FractionBox[\(x\), \(1 + x\)]\)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561219975119615*^9, 3.56121999705287*^9}, {
  3.561305580317422*^9, 3.561305612406257*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
81LVl0Ll4/NT8/MYmjwSxnZU+H+81SqJ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"\\!\\(\\*FractionBox[\\(x\\), \\(1 + x\\)]\\)\"", TraditionalForm],
  PlotRange->{{-1, 10}, {-0.1622253874729691, 0.9090909072356215}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.561219997574899*^9, {3.561305606476918*^9, 3.5613056128352823`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "function", " ", "does", " ", "not", " ", "posses", " ", "and", 
   " ", "discontinuities"}], ",", " ", 
  RowBox[{
  "lack", " ", "of", " ", "smoothness", " ", "or", " ", "other", " ", 
   "misbehavior", " ", "that", " ", "would", " ", "indicate", " ", "that", 
   " ", "its", " ", "limit", " ", "does", " ", "not", " ", 
   RowBox[{"exist", ".", " ", "The"}], " ", "plot", " ", "above", " ", 
   "shows", " ", "readily", " ", "that", " ", "the", " ", "limit", " ", "is", 
   " ", "1."}]}]], "Input",
 CellChangeTimes->{{3.5613054536791787`*^9, 3.5613055035610313`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox["x", 
    RowBox[{"1", "+", "x"}]], ",", 
   RowBox[{"x", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612200080174966`*^9, 3.561220012113731*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.561220013057785*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"C", ":"}]}]], "Input",
 CellChangeTimes->{{3.561220017642047*^9, 3.561220018810114*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Sqrt[x]\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612200217552824`*^9, 3.5612200352120523`*^9}, {
  3.561305514649666*^9, 3.5613055160997486`*^9}, {3.5613055611633263`*^9, 
  3.561305574980117*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
YO8m8F/eczgP
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Sqrt[x]\"", TraditionalForm],
  PlotRange->{{-2, 10}, {0., 3.162277621446612}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5612200355720725`*^9, 3.561305516437768*^9, 
  3.5613055757781625`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"The", " ", "function", " ", "is", " ", "plotted", " ", "above"}], 
  ",", " ", 
  RowBox[{
  "and", " ", "is", " ", "not", " ", "definted", " ", "in", " ", "the", " ", 
   "real", " ", "plane", " ", "for", " ", "negative", " ", 
   RowBox[{"values", ".", "  ", "The"}], " ", "right", " ", "hand", " ", 
   "limit", " ", "is", " ", "obviously", " ", "zero"}], ",", " ", "however", 
  ",", " ", 
  RowBox[{
   RowBox[{
   "the", " ", "left", " ", "hand", " ", "limit", " ", "is", " ", "non"}], 
   "-", 
   RowBox[{"obviously", " ", "zero"}]}], ",", " ", 
  RowBox[{"and", " ", "the", " ", "limit", " ", "is", " ", "actually", " ", 
   RowBox[{"zero", ".", "  ", "The"}], " ", "problem", " ", "in", " ", "part",
    " ", "D", " ", "is", " ", "more", " ", "confusing"}], ",", " ", 
  RowBox[{"at", " ", "least", " ", "initially"}], ",", " ", 
  RowBox[{
  "because", " ", "it", " ", "also", " ", "involves", " ", "square", " ", 
   "roots", " ", "in", " ", "domains", " ", "that", " ", "lie", " ", "along", 
   " ", "the", " ", "complex", " ", 
   RowBox[{"plane", "."}]}]}]], "Input",
 CellChangeTimes->{{3.561305550508717*^9, 3.5613055589772015`*^9}, {
  3.5613061754154596`*^9, 3.5613061898522854`*^9}, {3.561306445773923*^9, 
  3.561306526683551*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "THIS", " ", "FUNCTION", " ", "STILL", " ", "REQURIES", " ", "WORK", " ", 
   "It", " ", "shouw", " ", "that", " ", "complex", " ", "part", " ", 
   "evaporating", " ", "around", " ", "the", " ", "origin", " ", "and", " ", 
   "becoming", " ", "a", " ", "line", " ", "instead", " ", "of", " ", "a", 
   " ", 
   RowBox[{"surface", ".", "  ", "Work"}], " ", "to", " ", "get", " ", "it", 
   " ", 
   RowBox[{"right", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.561306430670059*^9, 3.5613064372144337`*^9}, {
  3.5613066156626406`*^9, 3.561306646573408*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Sqrt", "[", "x", "]"}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{"Sqrt", "[", "x", "]"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"Re", "[", 
       RowBox[{"Sqrt", "[", "x", "]"}], "]"}], ",", 
      RowBox[{"Im", "[", 
       RowBox[{"Sqrt", "[", "x", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5613061985207815`*^9, 3.561306200410889*^9}, {
  3.561306258419207*^9, 3.5613063363676653`*^9}, {3.561306373752804*^9, 
  3.5613064047665777`*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJx11mtMk1cYB/BCEdFhJxCho4CUdoaEMdYaBqNUy5RlCAstBAxEGJdVqiOA
GZuX2oGREnBiRKXMK+UyBAm2q4UiQTul4Ghtpw4YW61QBGRlIcCgXSni9mlL
/LOTvF9+Ocmb9z3P+T8PNacwie9MIBAK/3mIhP9WruNwzeHnThzCa8vg+Yn9
zXH0n6rGOC1j6FHEYOGICX2pRXQ5YgQ92i9bPPcQPUPNNyR0ood275a1V6C3
tpEUVDq6c8ZIxFYNAZxUQXE35aKH2fzd++Zf7XzdvXYYun6nozf+GEzRclbB
a5q9TvmkvwSXsAruJx1fAb9sPDq6dNIB3sZYYf9xfhncFj/E85baweeHCduG
Tv8FPve2qrq51AY+tEj0UydawRmJd11lXkvgPOvNx2zjn+DFlTdd3A8tgFsS
4n6ZIM6Dhxjtks1Ns+DXbwQwa6Ys4Gm5sg8Npinw8otWYswRM/iJFxSqnDEI
Ln2Vmkwf/xm8Kq2OkVKNHqVftrbNPAF/p+ormseZx+CxnKt18+aH4IExkgit
E7pUVjvL99WBD5JsAb3MAfBfy4M+vTaqAedr7K4TTb1Yn1vyJL4p98GfUJjk
jffugsdrjN4D/JZ//db2D0yVgiuwb/MkNejAJRm4UM7UvfteBzhXpO6//uVt
cHfeBkaW3x1wc/GGA0GhP4A7vOOsTs74nSvn7G51H+F/kbA0R8lH+sD9P+7y
dGt/AN46mKksOYvn0Tjd9YhWjOdHkxduMXP14MxYwtSczQBeplCcT3bBuqFk
m1IF3Vh/8v2LB7keWMfa6H17+/eje4qXjfWbhvC9qbuDexKGwfcI0vZKL42A
6xk1DaLWp+ALDSsKgRLvG9f35FunFXg/5fqssx3eM+DHNnW8P6vD+398Wtng
szAHXn8r3JJ8DPOlluwlDdZjHs3Qt8d954L5pd/lQz24C/OOdUW3sSID81EZ
7jv6xgnMU14huVcsxvzVZNKIYULM686AIoJViPmuvKrtLMjFflBpCeFFpmL/
aN6z9UYoG/sNi9647gIJ+9NqfGBv9Qz6vrCyjsR07H8lmfk557rRuf0xzdcC
sb+G37OQ1CJ0XRtblF6Cnv1goG+pFL2SrpoMKUP/5pBbjuQUes/34pTPatFZ
OnvBhBzd0cCOFCrQs/JWn3oo0WNX/W/vUKF/m/eiR3IHXbVId+zUouc7DZQO
6tDrg8TjAj162PDnUdWP0Lu+fhk9NoxO1uY3fbHGXKWicaZdf0NfL4tcF7rG
fObaXvRM/Qz9OY95IWmNOa/IXr5t0oz+f3Pk33RWqNE=
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["z", TraditionalForm], 
    FormBox[
     RowBox[{"Re", "(", 
       SqrtBox["x"], ")"}], TraditionalForm], 
    FormBox[
     RowBox[{"Im", "(", 
       SqrtBox["x"], ")"}], TraditionalForm]},
  ImageSize->{328.4181732173796, 432.},
  PlotRange->{{0., 2.236067931865749}, {0., 2.236067931865749}, {-1., 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewAngle->0.4973634098425777,
  ViewPoint->{1.937903848016168, -2.638783947704183, 0.855188840656179},
  ViewVertical->{0.24424104798241617`, -0.2774218419967309, 
   1.038859589179074}]], "Output",
 CellChangeTimes->{{3.5613063214318113`*^9, 3.561306336757688*^9}, {
  3.561306381289235*^9, 3.5613064189073863`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", "x", "]"}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612200411163898`*^9, 3.561220060493498*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5612200628426323`*^9, 3.561305528612465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", "x", "]"}], ",", 
   RowBox[{"x", "\[Rule]", "0"}], ",", 
   RowBox[{"Direction", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561220064631735*^9, 3.5612200677999163`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5612200681489363`*^9, 3.561305531022602*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", "x", "]"}], ",", 
   RowBox[{"x", "\[Rule]", "0"}], ",", 
   RowBox[{"Direction", "\[Rule]", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612200706060762`*^9, 3.561220073801259*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.561220074271286*^9, 3.561305532439684*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"D", ":"}]}]], "Input",
 CellChangeTimes->{{3.561220075997385*^9, 3.5612200781575084`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "2"]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612200810526743`*^9, 3.561220092819347*^9}, {
  3.561220193819124*^9, 3.5612202100400515`*^9}, {3.561306654041836*^9, 
  3.561306664244419*^9}, {3.5613070812172685`*^9, 3.5613070978042173`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
aHnj
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
    FractionBox["1", 
     SqrtBox[
      RowBox[{"1", "-", 
        SuperscriptBox["x", "2"]}]]], TraditionalForm],
  PlotRange->{{-2, 2}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.5612202107100897`*^9, 3.56130666478545*^9, {3.561307092268901*^9, 
   3.561307098146237*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Mathematica", " ", "indicates", " ", "that", " ", "the", " ", "limit", " ",
    "is", " ", "complex", " ", "infiniti"}], ",", " ", 
  RowBox[{
  "even", " ", "though", " ", "obsercation", " ", "of", " ", "the", " ", 
   "function", " ", "seems", " ", "to", " ", "lead", " ", "to", " ", "the", 
   " ", "conclusion", " ", "that", " ", "the", " ", "limit", " ", "should", 
   " ", "converge", " ", "to", " ", 
   RowBox[{"one", "."}]}]}]], "Input",
 CellChangeTimes->{{3.561306695514208*^9, 3.5613067357015057`*^9}, {
  3.5613071037785587`*^9, 3.561307103928568*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561220216742435*^9, 3.5612202383236694`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   TagBox[
    RowBox[{"(", 
     RowBox[{"-", "\[ImaginaryI]"}], ")"}],
    "DirectedInfinityCoefficient",
    Editable->True], " ", "\[Infinity]"}],
  DirectedInfinity,
  Editable->False]], "Output",
 CellChangeTimes->{3.5612202391517167`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Looking", " ", "at", " ", "the", " ", "left"}], "-", 
  RowBox[{"hand", " ", "and", " ", "right"}], "-", 
  RowBox[{
  "hand", " ", "limits", " ", "are", " ", "not", " ", "encouraging", " ", 
   "and", " ", "suggest", " ", "that", " ", "the", " ", "limit", " ", "does", 
   " ", "not", " ", "exist", " ", "since", " ", "they", " ", "are", " ", 
   "unequal", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
     "complex", " ", "infinit", " ", "and", " ", "real", " ", "infiniti"}], 
     ",", " ", "respectively"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.561306980729521*^9, 3.5613070214538503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}], ",", 
   RowBox[{"Direction", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612202445130234`*^9, 3.56122024865326*^9}, {
  3.5613068578084908`*^9, 3.561306859656596*^9}, {3.5613069478706417`*^9, 
  3.561306961427417*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{
  3.5612202491052856`*^9, 3.561306859988615*^9, {3.5613069496867456`*^9, 
   3.561306961966448*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}], ",", 
   RowBox[{"Direction", "\[Rule]", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.561220259447878*^9, {3.56130686531992*^9, 3.5613068676090508`*^9}, {
   3.561306952823925*^9, 3.561306969046853*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   TagBox[
    RowBox[{"(", 
     RowBox[{"-", "\[ImaginaryI]"}], ")"}],
    "DirectedInfinityCoefficient",
    Editable->True], " ", "\[Infinity]"}],
  DirectedInfinity,
  Editable->False]], "Output",
 CellChangeTimes->{{3.5612202556746616`*^9, 3.5612202598509007`*^9}, 
   3.561306867998073*^9, {3.5613069534879627`*^9, 3.5613069696368866`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Maybe", " ", "a", " ", 
    RowBox[{"L", "'"}], 
    RowBox[{"Hospital", "'"}], "s"}], "-", 
   RowBox[{"type", " ", "Rule", " ", "will", " ", "help"}]}], ".."}]], "Input",
 CellChangeTimes->{{3.5613070251930637`*^9, 3.5613070368047285`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.561306757010725*^9, 3.5613067656932216`*^9}}],

Cell[BoxData[
 FractionBox["x", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["x", "2"]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Output",
 CellChangeTimes->{3.5613067667242804`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox["x", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5613067699264636`*^9, 3.5613067787839704`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.56130677947901*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561306815510071*^9, 3.561306825263629*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["x", "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]], "+", 
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]]}]], "Output",
 CellChangeTimes->{{3.561306818521243*^9, 3.561306825700654*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["x", "2"]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{3.5613068484439545`*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.5613068498940372`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5613068032963724`*^9, 3.5613068351101923`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"15", " ", 
    SuperscriptBox["x", "3"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], 
    RowBox[{"7", "/", "2"}]]], "+", 
  FractionBox[
   RowBox[{"9", " ", "x"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]]}]], "Output",
 CellChangeTimes->{3.5613068355072145`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"L", "'"}], "Hospitals"}], "-", 
      RowBox[{
      "type", " ", "rules", " ", "do", " ", "not", " ", "seem", " ", "to", 
       " ", "help"}]}], ".."}], "Not", " ", "that", " ", "we", " ", 
    "expected", " ", "them", " ", 
    RowBox[{"to", ".", " ", "Regardless"}], " ", "of", " ", "what", " ", 
    "the", " ", "left"}], "-", 
   RowBox[{"hand", " ", "and", " ", "right"}], "-", 
   RowBox[{
   "hand", " ", "limits", " ", "computed", " ", "in", " ", "Mathematica", " ",
     "indicate"}]}], ",", " ", 
  RowBox[{
  "it", " ", "appears", " ", "that", " ", "the", " ", "limit", " ", "should", 
   " ", "go", " ", "to", " ", "1."}]}]], "Input",
 CellChangeTimes->{{3.561306906670285*^9, 3.5613069401081977`*^9}, {
  3.561307117378337*^9, 3.5613071456089516`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["x", "2"]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561306921234118*^9, 3.5613069235722513`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   TagBox["\[ImaginaryI]",
    "DirectedInfinityCoefficient",
    Editable->True], " ", "\[Infinity]"}],
  DirectedInfinity,
  Editable->False]], "Output",
 CellChangeTimes->{3.5613069242022877`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Problem", " ", "3"}], ":"}]], "Input",
 CellChangeTimes->{{3.561220266765296*^9, 3.5612202686704054`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"The", " ", "following", " ", "function"}], ",", " ", 
  RowBox[{"denoted", " ", "here", " ", "as", " ", "f"}], ",", " ", 
  RowBox[{
   RowBox[{
   "describes", " ", "the", " ", "fraction", " ", "of", " ", "surface", " ", 
    "coverage", " ", "and", " ", "is", " ", "referred", " ", "to", " ", "as", 
    " ", "the", " ", "Langmuir", " ", "isotherm", " ", "and", " ", "comes", 
    " ", "about", " ", "from", " ", "solving", " ", "the", " ", "Hill"}], "-", 
   RowBox[{"Landmuir", " ", 
    RowBox[{"equation", ".", " ", "It"}], " ", "is", " ", "a", " ", 
    "specific", " ", "case", " ", "of", " ", "an", " ", "ideal"}], "-", 
   "lattice", "-", 
   RowBox[{"gas", " ", "equation", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Intro", ".", " ", "to"}], " ", 
        RowBox[{"Chem", ".", " ", "Eng", ".", " ", "Thermodynamics"}], " ", 
        "by", " ", "Smith"}], ",", " ", 
       RowBox[{"van", " ", "Ness", " ", "and", " ", "Abbott"}]}], ")"}], ".", 
     " ", "An"}], " ", "alternative", " ", "to", " ", "this", " ", "equation",
     " ", "is", " ", "the", " ", "Freundlich", " ", 
    RowBox[{"equation", ".", " ", "Langmuir"}], " ", "isotherms", " ", "can", 
    " ", "be", " ", "derived", " ", "from", " ", "equilibrium", " ", 
    "kinteics", " ", "of", " ", "filled", " ", "and", " ", "unfilled", " ", 
    "sites", " ", "as", " ", "a", " ", "function", " ", "of", " ", "the", " ",
     "adsorption", " ", "constant"}]}], ",", 
  RowBox[{
   RowBox[{"a", ".", "  ", "This"}], " ", "constant", " ", "essentially", " ",
    "specifies", " ", "the", " ", "stability", " ", "of", " ", "the", " ", 
   "system", " ", "that", " ", "is", " ", "gained", " ", "by", " ", 
   "adsorbing", " ", "a", " ", 
   RowBox[{"molecule", ".", "  ", "The"}], " ", "isotherm", " ", "denotes", 
   " ", "the", " ", "fraction", " ", "of", " ", "sites", " ", "filled", " ", 
   "at", " ", "a", " ", "given", " ", "temperature", " ", "as", " ", "a", " ",
    "function", " ", "of", " ", "the", " ", "system", " ", "pressure", " ", 
   RowBox[{"(", 
    RowBox[{"partial", " ", "or", " ", "total"}], ")"}], " ", "or", " ", 
   RowBox[{"concentration", ".", "  ", "The"}], " ", "stability", " ", 
   "could", " ", "be", " ", "in", " ", "terms", " ", "of", " ", 
   RowBox[{"Gibb", "'"}], "s", " ", "Free", " ", "Energy", " ", "or", " ", 
   "other", " ", "parameters"}], ",", " ", 
  RowBox[{
  "but", " ", "the", " ", "need", " ", "to", " ", "fill", " ", "sites", " ", 
   "will", " ", "be", " ", "driven", " ", "by", " ", "the", " ", "energy", 
   " ", "available", " ", "at", " ", "a", " ", "certain", " ", 
   RowBox[{"temperature", ".", "  ", "The"}], " ", "value", " ", "of", " ", 
   "a", " ", "increases", " ", "with", " ", "the", " ", "binding", " ", 
   "energy", " ", "of", " ", "the", " ", "particle", " ", "adsorbed", " ", 
   "onto", " ", "the", " ", "site", " ", "and", " ", "with", " ", 
   "decreasing", " ", 
   RowBox[{"T", "."}]}]}]], "Input",
 CellChangeTimes->{{3.5613071829880896`*^9, 3.5613073058001137`*^9}, {
  3.561307920209256*^9, 3.5613081020566573`*^9}, {3.5613081969630857`*^9, 
  3.561308228263876*^9}, {3.5613082871182423`*^9, 3.5613083291576467`*^9}, {
  3.561308422455983*^9, 3.5613084462293425`*^9}, {3.5613087120525465`*^9, 
  3.5613087154927435`*^9}, {3.5613213618140926`*^9, 3.561321406033622*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "Langmuir", " ", "isotherm", " ", "can", " ", "also", " ", "be",
    " ", "derived", " ", "from", " ", "a", " ", "Statistical", " ", 
   "Mechanics", " ", "ensamble", " ", "of", " ", "m", " ", "sites", " ", 
   "with", " ", "n", " ", "particles", " ", "as", " ", "a", " ", "function", 
   " ", "of", " ", 
   RowBox[{"temperature", ".", "The"}], " ", "temperature", " ", "dependence",
    " ", "likely", " ", "has", " ", "an", " ", "equilibrium", " ", "or", " ", 
   "rate", " ", "constant", " ", "controlled", " ", "by", " ", "a", " ", 
   "Boltzman"}], ",", " ", 
  RowBox[{
  "exponential", " ", "of", " ", "the", " ", "binding", " ", "energy", " ", 
   "and", " ", 
   RowBox[{"temperature", "."}]}]}]], "Input",
 CellChangeTimes->{{3.561317304335018*^9, 3.561317344040289*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  FractionBox[
   RowBox[{"a", "*", "x"}], 
   RowBox[{"1", "+", 
    RowBox[{"a", "*", "x"}]}]]}]], "Input",
 CellChangeTimes->{{3.5612202779239345`*^9, 3.561220280004053*^9}, {
   3.561220324602604*^9, 3.561220335698239*^9}, 3.5612203817078705`*^9, 
   3.5612205163165693`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"a", " ", "x"}], 
  RowBox[{"1", "+", 
   RowBox[{"a", " ", "x"}]}]]], "Output",
 CellChangeTimes->{3.561220516619587*^9, 3.5613084799312706`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a_", ",", "x_"}], "]"}], "=", 
  FractionBox[
   RowBox[{"a", "*", "x"}], 
   RowBox[{"1", "+", 
    RowBox[{"a", "*", "x"}]}]]}]], "Input",
 CellChangeTimes->{{3.5612205287882833`*^9, 3.561220529680334*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"a", " ", "x"}], 
  RowBox[{"1", "+", 
   RowBox[{"a", " ", "x"}]}]]], "Output",
 CellChangeTimes->{3.5612205303013697`*^9, 3.561308481407355*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"0", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.561308483132454*^9, 3.56130848535058*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5613084859826164`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.5613084875177045`*^9, 3.5613084888787823`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5613084893568096`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.561308490802892*^9, 3.561308491591937*^9}}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.5613084921019664`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5612205326795053`*^9, 3.5612205548047714`*^9}, {
  3.5613088984352074`*^9, 3.561308938365491*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
WXI0fpDYo5WJU/E5rPutoIMOQdqfrTevHnH3Drf4u3+KzF37nvaHOHmHfPc/
zkn7UPsTRF62VXwpt/xupR2tTvYPitTz4im/+9uunE83Zo7Sfr73TMhxxOuF
JazK6w9Z/xX/qT77fusjXs8ti7om/LUv6wPtJ5+nnBuu7jIhRPtJPNb5j83z
XNY91XHo8Ob2394u8Rb7XE08u3+btxmHHhJ3nboiaaq3Q4SOw0XLbuUp4R5r
2bvvxeqCD0087WeJq+y2iv+8kf7/mdn53aBdMXq8FaX/EeE7d8e/i9FxOFT6
7+ze49jjXrE63j6+/t7Pe5PW/eS1OlbHW33pZwOHdnO7njLxtEnSz562XXO7
hZt4Wnih5BHeLm8trQfWavTvOM+MWS/SHfF6Y6nU8tMA312PVcdSSc/XBPu/
tnwcklxoqUeYiQPLZ/CLL82cWkSonl4nks66uL+yeK6deWfXkUjVM1uJpI7u
3i8tb95nufTXZRNP278gMd4rONnyfmWTIZU3mXhafYmfpLeK84RK//PcDF+V
tb+J80yV/t9bWb/vh+Nxqmdx6f8fy+p+9bM3cZ7z0v/66W8vjm5k4jz9pf/9
Q+vFX//dxNMcpf8xPgt/fL7dxNN2SP/nL9jTfVyQiaddDXtz2yv4k2XjdM/W
v48ycR78UVvvfa72tpuJ8zjtf/3J3+ujxf79Cb/0VU2cB39j07vZg16Wi1Kd
+exaqfroR4tMPO1jzMsjLu7vLT0ir94e62PiaWtav/zR3fudJX+R+vfXdTfx
tFISP3lvFee5JP2/2S5kS+u5Js4zUPrvmOVMlZ4hJp6WWfq/ddyYgZtcTJxn
r/T/3A/b8xztaeI8P0n/W65aaLtjhYmnvZT+1075uW3yORNPWyb9P7uu5+wT
iSae5tn2y2qXSzZuvpVydJla18R58JtV/ezebk2YifN8DfxcwT27jVsZ+4eT
526PVJ3xXfTx2zlh5FITT2vQ6P30YP+vllzjFj/cHWbiaXym23VlyYd7Jp42
M/u7XS7uXyw1zjR8c2WpiafNlfjJUKs4T2fpf5GPdf2rdzBxnnLS/zs1XxYY
7mfiPJ+l/xlqBA6bEmt0/kP6v8UxrHFsURN/qCf9H1a2W64lP5s4TwjPZy80
3R83ycR5Jkr/+4+sWCS7n4mn3TyY4u7t+239OCBixG9bTZxnE/5E33b37IuY
OM+IAikh/ol2bg0+jOpfO8jE0/CxDE57tZGbn4mn5Z7+dVhwTTu3i71fncgX
ZuJpPC++VbDM66fnTDxNP8NvPYoYauJpui6wivPckP77/xFg45tkdN4o/b94
rdnIibVN/GGY9H/e3FrFH402cZ6G0v/JTecXKPan0TmH9L+5U0LF4o+MzpHS
f7duv9+rZ2f2xYdYp8+vteP3Eib+0FT6myH79/s1OuOHPBWa+0JQWRPniZ1g
u8jlkr3bsSENc80+Z+Jp+IKq2234PH6KifPMj7Qp5p7d3m3G70WfLN5u4mk8
fz/WpuXnbBNMnKeCh42/l2dat3MOHi/25zdxnhH/Eefhc8jSmGpT+5j4Qy7p
f5GK4eXL7zA6R0v/h5Twz5chwuh8RPof2PBdp945zX5tjvR/RNyJIomuZl/c
Sfr/ouWe4S97G53LSP+Hnf7YYdgMo/PR0Wl3enmmd5t5Kl35e3tMnGe+9HeQ
rEPQueuTNK7evo5uM0uMq7R6oYnz4LNyTls++kVVE+exaZomyD8xnVsvp4Pt
tjY3cR78DBn+mJ5nfGYTf9i8265fcM10bu+z1L3cdKPROfY/4jyB0n+XrZcO
dj9jdOZz3PqaZzzszD7CU/o/au6BItlrm/1aeen/qEkNXzzsa3T+0uR7/30K
bLrYYKHR+br0/9qzWVmm7TU6r5f+r/Ap9GruNaPz9+f1mdyyvOrptWufifPw
PHzo3Ykbbtw0OgdJf4s4zltarFas1b44o1va4yuLOP5tdB71j38gg5u9Z/8a
n64YnfFrTGm9dGjAdKNznn98Fhnc9hX+EO+cyeyLu/5HnKei9L9dYJv9MVnM
PiJl/vf+Bwz0iF3awujM54K6DS/+OcHovEn6P7X0Qsem24zOw6X/E8oGFYy6
YnRuJP2P7Nki/f54o3MO6b9/Dffq89P9K/5QJ30G9+xZ3V5nuvu5zEgTfxgl
foyk8YdvLxpn4jzNNjmu9/LM4nYm66IhaS8anfEjWGRdhM7P/vFXfBsvr2eN
2VXHxB/wKXTvFDDldJTRecE/fpNMbkv8MoZ87WN0DvqPOM8W6X+Ol69uT25l
dB4p/c90/M4Oz1lG5ybSf+9+N8tXO2x05nNfr9CtHx4bnWOk/2GD0mYolmJ0
DpD+r5tdp/VZZ7MvniP9n3W1dL0DNf+1j7tm3zX47bf93x+BOR1KmPjDKPXL
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
bFbJ+jB/hX/78KtP/t6+zOKuthejTul4XiS/W1vydJTL+u2OcH6X55JXCtRb
Pfi4WY9Z15mhfR/W4W2ftt88xaz3uN9NW/jYfdi38UA/tZ7M1gI9JiREaX/g
rRqOrLLIK1qvF3iZpw7jF4RHm3ivrDcqvavyJrKcGZ+sN272sB189PNTq/Gf
ze3c+ethtoFmHLLeCDiUbebm3mZcsd644d1u8Jev4ToP0x/3WWkHL01n9MlO
PXCr+WeJ6JOjwsWJv16K0OO9Juvk7ZKXBM888TsPsOLoeU7yldCnjXx/2ULn
Rxa9H2l8p7Je9SkV4jGuidFT65k4lt031DFSj5e4Ypf7bQvnXml0Iy/plN/t
uPpdjW7kH438xblOt2xGN+IMbSt7pMlz0HD2xZkCnh5e2ixCxwl5Rm2mhjof
6254Nnm+nLy8YIv0t8xz3rWy3vbc/6HnyeZmHJaUdXXK1zNX0raI1vMSIM+v
p0ieEfyi8OnC+R6edzfO/MChYTHT3jpfifaz5HlxyuIo12IFY7S9dV4S/Inw
vsI1/4d1meQlMS/A2c/yvXDyZchPgJP3gZ9e98eSp8Dvsr4mv4nfhZMPxe9q
HFrycfhdOHkl/C6cPAh853B8++qTFo7PHF8vHF80PlQ4Pl6Oi7iL5mHJccHJ
2+K44OQTcVxw8mI4Ljh5HBwXnLwDjguOT57jguPr5rjg+JDxg6pvSHyz+Org
+A+JY8Lxy+FbguPvYl+k8VfxI+l7MSReRZ6avkdDOHlt+r4M4eRh6fsyhJNP
pPkhwsl/0fdlCCdfQ9+XIZz8AvRUv4/44fV9GcLxb+v7MoTjN1Y/KMcl/lh9
X4Zw/Jzq/xOO/1DflyEcv5y+L0M4/i50Zj/KPhSd4eQDar4cvjDJa9N8J+Hk
Z6EznHwidIaT/4LOcPI10BlOfgE6w/HDozMc/zY6w/Ebo7P2X/yxWq9TOH5O
dIbjP0Rn5eKX0/xM2Y+yr0dPOPmA6Aknrw094eRhoSecvCH01LxDyXNBTzh5
GegJJ48APTU/SXzv6AnHp42e2l58xegJxweLnuojEN8meqp/Q3yGmi8q62Xi
IYxb1t2st9GZ9uRXwrW9VT122pM/CKe9dZ122pMHB9f4qFX9dtqTzwWnvXVd
d9qTlwSnvXW9d9qTXwO39l1w3mlPnghc+29VH5725DvAaW9dN572+PbhtLeu
J097/OdwjXNY1ZmnPT5qOO2t68/THj8wnPbWdelpj68VTnvrevXs29ivMd7g
5O0yruDkn+r7P4STL8k4gWt+H+9jEE4+GucdTv4U5xdOvg/nEU5+CucLTj4F
5wWO/1/rPrN/Fb86OsPxV6MnHD+wvs+CfHHZ5+p7K9jvSr6zvrdCOHm7+t4K
4eSZ6nsrhJMXqe+tYB8meXzoCSfvTN9bgf9O8qT0vRXCyevR91YIJw9F31sh
nLwJfW+FcHz++t4K4fjS9b0VwvFRoyf7CeIA6AkfVdQyPt9RoyecfGf0hJOf
i55w8knRE07+I3rCyddDT42nSn4ZesLJh0JPOPk76KnPbyXfBD3h5EegJxw/
P3rC8Z+jG/ut/U/KterWwtSNh5MPjm5w8pfRTX0okm+LbnDyQ9ENTj4jusHJ
v0M3OPli6KbPryS/Cd3g5OOgG5z8EXSDk++AbnD8+ehG3IL6A+im/ibJl0c3
rQMh+d3oBicfGd00Liv5s+gGJ98T3eDkJ6IbnHw6dIOT/4VucPKV0A1Ofg26
wckHQTc4+Qusf4jTEJ9BTzh1G/R9XcKpM4CecPLi0RNOHre+B0g4ecfoCdc8
WdETTl4neupzS8lDRE84eXPoCSfPCz3V9y15Seip8XXJo0FPOHkfWsdK4lXE
qfQ9MsKpd6HvkRFOfQZ9j4xw6gnoe2SEk/+u75ERTr42esLJL9b3yAgnH1bf
I4O/T/I39T0y1EGRfEN9j4xw8uP0PTL4fSSfS98jI5z8I32PjHCeb5KvQvyH
vBXyQ+BPJU+EPAd4G8l3wJcPx5+Pj1zjV+InbyLrBji+XPyjcHyk+B3h+B7x
58Hx6eEn07wr8ZXhf4Ljg8LvAse3Qz6MPmeWvBjyOuDkd5CHACcfAd88HP88
vliNX4k/Fn8hHJ8hfjh9Ti6+OOKqcHxcxFXh+I7IPyGeQx4Kz//g5E3w/E/r
Z4jPn+d28EKSX8NzO3jYwt4XHyXH6nM7OP49ntvB8ZvxnAb+SvxRPBdX35/k
cWhdUOHkHWg9TOqpiA9T61sKxzeo9SrxI4vPTetpC8eXRT4D8YScktfA8y04
/kOeY8Hxy/G8Co6/i+cQ7K/x0fEcQuMS4vsib439DvlrQVb7aPLIfrbaL5Nv
Vd9qX0zeUCmr/S95LnOt9rnkZYz4j/1p7H/sQ7v+x34z6P/YV1rvH7v9xz6R
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
NxpJ3IDniZoXLvtK8uU0niZ5c+Q9cr2T/7ibfQt5z7Kf5T7LuiXzKP+ee4Ni
VUe+f/oHm6jqIed0nQT/8Wrr48m+V00+gPAN84//9WLELV03aHzsWNyCWb6m
HoLGu4J+WDGk5n3tN/yDxAn5Xfq1+WTG1QE/3tffhdfPErN49yxTnwFe/Fyp
t7a/hur9w/r5e+7/WJcy72j9ibjzPe8/NvkM9GvLL64249OG6e/C3Tf9kufE
3ybfGT7o7dEA54qROp7gbY/N6/uyjcljsn7OrvFo4WNsM+dqEm7qW8KnbBzg
4FnWzI+6XnWJafzb4jgdB/BDZf78c0OcqQfF8c046LZoySdTRwDulPNcDRt3
49uGR2ZcWuNOG5PfBHe1qg8JDz9y2XnmFlMfUuthNm9dyfedqQ+p9QXn/Hiz
YkNTZ4b+Fmx8Y1KP06ZOo9YBOhq8Ztleo4/1c3l+F3500r393Z+Yeolw16Tw
8I0FTX0Vfv9nh2Nt7+4xOls/r9d6BMLndypS5ezhBB2XxPGs3+8At36/A9z6
/Q5w6/c7wK3f7wDHf856S/tj9R4HuPV7HNQPYPUeB7j1exzg1u9xgFu/x8H6
eT2c9viv0JPj6NPkY7l2pU19P3j5EfXKVbczdefgTmscG5W7YfSEd6mT3mem
namHBo/OMyBDSojRE15lR8TdedNMXUR4k0FHS1U4YnSDZ5py+OmKz0Y3+Jpi
LufW1jJ1t+BTmjbz7vab0Q0+bV6OGyNXGH3gi+3z5ctzItG8n0X65V/z8I4d
24wO6meO/DN3125mHoC/qjPixPXJRgd4oXFnZ6R4mHpl8GNDkyPso//1XhXh
Y2e/j2rQ0NS/gh9MH7xnzlhzvPAp28u3LrrNHC+8bv2SVebfMMcLTz9gQUTc
y0Q9Ln4/bWjIM4+H5rjggR2cN//xzByXPo/Y2bll4V3muLSO17N2HTLUNedL
9wsto6PD9pj+63l+3W1gwkPTf/iqyrGla6SY/sPXlX95+lphU4eE3/ndN6v7
+qZm3oNvvrDh3f1Ppp9w92LPntyfaq477e89S45Xaf9VT0z4st5DB84rZeqi
6HWct2aT09/Wn/yu+mA9Bh2/0MDMh3CnJa3dH580dTu1Tm2FBT/nbGG+X+ub
vZu4rG6/JP0e/r9suw5fT3pj5k/4jtZ9irSZZtYfjGvWIcwD8E2yTmC+sM6v
5DrRvEiZH7T+I3EhuV70eYyML9Y5/C6cdYi+H1D4ZlknaP0Bq/xEzcfgPivz
ktYToL1cp1o3QLi9jHN+l3HUQtYhtINPl/s7/YGnkfsI/YEzH9If+EuZH+iP
+hPk+lKfPesjGc+alyvji3WRrieEs97g/4dz36f/1nlz9B/OvE3/4cxj9B/O
PKB1pYRz3TGO4VwXjAd9f6DPhSFRjUycEc56j+OFR8g6iuOFs57h97RehaxD
0ME6vwwd4Nb3Ka3PZzVv63tdrOY9eHOreQZuPQ/Aua7pp3Xek77Pyyp/R9/n
JZz76TiruA31Tvke67wV9eEJ5/7L98K5T/H9On6n1zo+OMDU+dT33cn6lt+1
zvvQuv3Cub/zu3Dug/QDzv2F/qD3VFnnq2+VOImsqztaxW1Y99JP6zwLrdcq
nPWG1tuHy32ZfsKbyP2OfsNvyX2nh9V+Gd8UxwVnn8JxwdkXcFzaXtbtkVbx
HNbhHK91HgTHC2cdxfHCWW9wvPrcVu7jHC/cW+6nevzC28p9EB30uZVr9fDS
54wOWt9a9mX63jHyCGQfpO8dE84+Rd87JnyB7DsCrOI81vUhrfMa9L1jwllP
ar1T4ay79L1jwlnPaFyS9busK9TnJJz1gL53jPcDWN330W+axCXov3VdCM1r
5f2xMg9zXHD2C/yNri4SN+hhFX8eZPV+DY67nsRttI6GcJ/+R+5OPGrq4KFH
njOxeWN+NnU0dL0mcQb6qXU/JG+CfsC9h2SqOmGkqa+lvnSJt6hPQsYF8Rat
NyW/u0biS9a+yiXiq+R8aH+s6i9xHvA78Tf/3k84usDrWtUB47g5XvWFyHFz
vIwT/v2IVd0edP5gVb9O84Ck/3yPtZ/TxFu/8+VynfI96uuQ3634H/E6jpfv
qfDLk9y9LkVZ/h80xlOJ
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
TXifiL6le7tm/u5r1bpk3ktvql2WeW+gZ/tiTzMvtUvZC6KvqXXKvJfWqHXM
fDZfVeuQ+cy+qNZWuEAWqnXPfF7eVuuWeX8u11zrlSxbdmqORwhfrd9e0m/t
RMuwV9UuEM6Ru2rtM8sH+tF/b+SE7n1Z7ZGSKddHqj2v9oJaRbW5aq+q7R7p
msT6DHnLGv2gtkXjLuDbifeZ8PfC/8PGED5fzwusd2L5M03P+kW8Q0Vfyjwe
4y7W9YX4A1FGPRzntqvaV6y1+h4e5VhZ8WaK/i+Ow3jfIe8yy09kezXxy2sO
i1P7Gr9gU+r6+mhHtRY9Xa0cNlLu95wteonGeF/9p+u+ufH8PMLeFu2mtje2
UW4fB1/n5tzj9BLtqbabcGPRcxL32S2enfLoCY3bHBmE7SY6Qbzuccz7c69x
U8bOLDNHaA7HCs8RxmltmVnOT8BPED5Y/T/PrJMPEb4Huwj9pD5r9a6TxOuB
/sPOU1sQz++fmd/lffYZ8krtGmwO9GPyn/gvPSo6L579PzKv1zPYHXm0Z5Bd
oncmfva9uffOfaIfix6gMYbiQ2Zei1X4SGpnC69gHN458ff+TdetRFeKzsr9
zRvm9t+w7Q/ARhHvQGxC9emFLhK+HJsWe0S4aWqfYxL7SLiC8Gjhs/A1hG8Q
bomtKDwGXSx8gPD1wi2EDxa+UbhVaj/mPsYXrig8XrhNap/pHuHOqfXeBOHz
hQ8RHit8TrRjsd96pvar7hXuIZxk1ul1hHvr21wrnOodX+U8sn6Zv9V+avuy
rrr+SH2mYpOqvSN8NzaQaAX9vr/oR6IVRAdltjl7i1YV3a+wvV9NdAd2SeI9
cWVu3EL0H43VU7xaoqfr+hbhduigzGPje+BfthE+UPRy3ddZ7QvGQa6Ibkm8
ztjtF2E7qrVAn6a2Hc5CzojOVL8ZUad314256KDc3/++xOe5h67LiA4RXSx6
cuLrPTX+OI1zrsZZpOt6ie8fgK0s2lX0gMJxEuIlTyfmZ2rXsq/VfsUmzv38
NtHGAP8m/sDcY3bLbYtfJl510VnoQ/HHi16u33YRri/6qNqJwl3QZRhOwicK
r0ttV+8rWje3v1kHPajfT1D7G/2Rep5VRCsnvrdDtFfog/3SPPH42DG1c9+H
v1lL7VjhbXrHETyfc1myrEZO/8m7xG/HNxyXm3++aDvRw9V+1281c/dlnONy
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
         "]], Polygon3DBox[CompressedData["
1:eJwtm3UcHEUShUcXd3d3DncNkoTgBLcAwd2dwzW4Bgju7q4J7u4uQYMdHHbY
fV/e/NG/rTfdIzvbXfXqVe9Mg3cfuFtVFMX6dVE0fH7L501lUcxNew37YNp/
OL4n+H3sA2nfg3cDv4t9d1sUL2LPybF/YR/Ase+wp+LYx7QpuOgC4Lu4yWG9
ohjGmIs5PiNtCPbvjH8a+y7GLI39NccOx16F8dcw/lPOXwL8D2MWAn/FmMuw
Z6c9h/0n7XnsaWgjsY9n/HmMnx77Hcbvy+c34Cnp/4j2DdcfAl6H619L/2SM
nx98J/hQ8M+Mf4Rxf3DsS+wLGH8J+ATwstjz0n7AvoPx8zD+TfC64GnAZ4PH
bvIerwfPCv6M/u3B84OvBI9FJ5ctrgPPAv4QcADXH5djI31Gxg/Gnpv+S+gf
Cd4OPB/4CvAn4G3A84IvA78L3hA8A/g88BzgT8HXgmcGrwaeguuey31m932C
t/W3ov9y8KrgyekfSv9s4FPBx4gZcxzPujZ4WvDD9M9B/8fgrembh/MvBZ8P
vpD+6Wl7+V0Z9wn9n9F2wr6fazyCvRH2vxl/Np+TMnYy2jnY53LO+djT0fbE
fp82iPGzcf0Lut9jmP0c+y/2OfQPLfNMe2B/7BzF/pX+m7Av9b3RtsDekvaj
93A8/f/Bfo9zNseelTHDuP6vHHvc98Ox6bDfx+Zw8QVtZ/ApjD+KY8eDD+S7
9GivgV+m+UOPpC2JWXC9hTlxdnAf4OPgY8D/cI2XGDuX9+dzNvqXx36M/qPp
nxa8KPgB8OHg3xj/JOOu9jfGfov7r4c9Lf3n0P86eG3wFOAzwW+D1/fZwUPB
N3K928EDfC/gd+jfwPVA/7ngV8FrgicDnw6+Ffwg95uaY4diz8L5y2E/Sv9R
9O/Pdb4F78KYt+t8/9e779Ni78WxUf7WHHsD+y/aC2V8QkP/9LTF6X+I6x3J
9b6h/3rPp73i/GjzPr3WvPRPwOckjL+V8XOBb6P/Ydc3xw7HHp/+ibFvoX9O
+qcDLwZ+EHwE+DXGrAWeHHwG+C/wLeADwPeB/8v4ncELgkeCL6d/Tq7/Es/y
MbihPUj/MfQ/gn0l468H93GdglvaQ+Bj6X8U+y2O/4vzx+DYm9hvMn5m7K/K
PN9b4FnAX5f5Ppu4HsE3cP5n4B7tYdca+DHsMWjDwceDH8euaQ+AjwaPcGLS
7vVdgB/C/p7rb9St/z7gH8Abg2cErwD+m/vd7W8LfgC8BP0rgd8CLw8+1vXA
s41H2xG75Nh99B9B/8PY3zF+oP4TvBz4KP0NY3/n2Lq+O/oXxn6K/iXo/1fn
r18ALwWelM81wH/TXsWeg/6FsJ/EXpz+w/SfXO/Qzr88xucG3fVvNtbQf5r+
g/E30L8A5y8Nfhm8LHhq8Kzg+8ALgKfq3ve94Pldf5x/D/gw8IPgaeifDXw/
eEHwR93z/MY95wPPD14K/BL9y4D/zfkDy8TAtbAPpq1TJgauiX2g67HMGlkD
e2LOnxx7H579df01eBHw/8o838fd+/q9zPPN1/mPF7nf0uBvwauBJ+6+3zfg
VcETdc/zNXgV8ATd+/0f97wRvC/4buMP7SnwqeCnsf+g/ybwfuB79C/g64zn
4DvBf4JvBu8Pvtf4RHsSfAr4Kf0j/deC9wDfAR6f9hz4LPALrlfa8+CzwS9i
n8bznQGek++/m+vNeA/env5bwT+BLwJvB77F+domXm8JvtH4wPnXGJ84/13w
DMY03tVlcgPscWnP0H864581PhifwTuAbwOPQ3safBr4GezxaM+CzwQ/j/04
4+cD/1zGv53O/c4Ez8X1dwefCT7b+AbeEzwx7SXwuZz/Cvbn3fyrwIsa37v5
UoIXAX8BXgZcgxcDT0R7ETwU/DL2l/SvCB6zm//PgycFv1eGL4xJewJ8Mv1P
Yp9B/1nyAZ5nD/BQ8DDwAuC9wF9163msbv1NSHsBfA74Jexf2rzP3cG3gy9r
4g+WMRb6W3b+9p0yfORc8AX6R/r3Bs/Vzd+nOX9J8CjwAPCE3Xz9juufCt4Q
fL3zkfOe5VqPc2xV7Cfa8KtfysS7u9rEh4er8LmDud4hzm/GbtWt/0XoH98Y
hH0k/UdhT4W9XS/xfmH9Fcc+kpvKH7C34no36Rs5tir9Ne1iOQfnH0r/JNhb
038E+Ej9GXhb8DHgY42v4B31b+CjwVODt9cXc/0Z5ANl+OGu9O/q76+fAo+g
f0bwl2X47X707wcel/5Bxk/w/uDxwFuA7+FzAGNL2kXYR9N/DP3TYO9A/0Hg
g32/8hfw3Xyuwth/OHYh9iT0z459G9/3NfoPAf9bf0HfYPAtfPYpE5OvqXM9
+e4Ecgn6bwDfBl7FPvDL4KnAn3DOB73wpeHYv/md5S70T1mEy7/v89Xhv1OX
3Tngffkch2Of8rkb43dz/nN8Q8bfyucKnX+8Fvsh2lpdvLkC+0Hamp5Puxz7
Adoa2GN1a35/3u8Y2Jdiv60/4/M5cxOut7FckvvNgX077+MN5xfH+tP/F8cu
wH6F8/t3/vI01zK4r78H+BTwLpy/i+uXseuDt6Z/cc7fiWOLy7VpS4APBC9l
X7d+3+zi4YscW9nfG3yy66kNv+uBh4DX6OLx9+C+4EWa8C9j4ZvgExi/Bdef
wHtir97F8+/oX5n+JTlWGX/A/fRlbfiU+dAJ+o82fHMM+k/09wT3A48PPtX5
Lj/s+PFA7EfbzJ/vy/ClmeRd4Ec6f/VYm/f5Qxm+NiP984BHdP7umTZ86285
sb62DX/9C3yc/prxc4OHd/7wyTb5369l+LB8aedufl6NfTHjL8deEns/+vcF
7wseB7y5/r7J+rqJ670KXr6Lhx+BVwTPwudmhT8g8xF7d/p3BzacvxH9+4D3
AY8N3gy8PXgHn5+xA8FL83yNXJ7+9cAX0X8ZcAnnNfh1Prfpfp8r9Yn0762/
xd6U/kvAVzg3nKvgE8Eng2cG7wIeAj4JPJPfGzxlxw/vqcI3TgCfCJ6R/p3A
y3X+9cOOv+0lxzZe0L8JeNku/n/Q8b0Pef4twXOALwLP02R+P1vl9/gPeBPv
372vz9v4R/3kF+DbwSPAP4G/6sVn6js3oj1VJ6dy7jiHHqnD0+RrC9JuqMPR
5Gpywif0175Hc3Xajdgv+t6xl6btWmXNu/Y37/i/79R36xpQb3jW74m9JG0t
OQx44zJrsI8xsc6zuUbl8JeA2zJjntHX8H02xX6h4wu7tfE/N1bxX663ZcEn
gke5fuqMX4o2qIqf0d/4DOoLDzJ+JN9vxzrz7zo+F6BvRdpt5mq83w/o36ZO
vH0C/D546zp86Cnwh+Bt68T/x8HvgQfX4U++Q9+lPvTf2J/SzsB+wHhirtT1
r0S7A/tpzv9I/lSHjzwGftf4V4ffyInkRmfQnsN+uI0eoy6jfxzB+LfAm9fh
h4+A3wYPqsOXhoPfBG9Wh/9dzfk3cO+TuN4T4Ifa6CnqKsafRxn/TpFce/T9
wG+AN63DX0YxfkzOP7WOHvNAm/hknDL/ObrN/BhVJ/9asome8jb3Owm8WJN8
9/XOvy3aJL97rfOvA5roIV93+fFqTfSSb7p8V3+q/vJtFX1k1Sb6x6guXzZf
MT48X8WfLtUk336n8+dLN8mv3+3ihetPveX9Lp6s1ESv+LTLp/s2WY+fdfn5
Kk30kq+q6EMrg7cAj+zy0z2b6F09vv9V4GWa5Ovvdf67fxM96EvwWb2sh4PA
s3Xz/RfzYNpctIvpn0Q/XSYGvoL9OZ8zlMmp5FMLcb2ZysTGDxm/cZv8VV/8
CfgHY3SZnHuY60l/VYZ7fNTL+jN/nrXzD9/XmatqCOfXWeOudWO4+oVryrW1
ehl95RDzmDIxX71vZuNOGY7zMfaWbfifvuTTXvSHsbjf/GX4g3rDmOD5yvCb
vdvwqR+q5PP3NeHrG9TJn13nrnc5h3xUn6JvWU2OWUcXUx/7mnP2qKODqYd9
Cd4VexjjJwFPqE8AX1NF46qMuU3WgGvBnF5upo/QV0xUJHa55lx7cii5yopN
9Cdj1ZA6HOD4OpxBbmDOuF+dHNVcciLaZN2z7am/bKOVXsvzXNVGM1E7UY+Z
vBeOPnaVnEDubo77RxkOPzr37eU7mnNM0osm6DvwHpNhz63PrPP9326y5kev
fTmf68U167xzDbj2u3z6mzLPpwZWNtHH1Mb0CfoiczB9hTHH2OP8Wb8Np7u/
zvyQ6+kj9BVyVrVcc8DT6uSI5oZn1dEQ9YGjfWEvc1N+vGibOe3clv8t1Man
6FuuKaP1mPOcXicnMhdyzjv35SNztfFJ+ibnl1rN5+A76+jL5v9fOsfqrL8N
2sRMY6f64vTY3/WicRnfjqH/2150ZPXk+dtw8FPqcHy5+ahujpovzei5vfBu
+fd8Pm/Hp9TI1MoGt8kdbqddby7fxj6cdjL2JvLNJn5htV7a4th7FOlbqRd/
sRW4n9wIvLfaCvg8c7Eufphj36FvBa+v7wMfCj4QfCT4fvBV3gvcD3yYcxRc
8gwHYC/PsXV7afKsok3feXW0eGOIGsmXHOuVeSe+GzmD3EFN/Ajsz/29y/ik
o+pwGrmmHFSusyt4G+51IfikJj5cbqwGpW+Xo8pV5czzNtFYvyvDgdVe1cCm
qqJxqY3Jl9Wy5URyI+Ofa/9G/U+b3/flOmvwZrmfmiR913Xr0fWprcZp/wdt
/P3sPiPnXtPmt76hu14f9bmOf2yv1tVGe/fYDdj3NtEPrM+oD66sntXxqR3a
aHbyqXu9Xxt9ztrKo/IF7O978eP6c7XUW2j3Yf9YpF5zU5tzh9DOaKPXWssx
RzdXP512VZF73oh9Zhtfo6Z9b5s17lp3jsr9zSFvr8OPzC2vbaKXrlxHf1JP
VV9cvo7+ZI3irTL+0tqF/vUN/a3vrI0mojaiRjF25792qaPPW7tQM5ST/lSk
VtEfvHCVnG5gE/+2O/1fFamFqHGodaghW4vxnchXh9d5V59hH1SmpqC+MLRN
/cA16dp8r06uu3eZepj1MW05mlzN+tgeZTiiXPEd2thFjlkvswbg+3u1jD5+
CMfOLMP5PpET0c4qc8x61nlt6h/6EH2J+bF6mDUCawX6HueqObv1jf51tOPh
3OP6JjnMgWpvRXKbDetoWcZIY6U510FVNAFzMXOYg6vUEMxt1LzVgv3N/O0W
r6Olq6lf2ERDOAE8ooi2YM1hSJWaj7WIVcCLVNFM1muS76u3W/Oz9qceYC1A
zUjtyHzL2qM5vrl+zTmvlKk5WG+5p83cs67yA9f+pc5ct2Znfcj6g+/Wc6ru
/TrXrRFaK7QGdZ5aXJHa1PnYN5fJ8dQTXLOuXX24a10NXy1/piK1BzV8tXxz
OGsVxstRZTTnSXuJx4dz7n+L+Gs1XrVeNWa1aXM+teYFi+SCxtMfu/UzRS81
RXNvc3BrjWrGasdqxmrdaoZqhysU0dLNydUi1SDN1c3h1R7VKM3tzcHVJpfs
1udCnX/UH7q+jdeSGf3lTNh3V8nVzdmt3T5RRVvoU6S2pcao1qgGovavHqR+
pE/5zvdXRQubseM/n1fJTeXEcmOLzVfRP3YZjdf80FqX8dk4bU5rLUOOLdc2
P7M2d6Uczd+vCvcZt4yGKTfRl+qDV6uTP1qrtUZsrViNxtrFOkW0mzeq1M7M
Kcwt1NTV1s251f7VWBaqwnHVXtRgrN2aQ5hLqOEsUEVDUNsxpza3VuNRmzBn
t/aihmMur0av9tS/i0dqpmqn5vBq/2r8av1qGtY2jux+f32wvliN5vtuPljr
UrNWu1ZTtVZ3ahP9e/Y69ZFTmujts9XRYz8sU5tTc7E+dXIT/X1W7OvoP6eJ
vj9fHf398Cb1lsnr1N/Vm60XzF9HX92uTayyRrwc9hR1ajOe47lqqhubCxXR
WtUk162igahVqmlaex/S8Z9t2/Bxa6zLtNFo16uioajdqoluVkUDVys9rIne
PJnzphdNeJMqNQe1YjXbTato+mq5asoDq2gsas3qLerFM9Sp/5/fpH6ysHMX
fF2TelzfOvWQa5rUA1eqU1/Rp+pb+9WpJ17QpH6yaJ36xuVN6k3L1tHbr25S
v1tRztCLz9R3LlanXnFnE268Dng4+K4m9ZWBdep9dzepr6xbpx45rEk9Z5E6
9RP5h+vBdXE/+NYm9ZvV69T7bmtSD1qjTv3r9ib1kTXr1A/l2ubn7nFYm2vc
06R+sF6d+qYcUC64Vp16oBr55lVqJGrnF3L/yzn3MdrybWoGe1WpmVpL2KGJ
5jaw44Jq5itV0fzV0j0mV1Qjd6yaXd8qmr1anhryylU0brVlNbAB4COKaGNq
cKtW0fTV5tRwV6zCr9V21fRWqJIzq/VZM7H25Zwe2vm33zr/rD9Vo/y188/6
O2sWv3T+0Nq9Gv+XXTzQP1oT+KLzd+4lGaPO3pXDi+T2+tOvunihv9c/vtXx
D+PJOpy/XJWawXbgtcHLVtFAtwH/qm+uwuHl8mqE1jqcw85lNcXBVWpCao1z
1KmF6RP0DdbgdgRfWqQ2Z01rlyqapbUuNcqtq9R81C6tge1URQO1NmbNaecq
Gq21qCua1J+Xq1MPtKaxZpUairUONdvVq9RQ1HJXBS9WRZPdCDwAvGiVGsEG
4NXBS4L3BG8GXgO8VBXNcxB4LfAyVTTcwU1qKmtUqZlYa1HTXa1KjUitd03w
0lU02i2baAhqCeqTR7bh33J59zg9qC+g/6Q6GvsSbTQ5a5uuObU6NTxrm64J
tT01NmuJrlG1NzUAtYBPi/BXNblzO35hfqrmN7TjW2qB5q/yj1fAA9pobKNr
rUW0NzWz0bW/IlqaGt3oWm4R7e7DJrnkn8aLNjm4ubgcVa76QZPcUc4odxzT
GFxkT458erwm3Hqk8buNZmmt0BxDLdN8XS3P/TNqiWqCp3X5oFqheoW1C+v5
i8gf2thqSmpLi4HV4tWM1I7MB6wTWS+appd8x9rOsV1+Y34vD5APrNTpAWqw
7u+a1rXcpk/Oe7HabhstyBr8QV0+Lw+QD/Rvkx9ZSzq+y1cWbKMFrK6P53nu
bOOr3POzYZv8f+86NXu1MOeAc2EW2lpN9IUT6uxh8Pt4zD5rdyfW0RuOq7Nn
xu+/Xpt+ryF/eIZj85TZ8+TvrWagdmDO634yNRC1EGsQ+ic1amtt7p/brcv/
5ZLmwGe30QCnrqKRqg2a05jbLE//LtgvNrHV9Pw+x/l9i2hgx7fJmcydlpMT
tNFc1F6M6cb2V5vstXGPlXutXmgydl7aRl2+eGcRDc98c1CbfN0cyv05rrfH
6+zX2rLTS9TZ1Nv2a1NPs75gDWKfNjmiuaL50mZt9lBYK1yh+/6rt9Fm1Ix3
dX012atkjnRWG83POoD1gL07PWTTIpqi+og52zF1aliuj9eaaDXuOXPvmTnV
sXVqYK4X9ZhX69QjTuje3yD9NW2VNs/os7on5JA2GpFakXtADmijAaoFqrnP
A35DDmR8pp3YRi9Ta3S+qe+p96mDqIfM3UYjVCu0xir/d4+N9RWv4X5Ja4TW
SwZ1v6fr44oyMfii7n7TF9lj6V7L15v8Fu7Rc6/e5m1y1dF7brB3lmOW+U2s
b67dREtSY7L+qb41ok79Rz3Emop1WdfwCt1887tM0c0/54ta4uTd/OrXZm2a
813WZj/dkWVqNvI9NSW1o0nraE3j+s6LxBRjy4RttCc5odxw/DZcUk4ntxuv
DbeTU8otJ2jDHeWccs8x28QGOYJcYYw2XEEOIZcYq02sMoYYS6ZoEwuNqcZW
NSXvP0sdrWnKNlqTMdPYOXEbrikHlYtO1IaLyoHlwu4X0vf5m+qvxmkTK41h
xrKx28QyY6ax0/1Ern3nkPPJ/Udqj+ZYh3T+w/zGNeXaUqOdtUgOai5qPHCu
m1OaW55cx7eYz5jX6N+sl1o3Nfb93EQrsc/cx/2o+zP+5yL6m7qcvkr+JI+q
2nArbbnV5G24h5xEbmL9wL2cxiT1OvcH7FNGn7G+pb/zWv9U0YKn62X8sE5/
sX5vLNHfWr9w/4OxxGe2PuB+Y/P5v7v83/qDe0H1kdbL3m2SO5lDmUur2bp3
y9qZWu6kbbirOYW5xSRtcgtzBnOHycDnFOG4ct1pwVcW4UxyJ7V9Y6cxVJ1q
hzqxXw7wJvjZJtxOjjdzx5/VSteuo63O0EZrUZNRm5mmDReTY8m1ZmvDDeQI
ahVTt+FecjK52YxttBk1G7Wb6dtot3JuuffcTfYjPCMn60WjtX+FOtrtzG2e
R01HbWdW8KNFNBu1m1naaDdqOmo7asLO94XqaMXTteH2cmi59EzgO4poRmpH
7jGwXtyvzH7gqdpwSTmoXPSvJtxWTie3+wm8Y5Gc2tz6xya5tTm3uXfbJhcw
BzAX6LXxF+YI5gpqzmrbbd1p0U203C+qaN3Ge7nEmF1+4v7mo8vUeM1f/2zC
LeWMcsdfmmhVaohqib814a5yVrnrH024pRxVrvq/JlxVDiuX/b17Hjmv3Pfv
JtxeTi+3b9rkMuZA5kK/NuHCamRqZXWb3Mgcxlzmnya5kTmCucK+bWKpObO5
s+vfWo0+11qR/t53bw3N+Ktet2PH59X/1IzVjq259m2To7o3TA1gdO7ay15B
c1q1Wzn+Hl2+JPc3B3avoTmoubH7ZYwVA7r4q/7o3HaOqweqWbu3dXgRLduc
2r2G5sDm2uaY7qU15zb3NOd1r6s5t7mwOa97cdWQzYXVjJ17zsHRWnIveqT6
prm5+qZz1zmsvmeN2L04fYrUjq0Bqy+pz6jnWFNW31qhiB5kTVe9Rn1G/Um9
SL1txSL6kTVl91KrT1lrtubs3mxrxNairSm7F9sarrVm9S/1J+ekc9OasPqT
epR6mDVj92Jb07aWbE3YvcvqU9aKrRn73wJr0taSrWmq744oot9aI3avj/qS
tWNzdNe2a3y07wGfUUcfUyuwxrxEl2+Zn6o5HFVFo1CLUFPpXyV/VWtRE9m2
imakVqJmtEEVDUYtyZpKP+znqtRavJ9ahHsMp+olf7UuvWmT/M78QN/uvuAh
nSayTxUNRq1En/VnmT1F+jLPtbY9uMg13BMwThUf514Ba3pqh1d3/OKSNlrh
FV2+oCamPqUeZT6sRuNe1EuKaDdqKO5FVTNTW1GTMX++tIhWo2bi3mFzXrUU
NRX3UqvxqLWoIck95CDm4+phcgs5hvqXGpp6wBFF9DHzc7mBHMF8XI3OvZPq
Z2p31oDk4pt2/EpNzr2x5vtqdWpwxlpjrvqFGo57wdXn1Xbco+DeNn8T9y4Y
I9XK3Y9v7PQ/JP6XRD1z2yb/gfC/EO5hWLdJjDRWut9k9y4fWLkMx5fr+58T
/3uyrTG/SX34zDo1Mmtl/sdF360PV/ex5mftb0fsnZrw775l9nBuwfF12nAN
j/n/D2s4cgXv6f871FP0rfpY9R7/E+J/Q6yprd/kPyz+l2U78NZN9kCpN29V
pA7qHg735vUtsrfD/MHvJgeWC/sfG/9rs7Uxv0l91dzBfQnmd9bsrN1tSf+G
Tfisc00N+9I2/4HxvzDb0L9FE04lt7LGPyX2/wGLqZYP
         "]], Polygon3DBox[CompressedData["
1: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
         "]], 
        Polygon3DBox[{{1470, 690, 494, 493, 886, 1322}, {1269, 753, 908, 1560,
          1105, 1106}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0s9L02EcwPHHNWtZ00r06FC6hWF0LegYFCEe7dZFm5IIgT9AKpFt2A8q
YlH5a9XWrR+gN2916lip+WNbkeuPiA69Hujw2ev9bHv4fp/t231tbOBGUwjh
mXkkYg95+c1UMoRjTDPDTp7mSZ7nWV7mveYQbtlzVd/Xt3W/z7LWd/SIntKz
ekoX9JzO66f6oT0560q8B13Qa/qxntef9EV9Qr83X+M1edy8M88TIXzzXrt+
oTf0Aje5yC0u8TuXuc0VlsyOfsldvuIeX7PKMmussM43/MHigRA6XOuD+Rnv
n6fMZ+f5Yr3Oj3zLVZZY5hMWmWOek5xkltfj6Csc5AVe4hmeYw972ed3+Msu
c1fPuO6feD628QEz8f8zrdbTbJi0nuC+Oapv8pc5ovecZ1y36B0dH4jDeluP
6pTe1FldN4esh1kzB3WVbiXsMhn30dfDFhPxfBaN/8/XP9RiUDw=
       "]]}, {Line3DBox[CompressedData["
1:eJwNy8kug2EYBeCXqHEpVlKJqY1bMba1QbXEFi1W5nHHVkTqBmyLpTswjzsW
RBMrt+BZPDnnP+/3d8+Vc6W6iMjT3BCRSkSc10c06Wm9pzHiRm+hV7+VrfTp
d7KNdr2fQe/nubdNyA5biiF9gQf7pPyyDchhFrnmxzYlV1ljhBIf9kf/5fV1
Nhil0/7Jk9u07022GKNmL8tjnt0LcpsqO6TdM3KJE168KcpdLvhzT5LVlznl
1ZsZ2WX/5VLfI8cKFd68mZXf7vvyigPGOeSMd2+O5D+A3C6X
       "]], 
      Line3DBox[{1037, 1320, 1469, 1747, 1036, 687, 1038, 1576, 1239, 1039, 
       1577, 1240, 1040, 1556, 1578, 1241, 1041, 881, 1242, 1042, 1749, 1322, 
       1470, 1748, 1043, 1323, 1471, 1750, 1044, 1324, 1579, 1243, 1456, 1325,
        1463, 1776, 1464, 1465, 1427, 1558, 1580, 1467, 1244, 1429, 1559, 
       1581, 1245, 1431, 1772, 1326, 1246, 1433, 1773, 1327, 1247, 1328}], 
      Line3DBox[{1046, 1472, 1662, 1045, 1473, 1663, 1047, 695, 1048, 1582, 
       1248, 1049, 1583, 1249, 1050, 1584, 1250, 1051, 1585, 1474, 1664, 1052,
        1475, 1665, 1053, 1476, 1666, 1054, 1462, 1586, 1251, 1466, 1569, 
       1587, 1252, 1055, 1588, 1253, 1056, 1589, 1254, 1057, 1590, 1255, 
       1058}], Line3DBox[{1060, 1477, 1667, 1059, 1478, 1668, 1061, 1479, 
       1669, 1062, 710, 1063, 1591, 1256, 1064, 1592, 1257, 1065, 1593, 1480, 
       1670, 1066, 1481, 1671, 1067, 1482, 1672, 1068, 1483, 1673, 1069, 1594,
        1258, 1070, 1595, 1259, 1071, 1596, 1260, 1072, 1597, 1261, 1073}], 
      Line3DBox[{1075, 1329, 1330, 1759, 1074, 1331, 1332, 1751, 1076, 1484, 
       1674, 1077, 1485, 1675, 1078, 726, 1079, 1598, 1262, 1080, 1599, 1486, 
       1676, 1081, 1487, 1677, 1082, 1488, 1678, 1083, 1489, 1679, 1084, 1490,
        1680, 1085, 1600, 1263, 1086, 1601, 1264, 1087, 1602, 1265, 1088}], 
      Line3DBox[{1102, 1267, 1605, 1101, 1266, 1604, 1100, 1689, 1499, 1099, 
       1688, 1498, 1098, 1687, 1497, 1097, 1686, 1496, 1096, 1685, 1495, 1095,
        1684, 1494, 1603, 1094, 742, 1093, 1683, 1493, 1092, 1682, 1492, 1091,
        1681, 1491, 1090, 906, 1334, 1089, 1760, 1333, 1377, 434, 1420}], 
      Line3DBox[{1104, 1335, 1379, 1395, 1764, 1268, 1364, 1337, 1606, 1269, 
       1106, 1607, 1270, 1108, 1608, 1271, 1110, 1609, 1272, 1112, 1610, 1273,
        1114, 1611, 759, 1116, 1612, 1274, 1118, 1613, 1275, 1120, 1614, 1276,
        1122, 1615, 1277, 1124, 1616, 1278, 1126, 1617, 1279, 1128, 1619, 
       1281, 1130}], 
      Line3DBox[{1129, 1280, 1618, 1127, 1701, 1509, 1125, 1700, 1508, 1123, 
       1699, 1507, 1121, 1698, 1506, 1119, 1697, 1505, 1117, 1696, 1504, 1115,
        1695, 758, 1113, 1694, 1503, 1111, 1693, 1502, 1109, 1692, 1501, 1107,
        1691, 1500, 1105, 1560, 1690, 1336, 1103, 907, 1378, 1451, 1450, 
       1421}], Line3DBox[{1131, 1338, 1380, 1396, 1510, 1767, 1365, 1339, 
       1620, 1282, 1132, 1621, 1283, 1133, 1622, 1284, 1134, 1623, 1285, 1135,
        1624, 1286, 1136, 1625, 1511, 1702, 1137, 775, 1138, 1626, 1287, 1139,
        1627, 1288, 1140, 1628, 1289, 1141, 1629, 1290, 1142, 1630, 1291, 
       1143, 1631, 1292, 1144}], 
      Line3DBox[{1145, 1422, 1340, 1381, 1397, 1398, 1768, 1366, 1341, 1436, 
       1512, 1752, 1146, 1632, 1293, 1147, 1633, 1294, 1148, 1634, 1295, 1149,
        1635, 1296, 1150, 1636, 1513, 1703, 1151, 1514, 1704, 1152, 791, 1153,
        1637, 1297, 1154, 1638, 1298, 1155, 1639, 1299, 1156, 1640, 1300, 
       1157, 1641, 1301, 1158}], 
      Line3DBox[{1159, 1423, 1342, 1382, 1399, 1753, 1564, 1367, 1461, 1343, 
       1437, 1515, 1754, 1160, 1516, 1705, 1161, 1642, 1302, 1162, 1643, 1303,
        1163, 1644, 1304, 1164, 1645, 1517, 1706, 1165, 1518, 1707, 1166, 
       1519, 1708, 1167, 807, 1168, 1646, 1305, 1169, 1647, 1306, 1170, 1648, 
       1307, 1171, 1649, 1308, 1172}], 
      Line3DBox[{1185, 1313, 1655, 1184, 1312, 1654, 1183, 1311, 1653, 1182, 
       823, 1181, 1714, 1525, 1180, 1713, 1524, 1179, 1712, 1523, 1178, 1711, 
       1522, 1652, 1177, 1310, 1651, 1176, 1309, 1650, 1175, 1710, 1521, 1174,
        1709, 1520, 1173, 1755, 1347, 1438, 1346, 1439, 1440, 1567, 1770, 
       1345, 1383, 1344, 1452, 1424}], 
      Line3DBox[{1198, 1316, 1659, 1197, 1315, 1658, 1196, 839, 1195, 1722, 
       1533, 1194, 1721, 1532, 1193, 1720, 1531, 1192, 1719, 1530, 1191, 1718,
        1529, 1657, 1190, 1314, 1656, 1189, 1717, 1528, 1188, 1716, 1527, 
       1187, 1715, 1526, 1186, 1756, 1351, 1441, 1350, 1442, 1443, 1761, 1412,
        1349, 1384, 1348, 1453, 1425}], 
      Line3DBox[{1212, 1317, 1661, 1211, 855, 1210, 1733, 1543, 1209, 1732, 
       1542, 1208, 1731, 1541, 1207, 1730, 1540, 1206, 1729, 1539, 1205, 1728,
        1538, 1660, 1204, 1727, 1537, 1203, 1726, 1536, 1202, 1725, 1535, 
       1201, 1724, 1534, 1200, 1561, 1723, 1444, 1446, 1445, 1199, 1774, 1413,
        1414, 1385, 1455, 1454, 1426}], 
      Line3DBox[{1226, 1353, 916, 1225, 1746, 1554, 1224, 1745, 1553, 1223, 
       1744, 1552, 1222, 1743, 1551, 1221, 1742, 1550, 1220, 1741, 1549, 1219,
        1740, 1739, 1548, 1218, 1738, 1547, 1217, 1737, 1546, 1216, 1736, 
       1545, 1215, 1735, 1544, 1214, 1562, 1734, 1447, 1449, 1448, 1213, 1568,
        1771, 1417, 1386, 1416, 1415, 1352}]}, {
      Line3DBox[{471, 872, 681, 1570, 472, 687, 488, 1663, 694, 502, 1668, 
       708, 517, 904, 1751, 723, 532, 906, 738, 547, 1690, 908, 753, 1606, 
       562, 909, 768, 1620, 577, 910, 1752, 783, 592, 911, 1754, 798, 607, 
       912, 1755, 813, 622, 913, 1756, 828, 637, 1723, 914, 843, 652, 1734, 
       915, 858, 667}], 
      Line3DBox[{473, 682, 1571, 474, 688, 1576, 489, 695, 503, 1669, 709, 
       518, 1674, 724, 533, 1681, 739, 548, 1691, 754, 1607, 563, 769, 1621, 
       578, 784, 1632, 593, 1705, 799, 608, 1709, 814, 623, 1715, 829, 638, 
       1724, 844, 653, 1735, 859, 668}], 
      Line3DBox[{475, 683, 1572, 476, 689, 1577, 490, 696, 1582, 504, 710, 
       519, 1675, 725, 534, 1682, 740, 549, 1692, 755, 1608, 564, 770, 1622, 
       579, 785, 1633, 594, 800, 1642, 609, 1710, 815, 624, 1716, 830, 639, 
       1725, 845, 654, 1736, 860, 669}], 
      Line3DBox[{477, 875, 876, 1573, 919, 877, 878, 1578, 491, 697, 1583, 
       505, 711, 1591, 520, 726, 535, 1683, 741, 550, 1693, 756, 1609, 565, 
       771, 1623, 580, 786, 1634, 595, 801, 1643, 610, 816, 1650, 625, 1717, 
       831, 640, 1726, 846, 655, 1737, 861, 670}], 
      Line3DBox[{478, 361, 934, 879, 1574, 920, 880, 881, 492, 698, 1584, 506,
        712, 1592, 521, 727, 1598, 536, 742, 551, 1694, 757, 1610, 566, 772, 
       1624, 581, 787, 1635, 596, 802, 1644, 611, 817, 1651, 626, 832, 1656, 
       641, 1727, 847, 656, 1738, 862, 671}], 
      Line3DBox[{479, 983, 984, 935, 1762, 883, 921, 884, 1749, 886, 493, 699,
        1585, 507, 713, 1593, 522, 728, 1599, 537, 743, 1603, 552, 758, 1611, 
       567, 773, 1625, 582, 788, 1636, 597, 803, 1645, 612, 818, 1652, 627, 
       833, 1657, 642, 848, 1660, 657, 1739, 863, 672}], 
      Line3DBox[{483, 990, 893, 940, 894, 1575, 959, 922, 1007, 895, 995, 896,
        1580, 1029, 1030, 1024, 1027, 1025, 1587, 512, 718, 1594, 527, 1680, 
       733, 542, 1688, 748, 557, 1699, 763, 1615, 572, 778, 1628, 587, 793, 
       1638, 602, 808, 1646, 617, 823, 632, 1722, 838, 647, 1732, 853, 662, 
       1744, 868, 677}], 
      Line3DBox[{484, 991, 897, 941, 898, 960, 1775, 923, 1008, 899, 998, 900,
        1581, 498, 704, 1588, 513, 719, 1595, 528, 734, 1600, 543, 1689, 749, 
       558, 1700, 764, 1616, 573, 779, 1629, 588, 794, 1639, 603, 809, 1647, 
       618, 824, 1653, 633, 839, 648, 1733, 854, 663, 1745, 869, 678}], 
      Line3DBox[{485, 992, 993, 942, 962, 961, 1769, 1011, 1009, 1010, 999, 
       1772, 901, 499, 705, 1589, 514, 720, 1596, 529, 735, 1601, 544, 750, 
       1604, 559, 1701, 765, 1617, 574, 780, 1630, 589, 795, 1640, 604, 810, 
       1648, 619, 825, 1654, 634, 840, 1658, 649, 855, 664, 1746, 870, 679}], 
      Line3DBox[{486, 963, 964, 943, 966, 1763, 965, 1014, 1012, 1013, 1000, 
       1773, 902, 500, 706, 1590, 515, 721, 1597, 530, 736, 1602, 545, 751, 
       1605, 560, 766, 1618, 1619, 575, 781, 1631, 590, 796, 1641, 605, 811, 
       1649, 620, 826, 1655, 635, 841, 1659, 650, 856, 1661, 665, 916, 917, 
       918}], Line3DBox[CompressedData["
1:eJwV0DsvA2AUBuDjko4Ws4HZYraYLU1sIjFYhAR/QCwdRPoPGvdL0qmbu1oM
1F2LxEQTSVHEIpRBH8OT9z3fOdPXPjTRN94QEQNkGiP6myJ+uWGNa94oUU1E
pN306j/ss0qRV97tr+Skm25ZI88Kl5Ttq/KCMTed8ps9lnmxP/9Pzhh00ya/
2OXOfkme8swJSTct8sluRy5yTIEeuz8qdtvmBY44pMv7o/cPuWWeJ02Hucym
PseDmxnZ6q3Ihj7Lvfdp2eztgJT500eu61N6Rc/pJX3E3a05ax7WR6kDrt1A
1w==
       "]], 
      Line3DBox[{673, 864, 1740, 658, 849, 1728, 643, 834, 1718, 628, 819, 
       1711, 613, 804, 1706, 598, 789, 1703, 583, 774, 1702, 568, 759, 1695, 
       553, 744, 1684, 538, 729, 1676, 523, 714, 1670, 508, 700, 1664, 494, 
       690, 1748, 885, 480, 684, 1765, 944, 936, 882, 982}], 
      Line3DBox[{674, 865, 1741, 659, 850, 1729, 644, 835, 1719, 629, 820, 
       1712, 614, 805, 1707, 599, 790, 1704, 584, 775, 569, 1612, 760, 1696, 
       554, 745, 1685, 539, 730, 1677, 524, 715, 1671, 509, 701, 1665, 495, 
       691, 1750, 888, 481, 1757, 685, 945, 937, 887, 985}], 
      Line3DBox[{675, 866, 1742, 660, 851, 1730, 645, 836, 1720, 630, 821, 
       1713, 615, 806, 1708, 600, 791, 585, 1626, 776, 570, 1613, 761, 1697, 
       555, 746, 1686, 540, 731, 1678, 525, 716, 1672, 510, 702, 1666, 496, 
       1579, 692, 1006, 890, 482, 1758, 947, 946, 938, 889, 987, 986}], 
      Line3DBox[{676, 867, 1743, 661, 852, 1731, 646, 837, 1721, 631, 822, 
       1714, 616, 807, 601, 1637, 792, 586, 1627, 777, 571, 1614, 762, 1698, 
       556, 747, 1687, 541, 732, 1679, 526, 717, 1673, 511, 1586, 703, 1026, 
       1021, 1028, 497, 1023, 1776, 1022, 994, 892, 1020, 996, 997, 949, 1766,
        948, 939, 891, 989, 988}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
9GMMWRx4d2tHWQJU6WVMeB8dAjOm/kP3fvah3SacQ7zB2ZDrqeX5gvzzt4Sx
f3EeG0NKcY5Ctk9iYen9pAWtaAjuvrhg2nWsD0VV0TT2M2bAbbO8ixnSbeAu
IqJ+lYOGLEcrjnIkRcGVC0nrl/YOw3Dt9c/qmb2IQ9bcc69wKjAPGc0YZbXC
m7/rPVeJ09BO3jPH7upFALAlDYm/HgYny8jP5Xd60eD0Nt8PGUmwXc6u7TZf
KxCTH91f3qehbzub1XQdwiDHSWLBN2YYVDVb/pRw9aLvG3h7Yibj4JaTefqN
1y3wW11f4aAlDe2qXbnZejoEGq1Eh0x+DMMS8xru3z1UJF146fhkfTQkyh6x
2FrRDGrryppfxdJQBM/eJhOPYIh8QbS6Dg+Dupj3EQ2gosfzZ0N0j0dCapC+
5LUdzaCvrddaW0VDcY9FPFeXB8JD0e8D+r+HgbJjyHApmopG6zN2jWcGQOgu
xwp2hhEo3+y1OjCEimxMDd2jFsLAc8re+/T7JjgYKhPKQ9CQ5N3SrcwMYdBM
Yy1M2tcE3Uqt72lLNIR5gHmB+YB5gHmB+YB5gHmB+YB5gHmB+YB5gHmB+YB5
gHmB+YB5gHmB+YB5gHmB+YB5gHmB+YB5gHmB+YB5gHmB+YB5gHmB+YB5gHmB
+YB5gHmB+YB5gHmB+YB5gHmB+YB5gHmB+YB5gHmB+YB5gHmB+YDjjeOP4475
gfmCeZKbXHL+0k0CNp2S2iFlqE/xrjEyyF76jjA/MF8wTz5M6KYEVpgCPset
e6f+1bcXl7TclCRNgW9XHH/YjY9wMexbqilpT2Zo+x6URwEBhgcLPJd7IAh9
290UOYLOXrzGfP1vDsR4CLy07uoBwSve1X9uj6DcX3tEB1UzYYWI4o/LIlSI
YnL2SDw8ggofa6z59ikN7ujJRXhdpsIeOmVz5q4RxF0w/TBILAUk0uXkVpN2
WwetNof9IyjmeQ8fT0wilNzzkdYUpUJixOWncmgEearSHc9YxYGu7JEQbg4q
3FZ+qlShMoLa+xsiIrqjgfOx5cSbnh7Yk79i33aTERQf9WFCODAS5DKJXY5x
PXDl5sQj8fARhPHC+GHcLLnn6m/EhQP/9u3RDi96QFjp+Ihj5QjC/mM8MA7Y
f4wHxgH7j/HAOGD/MR4YB+w/xgPjgP3HeGAcsP8YD4wD9h/jgXHA/mM8MA7Y
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
OrVOtFRnu4FwvKKtPomb5hHD9xRLe7hanMXjPeIKOX0WmdWkXac98PThi7Zg
LPw2/csxV/Df9qdh47/v6Ry210hM9cL7xh/HvijGgOjhTgs0P4Rk+m8bRYc2
QDiFx/DM0Vio3poSuBfR0Z1tD7lqnctg/vPVY3WLkaAUU1woR+rVvct66May
PsK6aP9lOY3DghnwnXqhYbddCPi+GR853UXOpwfMtYfKE4GNMepkwpUg6HDn
ibtJ8taNbr1exjgKpIW6st7e9AeDF2vNJKb/d89j8Z89z4VZ3u1TIv7wiqZr
oKfqDlT6UXZZEk8ul+tv+y284I7VlYtXt7rBTZGHek9I3Equr9hrS3ODThZt
3wusrqD0bIv+ARIfefgS9HmLC+DTjWeDeyZpDw5VUF6X6QAi+UEucvLOMKss
FcL77/tE9u7PGuvtQGRpYPahiBP4+WuffkTag1/tETBZbw1/9e/rcIw4QOsO
rSv/5kHTUO6eb029YKqqoXpybRTkPCujbdowjDq1mjPlf9dDXeD+wk8Ho0BA
+PdQLTkvyCtVRKTql0K1LfOLRuZwMI9rZ5l+TvZrR2k+2a35wNnGve/coRCI
Tq2gipeQ/FnWQw3L+gjrov5NkumQGQ/rx+qOv/PwJf0NtLxN9vfgs3ufS9ZE
QKSarEP4pBd0NbF8UZz93z2P6n/2PK0n+Mwo+33h/U+J1uOKLtDwPmXu37yc
JrrFX7vSA/7wu+ftP+oMfgn8j/7tw8V7X6ew67lCvROTCN87R6ixSRr8Str9
9Puypr2cwJrl5329entQnw9MECPxmVCpr/n26DPgE7XzddqQdrvHQT/rF6zh
640v925vtwO+Rx+ffSPte9Q01W8ctYSQ3bpRhittgWfT98NTpP1Av5mvSCqp
N3LojF7cEZB/jBbgfWgYvc8YmjG/VQ9yVX56TjHhsPXdWxaed3RUJap5IEin
BLbY8n1g9Q4B0cWvAcbvCaTqUDqpaf8F+LMVPY/3BwCTVkPTSCWBKs982vc7
MBXEBBwj0qk+YKMdWxc/SOq9ZT20ePR/9BHWRTc8neoa7oXD8Z+nnILJernu
ndVw19z/7nk6/rPnuTaweeO2594w2GUgWvfDAUJHpesqSZzF+S68cLnqDmY3
+X8pVX2GML+FXaEknifXZKwMF3KBJxIrazdvtoN9rJUFh0gceqILz9FvO4DN
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
RSX/x89VCLDPCwoWCoW+mz1/DlUMQ9O1FfcTBqlofrDo8OqRYFDWkJhI7x2G
bk5e5qOlVPS3k3ePQ2QQeE891e2dHoabC/KbHiRTkfHy/YWX76+9fP+r4luK
j6MECJqq+qFzYxB2fHmc49zQjy4tf58Jy99rUpe/09Retscv22eW7YfelQus
FI8GjsEK2o2MQZhxyZG9+6IfbQhrKtCqiYcjM1xSvmx9sN88o523ewjdnfj/
6jrzsJjaN44jS5FIyBIiS3aVZD8UiiRr2UqLiEhly55kLUkqS1Jp10KLKOpO
uwilRUnbFJWaiYgofuf0nu/vj7kuf77ncr3NnJnnue/7OZ/PdwofHvevprPr
JCM72p/QIEfN/p+y6hmV5Qb6zDoBzeqqr7zo3SOSGK6/Pm59PXOyalzQ0icC
emg63pOC42i/S8eKLey+8XbmhT4H2blpx5VCG2PFGGpLrg72aKhjNhkPfqXf
p4YOLh36q//gB2Tn7Dm4J/s9Wci/ju786xrNv57dK89OSekQ0JRh2emJXe/R
yX3n544W1TG9607ajxEIaGfB6ZrPfiF0cUtB1tOe9cy7BHPXQhKQ791Zzcz1
IFKcHpR0aGw9c5Vfd4f5dbeaX3dvB5nFDlIKpdY4r67TPgpohnXflAKJeqaN
9yojeM9SifcrC/nrpfz1n4L/rl+xOKim/+40zV5Uu1F0Qkh37Y61bbF8y8xe
1tvWoctNynwSYGBd+pl+2WStWGxfwUgskG/zjQykD9VTKChcQD9Uv3+QVK9n
BtWfkH9Y5U+9wgWKt9nvud3O6Q8rZ9cyp8OMXNXKBPRLtaLSdU0s+W9cNvBK
Wx2zOi5RRbVKQNq1gX6egTFkq3jsSgC7vl4ruax51K2GBu6yU/nRN5qWerca
GFWx6/r0sLaBXWtIFDYqQM/xAU1VWLZzfE0ds0i2TX6NTA1dend1qObuKLrf
saTldVkdY9K8uWyCZA0Z792b6+cUSTMebbjwvrqO8f9OKtU9a+jza++dvpvC
aUf7/XNbPtYxLaODNl5jPy+Z5g9mX2+yn9f1g56BwjrmZdLhVTFfBPRljazn
lIxQ0on7aCb5q475yN/3Uv5zWMDf//7xW6bszhdQ+qZAVSP3YDq+Vm1B68B6
ZurjAQc3Zgjo3On49Sm9gmnSeu1iGsV+Xvx9bJ3/332t5u/nictdZU/5CGhm
9GJ/oXog6QrajawX1TNLnm3JGuAloLovi4Y+fxtAktMcjp5cVs8s5XMh9/D9
1U6+v3K+dOXFaeYqVbV9st7ZrZHULsx5aCQsZxrvHPY6cTWUjKovT1Kyqadn
ZhZ11psFjKDVQ+GCrEPyg8Dzf3uMF1KZRfrQyQcKGd0PwRukFpxIHhWcqvn4
iJDi3o+sfu30lmmf9l+/ZMP3S5nolybUK5vkHE0eYHVye0CCkDKM1Zztq/OY
xiD7v0l+52nMTdt239wmynL8fDl3RTHbH9bd5Tj8EJ7D72/wH4cfmqYkIZ3h
RFkPpaKKZwvpdco80+CehczDWf/5OfG8r3OX93QO8d7OTf76uBf/XdesWJq6
VeM+qZUtf5/To4TmPdwdvdm86f/9lXjOjEBn7RelV1HU+HZAr6nBlbRH9siX
s5qfmZKw0xntC6Lo3MFTmXYz2Do4SbKPk2YDU9vdcYS+Whi1rlzUc21lMZXk
VDlUsH37pr5HotoLg2mEttkk65XF5GAi76aU0cS80G2LsHseSBNPO1urJhbR
8YOVj4urm5gxZ6IG2bP7TFJXpznJ3yIpfaGX8b0K9vv5eu3u7ey6GCI4Ihv7
4x6NSBhhbMbuS6tddq7s2yigr8t13x23CyXfDTG3Sv/UMX4f+rh+fyFg98md
q5N1g+mTYZr0qmHs9/OAy2S/QAEpVf2RiLcJpIwtRZGxc+uZLuW51jYu0fRF
2/Rej6slNOyxn0LzoibmNr//bOf3H2N+/3mj8nHKpuNh1JA2KXerTiVZvlxi
ZOnwmcnmvaT9vJd0ifeSMvnr0/nr3vz15H/4Si7b+88dbRNEMzRqP88MqaCp
Oy5PDsv6zDxqObDzsFIQGTsseKt9qIQOm/dVnri+iXnSK7fpjnEQHXV3bB5z
vopGz3mnqpnUwCyzXj+ojN0HrjZmSayziKBhlxcn3xDUMVtHFBX5s/W9NK37
puqQMHrrv+X79ZY65vmQxw7SH9j9WVCp5b0+hPoFLp1Y0qeeMVnepVA2QUCq
Xkz20w1B7LpZu7tjYj3jXr83ushVQPHr65x7egeQnRGzZMnKeub+Pb1hO9bc
p74PcrfPUyqn1NkbzI9ObGTO6nyQl/UOp+K5l9bNHfCS3LNXr9k6hZ1PzQTZ
tUVRJLKylurZUUQzXf6O25zbxLQuX3fUTRRJ+z08nzzVf0sbjTxjDu8XMu68
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
vvSAWF/qvWfamzCtUFoaaqUoNbuA5hdV6KWsFTLCifvdXvXNpr8TfHNLdN+Q
8eclrq2bhczM9nDvmI+p9EV7ZEaE6hv6aK313uqGkPG6VV6/fFcyGdYmFG65
8pq2uY+N1sgSMie/+XeRb31MIwvcX82zeUWZF8ZUv24UMrv45+yyYs/ZdcZW
+r6dGkJ3QtYv/rIti+xuT1eJ2ytich9P9kpmP9fSm4b5Z6KzqLFh8y5/9nNM
kv4TYWpxl/LkWo+dSs4kv5NXXbTsRYy1xZkA4SE/2n2jR1VzSQbt2GviaHdG
xLS/STrdfWgqOa7SXfu1MpMmb1FdvEeZ7W8/h8qFrHtK8keadh4Ly6BY96Pn
cgxEzNqRoeNCEuKpR5Cl2qId6RQdqdP/4iERY8jXs8liz9/neG/q5WHvT6e2
Flfe104i55NvNtmw/WF0pGqfqrw7JPF6iF5RyRO6NeiLU+ALESOZ9yF0iok3
lQT4NiZfSqSNi77q1rF9Y+ChLn3dmxPIcafOtq4mRE+G7euVel3EDJfpE59n
H0f6SaIX62SS6JrXJKnQByLmHV+3rMWeyxfZj5r1cfktmj2wZLTMkxhaFvPr
94ZPImZSQ4bhuYXX6fSrKYYT0qMpKP2ixJgGEdM04ubG2SdiKKjnX5vw6IfU
84P1i365bL/B148jYs/rrVJTo6eN86Bn8/UXG+8No11xN97rsf1SFe8vufzj
9x12i/2+QxnvsYSJ/b6DAe9dFIj9vsMf3h8Qiv2+gyHPnffnOfRknj+/zfPH
O3geOZfnkH/xHO11sd9xuMbzoDo8H7qP50Kv8LzjIrHfcUjieb6jYr/jcJLn
0naK/Y5DHl+H1oo9r5/Fc1cFYr/vMOuaX+6TPsWkWhEh1WQVS4YyEUrjnjUx
+y7KfbP/84LUtbTk2Y+CTETPf+wfJ2IeeLu/uaWQSkoZY6jnqvuUkvi7x5A7
IkZXeDlv6owE2hG9/skZt3BKGPbss/5LESN/Zf5kLfZz/3ZbOOrq8VAabK8x
Vr2KnS9cNN8pLIsghZFe6U0/g6jm2pLG5s8iJiDaKWW2/h0q1bvp/iPPj56+
ig9tZ+9P7R06nOZ0k2afVDvCKPvSjcXXdoSx7+ur5kVZQaontY/tf6iliw9Z
tgTllbH34UTvbP/+6e6Uvvr23+aR3qSrENk9hX2/J7odk4oydKOEkOEzDA7d
JC3VMxZ7OA553oH+8+JdSL1Yr+pRx3X6pn5xxlcuJ63o08tvxTn0RfC5r6Ff
FD27KRX1dq6Iuet2SM939DM6skFi5uHQe7T3dlvBoHAR4+g7bkqN9yPamx8h
e2lpCA1+v2uCVwH7vf30e6LW7Ghy2aQ55IlzIGk1NjCF7PfnpI91o5X6Pbrm
UDujZdNdarGatK5DxPaZBbrSfvuvk/mtoPx7L29S97zsvovY15+W8/Coces1
2nZo7A3VtuvkJrHtsir7Op2r3/cYNOMq/VmnN+iXqRd19PlpI2Cv25j81LGq
vUz+IZJxZu0epGdc0duS7TeSPGwlps27RGkyWlvlUq6RnOOPglz2+uoJb3/F
zE+hiVvMCny/BZPtuIm6Tux8eifh+pc81XjSHXb6kLKA7RtbPBSbS9l5JOmY
xshhD8iqeEH580P+RGNjkrqwn+Oe8Kky0Zah5Oh8usvPAb5sv/T5Qh27Lo4V
D0h5vNedCvcYFauM9KCf4W/OyrN/d1fWdDeL6CuUu2NFhGaqOxnX+9cFstc3
raw5O+OCM2UY2xleunqVbLv3f96X7XNKzMYpDhxzgY5fyc/zcXKjPYavHI3Y
6yML7T6sEMVRtF5R6tOp/pSmvWmliJ1/J9ZbX3s6J4oiF+8rpV53KNJuUs00
IXt/Lqr/Pl4QTNq+HsOV/W6R2dvZ2way63Sr4aYsO/PLpDDa4P6u8iv07YDy
qEkcJzxv7Z0Dpy9Sgnt289m8y5Tctq8Pxxu03bguF2BwjrZLLNkzQ8KFxt5/
JM1xsA80yw2HHo6gG+GXx8YNvEUKDqFS4ezc6ug0+Y3bviCaFWr6VE3mOqUl
rRmdxM4pWm82bLFMOU/TLB+fMPK+SLmj3km8Zv8/tfMW0LXnTtRtf2miRO8L
tKyf2XEJtq/zzVEKsVUNJPuxF8YeGe9Bv3zfrJBi941Hz08YaO47Q+5tJw3i
3jnRtInnP89k//2uB5EJCufKqXF23ZEBlmlU8KmhZj3bhySnzB/8jO0PEj9H
3l8t9ZKMJ1Qs2Mv2Cbv/4Vc+nTjz2012X7g32aUtvOMFtfjVFJ1i94fucg+8
ZNh1sig09fR0dt3MGqvjWs6ul8K5Gwa4zauionyV5kns9+t40hmzXqENzE6R
4sI+q4qpxUQn6sSeTBotOdbUnO1Dztz59jWA7Q8mVfzdnMT2Cz+M6O4ftk8I
5ffxMjE/cdfo0+Pq9e7T9NLBlvbs/mRyKth4KLsvuV2zqN/Erk8Fhxm1h9n1
WjkxXlOeXacH+kopX2G/31Z+zb432dfzO7B1/Fn2e+4fuV1jDNt/9Hyj2O7O
9iMmI8buPsX2IakDNy1PZes6xaVNaxqSSiP6LV+1j63vqB8GYh7fkuGLhx1h
98FCgz8LRrH74u9NE5RWs/thdbJd4il2X+j/69uffHaf+N4qNOX2B1WThu2j
2XUla1E7M51dZ80Tl+ty66vIIdYygf0e59Qd3qvFfq97U7Qp931eIeE6vpfr
a3qaGTWoK9sf+Y+qDVrF9kUK0dZPF7J9xvilLXWn2L4jUF46NpftN0xsdTM+
byM6XptR6sTW/2wzzwtc3Ued+yPmzX1M+jr/Mrtfz3O0D2bY/fukidF0bt/+
IzP5yCN2/4rNcJBj2P0s7qCcLrePHSm30c9i1/8fn+nPhrH7wcfagZncPiAT
U1fwlF1vu7yPv37Erj/l0eb13Lpz2VtYEMOuh5XVw9oHs+tjv0IvaW5dBKf0
fa5UX0xn3+Z+V1FIJHe7tc0JDk2McO4FNe19r+jhnwL12u+PaUdWsmsF52Mq
PA+QZ/un8V/mPXdn+6lvCRWiS2wftbD98nEtto/JUfFwzGH7ml0brxty/YzN
knLtULb/2K+sqzKLfV/N7/uXcH2IDF/XDcT8Mq+Rc642svWpZG/myuFsvZq4
75CQq1PuLfmjvrL79alj2tN3s/u34t2ZG7h9u9o69XQru9/NKiy+ep/d/17T
7kvcvmemUj55Aru/XLHdUnWM3W98hs804faZhHrN2dz6X+JzU4HbD050VHXu
A4OCs5rs2fX87PiDtdz6VvSW0eXWNfoMbzHvCX3GLzF/J3N80GiujmbeMR7I
1dWzvYeHcfXUlz+3cRDLO0Vfck3MW+mvePHoQrbuLjmjUZLK1uGTjc2d9Vc1
VdGUq0/ZQ0tjfNl6dWl4c2edmjGl2zGVmGxydqjqI70jhNRfXTDawvbh6GsN
xM5t0PdcEfM+tkim3/7K1vWVNgm+1WydD/Vo6KzvzS9qhnP175p8qzJXD39J
n+msg3Gyjve4upJh8sqbqzNhX8s660tP5Z+axg+yaM7GX2u2s/3+VBWdo/fZ
Pv950MBeF9l+ut/skW4X2f66h+RzIddXo98tFTu3QR+WJOZZSPZvN+b6jPD1
+pu4vqM4p6Sz3/iWOyO6ja3HKa89cwey9dlypKwtV5eftpw/wdU5pkyoz9W9
8OSIznrnIFx9has36dWfI7j68+jH5M66A16KEcv1evp1yD3bpEySNF86UY6d
V1apaTfos3OK2yMLmzB2Hrg6dXxSDjsf7Kg7PyGInQvq0hoTpNh+vUN9c28B
279/fvqrpwHbt6P/7iZ2noP+8pSYB5EyQTZnA9s/PWzrXxXJ9lP77t3u7KPi
1zTbcn2Gw++lklzf8bC9qbPf+LXFQ52r303RPkZcPdcpHNxZx2fa3szn6mio
57sLXF1Nz7XrrKevHh/bz9W/5iHJa7l6+FWypLMO6jW9PJcx+C198fDJf/I6
gO5k1zyMcRIyH5a7j1/JzmOp08pmPGPnM/tXbklH2LnMR/FbqD87/xypy1Ua
xc5D0Y9OP+DmoJf5pXeV2PnEVm5X7Rl2Xrl1cJ40N6fMfSGx3IidN8782rmE
mz8snfaVcXMH+uk88XxIvp+eLeY1VEXuj+b6SOeycOFctq/sOdCjs5908L43
n+u31CTk66ay/deq5x2dfVeMbEMK18c897aX4fqafVvyOvsZWhO6hesnCh8v
kuL6C70+CZ19xXbPE7FcH+DfvSSB6wve+v7XDwwI+72Oq/eRypvXc/V/4sb/
6v70Yg+9gIx3NGP9RFPd+Gwa39om7FnayDjzc1SlWC5EU9rueVXDE8n6k2Oi
I7sfm9xblRfC7sPRg5vqdu+JpYhnojB16WI6enWQpjQ7LwzTuiVQySqm4yu0
Hxe8SqW0T3KyqRua/p9r3UMs13rRP/Ksah2+FfuaF5KLifWIfPMost7l8+ju
UCGjM3ip1YXcAqrp/fHDBLlwumYQmt9bQ8jYjS4+e1ejgKa3jTtwUSuU+sfL
OeatFTJ//+FN3BsdZJAReZ90o2WSNaVqaGyKm61+RR0TKz932/pj1XRJvd/b
yqKn1MNx/nX3inpmuXDEAO+5AmKS6ved//2YCj3d2vqa1/8/l+mDWC7Tv7jK
rzwX0cGfJ5Xz50jgnNJ57imJ551S+f/eKMZBSfD3i+HvH+4b3ucfsfz2j9dL
Srj3ueuLy6l09n0v0WC2cu935j+eh2bx50eK/HkSzpHa+dfdwr+PSv71Yz+S
FOM5w6+u6OPLrk+J1OJEU3a9Tju50zyVXaf+/N9T5/9+Hf93y/9xXjfIfsLV
dzuiaHxWr5O1yoV0vKzY8o+SkPkfFdH65A==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{
    FormBox["a", TraditionalForm], 
    FormBox["x", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  ImageSize->{348.5264282068739, 161.9465936990927},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0, 5}, {0, 5}, {0., 0.9615384562552827}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{1.0189145726615718`, -3.1970331410988906`, 0.4367976514740981},
  ViewVertical->{0., 0., 1.}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.56122055617585*^9, 3.5613089005113263`*^9, {3.561308938776515*^9, 
   3.5613089451968822`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"The", " ", "codomain", " ", "of", " ", "this", " ", "function", " ",
   "as", " ", "a", " ", "function", " ", "of", " ", "a", " ", "is", " ", 
  "given", " ", 
  RowBox[{
   RowBox[{"by", " ", "[", 
    RowBox[{"0", ",", "\[Infinity]"}], "]"}], "."}]}]], "Input",
 CellChangeTimes->{{3.5613085500802827`*^9, 3.5613085679083023`*^9}, {
  3.561308999695999*^9, 3.5613090115556774`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "For", " ", "a", " ", "specific", " ", "upper", " ", "bound", " ", "of", 
   " ", "the", " ", "function", " ", "at", " ", "a", " ", "given", " ", 
   "pressure", " ", "or", " ", "concentration"}], ",", " ", 
  RowBox[{"see", " ", "the", " ", "following", " ", "line", " ", "of", " ", 
   RowBox[{"code", "."}]}]}]], "Input",
 CellChangeTimes->{{3.5613090145098467`*^9, 3.5613090666428285`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561308529544108*^9, 3.5613085308981857`*^9}, {
  3.561309038206202*^9, 3.561309049765863*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 8.32, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 10}}, Typeset`size$$ = {
    69.8, {12.1, 17.110000023841856`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`x$7776$$ =
     0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$7776$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`f[$CellContext`a, $CellContext`x$$], 
      "Specifications" :> {{$CellContext`x$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{284., {64., 69.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5613085329993057`*^9, 3.5613090503258953`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"This", " ", "plot", " ", "establishes", " ", "the", " ", "upper", 
  " ", "bound", " ", "on", " ", "f", " ", "for", " ", "a", " ", "given", " ", 
  "a", " ", "value", " ", "of", " ", "x", " ", "and", " ", "is", " ", 
  "implied", " ", "by", " ", "the", " ", "curve", " ", 
  RowBox[{"above", "."}]}]], "Input",
 CellChangeTimes->{{3.561308586542368*^9, 3.561308605052427*^9}, {
  3.561308981665968*^9, 3.5613089835550756`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "30"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5613084975062757`*^9, 3.5613085830631695`*^9}, {
  3.561308868690506*^9, 3.5613088824562936`*^9}, {3.5613089494781265`*^9, 
  3.561308989477415*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0ns01IsWB3B6KssUoQcqojiJqVtKpW/HqcwNnTx6CakkJymKEteRyqFS
XEeoPCqPZlLGa4gZjzPGI5JEpITmjHnP71cnTUK6v/vHXnt99lrfvfYf2/TI
afdjUzQ0NCKp+n8Ptz49dbGQjfGNnSxurwhVrDROpU0x3MxFlfmfRVB5KHnO
L4phWevabm8/jD3M9LazOqVgPtKzzKgeRqbPJZcA01KsYDrbO/GHIdQLbt+/
rhS/uo10yZ8N43S0Y4eDTylqJtK15/YN46q76tXMJ6UI1BI5vFYPU3PHt3dd
yuBQPyXlEF0MCzdC2nC9HAVcg3ydTDEWxThtPH6/HB9TNLdMzxVj7pN712dX
loMfJov/hyXGmJaHjZuwHGEfHl0tqhTjZX3l2YENHDDrfisreiVGJD12cnSY
A/8+7W3CGRK8mKOvb7O1EhNDNbdyAiVocAg+1rmnEnoNdGnYKQmeBjVVhAVV
ghVi4ekYJkFuc8QBblolRgQhTxtjJIiIeZ/NUFUi7pJTYEiaBGZkgdXRO08R
78ZNPMKX4PwLe2SMVGEsTPeEkYEUNBvO8DOtauQx1sRwF0qRd4OeOG5cjdD4
GfS9i6XodFnR57u9GoFlHteiVkixsk3/rEVaNTTI5GXx9lIMNpMFpeu5KFkj
KGd5S+H0Vz6tPZIHe4vQir05UgwsNeVM3uQhZ7B/xCtXirCLmQfpuTwkt2r3
eD2U4j7+ZP7ZxkPUVK0sV7YU4zUXHb2Ma8B5EKGhUScFu/rgOUlNDdRm6mnZ
76WYX647oKlZhxm8Q6cU82XwThz3FBnWYdl69wmukQwP/Ifbmqzr4Gfeuydh
iQzWBlVV1/fXgSlhxOuvkMHxnN8tg+I6pPh4PhhfJ4Nd5r6CVNt6xHy/Ej3b
Q4bDvgU+zIF6vOdeXrL3mgwVwl+ed2zmI5zcyXhDyNDDiP10w4mP+/zbHrxP
MqiLag1d3Pk4ie/ZWSMyrI+yP9xynI8kdt70/WMyPJ1nq65P4SOK2Pn74+ly
VG1btLRUyodJzxr/XiM5eAUfz6amNmBFD9nnukMO/oksowNKAX5u6HUOSZWj
TBYU5KsWYHbt7pPpaXLkBW7kHtVohOs6Vi8vQ464gF6vU/qNKA/SS5+SJQfj
iO6dy5sbcehCy8cL+XJ0HIhbUJTYiA2/FDQurJCjnxFsMHVVE2wj2Vore+T4
stxhzpPgZuTYWJZ81lVgi9Cx+VpEM0oOH10gnKfAH1mMmMDLzaiK7pt4YaCA
ob4nuex2MzzcE7blLVTATjOo446gGSYW3T82myoQ8S4jKcGoBU3no/Is6QpM
JI3M8X/WgksNJXojLgpM+VY418iiFTeKH29lX6LyP/wqPIqew3/Op4XL3ynw
/MraF00/dYA9U8BPtVBiSbLiG4t4iVtL6Y+9g5RQfB0ceE1/BY2/Vn9anKdE
npzbSrvZhS0C7fy1b5WgmTwkRaJudJcXh+rOUiHxN07APfMevE7u/mxMV0G9
tVAUGNMLr7AAkeVeFcKovzVseIN/+UQx7c6pMFgkuN5p+ha7Vw9Fc26pMH6i
+65V5DsYNctYbSUqrPx55mQAtx+7g6/5tT5TwemB6fGS+QPYaTzeV/JBhfMm
h8w+eA+CaxiR76hWwVq5R7vXdQg6DJqHWovAvDkftQRjQ8ixK8tpNSIwre4u
e1nmB2QWzfM3syYQtJbbN8tZiGDzWZb5mwkU/vvIvVq1EMtbjHfwnQl8USya
K077G2MZx++M7ifA8XCamrpNhPHtIYdPBhCIYcTllItFYG/faL7pDAHT9zvf
5MYNw0Gvrc8qmsDG9VdSF64Ro5Fvz/NJIOC9uOObZpcYhp20QqRQ+1tvCENi
JdC9OY/mn0kgY5pvmLu5FAGNZQKffOr+Ac6DKQIpdm2LSuI9ITA9OtbTPlSG
Ph1+l28FAQ2WL1uoJ0fpo5uOs2sJnLnDvqHHlyPGMmP/l0YCNSsTtHRPKdBf
4tTk3U5Ad+cZ60s0JZj9kTR1F4H+VS+7LvCUKB/1P9f+lkBxNsxFviqs+v39
mGyIgA/bTtdkUoVjdv8tZYkJXIy7H9v/iEDpDH/bfCWBJ1KTuzQXEhx9R6bG
PwQSsuL8BnaROC4aXbSAsr+7yqLIjcSCkKyrtpSNebxi130kMkbLvHwpX0s6
2JR4hITOsbXPuZQD7W5/mn2BRPLqU6rwzwTMrugzZhaQGHlOo0tGCExu+I9O
L5OEVe9ls0nKfaq/XxUUksh5PVPX4AuB5H1lPjtKqHztVqEj5R8/uZ+N45Eo
SE/Zk025vzMpe2oXCfvv6Rc91QSe/vH1aNdrEqPe4WuDKKduOmSV+4ZEe2Oo
KJayc75NueMAiYnCtg1sytUR7c9iZSQk8UvKZn0lkLZqXZKbksTej3MZSymH
CjM9TUkSl52t+uwoW7qcHKwfIXGx5RV5lPI0ze685K8kSoaOhUdSHuJsOuE3
RuLwm2VfkynzTuTa0r9T+1k64Q8ppy/R/vLjB4ldv5qTNZT/B1F8/Y0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["a", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  AxesOrigin->{0, 0.65},
  PlotRange->{{0, 1}, {0.6513346020454657, 0.9677419348467795}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5613088828923187`*^9, {3.561308954825433*^9, 3.561308973605507*^9}, 
   3.561309080883643*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "codomain", " ", "of", " ", "a", " ", "is", " ", "indeed", " ", 
   "a", " ", "subset", " ", "of", " ", "\[GothicCapitalR]"}], ",", " ", 
  RowBox[{
  "since", " ", "\[GothicCapitalR]", " ", "includes", " ", "all", " ", "real",
    " ", "numbers", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"including", " ", "positives"}], ",", " ", "negatives", ",", 
      " ", "zero", ",", " ", 
      RowBox[{"rationals", " ", "and", " ", "irrationals"}]}], ")"}], 
    "."}]}]}]], "Input",
 CellChangeTimes->{{3.5613086140029387`*^9, 3.561308689434253*^9}}],

Cell[BoxData[
 RowBox[{"For", " ", "personal", " ", "curiosity", " ", "the", " ", "first", 
  " ", "derivatives", " ", "with", " ", "respect", " ", "to", " ", "a", " ", 
  "and", " ", "x", " ", "are", " ", 
  RowBox[{"calculated", "."}]}]], "Input",
 CellChangeTimes->{{3.561308733296762*^9, 3.561308763609496*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"a", " ", "x"}], 
    RowBox[{"1", "+", 
     RowBox[{"a", " ", "x"}]}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.5612205718307447`*^9, 3.561220574680908*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", "x"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"a", " ", "x"}]}], ")"}], "2"]]}], "+", 
  FractionBox["a", 
   RowBox[{"1", "+", 
    RowBox[{"a", " ", "x"}]}]]}]], "Output",
 CellChangeTimes->{3.5612205752399397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"a", " ", "x"}], 
    RowBox[{"1", "+", 
     RowBox[{"a", " ", "x"}]}]], ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.5612205777160816`*^9, 3.5612205807032523`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"a", " ", "x"}]}], ")"}], "2"]]}], "+", 
  FractionBox["x", 
   RowBox[{"1", "+", 
    RowBox[{"a", " ", "x"}]}]]}]], "Output",
 CellChangeTimes->{3.5612205813702908`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"B", ":"}]}]], "Input",
 CellChangeTimes->{{3.5612206446659107`*^9, 3.5612206456569676`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"In", " ", "the", " ", "zero", " ", "limit"}], ",", " ", 
  RowBox[{
  "the", " ", "value", " ", "of", " ", "f", " ", "goes", " ", "to", " ", 
   RowBox[{"zero", ".", "  ", "This"}], " ", "means"}], ",", " ", "simply", 
  ",", " ", 
  RowBox[{"that", " ", "as", " ", "the", " ", 
   RowBox[{"partial", "/", "total"}], " ", "pressure", " ", "of", " ", "the", 
   " ", "system", " ", "goes", " ", "to", " ", "zero"}], ",", " ", 
  RowBox[{
  "that", " ", "the", " ", "fraction", " ", "of", " ", "filled", " ", "sites",
    " ", "goes", " ", "to", " ", "zero", " ", "as", " ", 
   RowBox[{"well", "."}]}]}]], "Input",
 CellChangeTimes->{{3.561308767084695*^9, 3.561308807029979*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561220624746772*^9, 3.5612206340143013`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.56122063450233*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"C", ":"}]}]], "Input",
 CellChangeTimes->{{3.5612206474880724`*^9, 3.5612206487681456`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "As", " ", "the", " ", "pressure", " ", "or", " ", "concentration", " ", 
   "of", " ", "a", " ", "species", " ", "in", " ", "solution", " ", "gets", 
   " ", "very", " ", "very", " ", "high"}], ",", " ", 
  RowBox[{
  "all", " ", "of", " ", "the", " ", "sites", " ", "will", " ", "be", " ", 
   "filled", " ", "so", " ", "the", " ", "fraction", " ", "of", " ", "sites", 
   " ", "filled", " ", "would", " ", "be", " ", "1.", "  ", "This", " ", "is",
    " ", "the", " ", "case", " ", "of", " ", "full", " ", "monolayer", " ", 
   RowBox[{"coverage", ".", "  ", "There"}], " ", "are", " ", "other", " ", 
   "forms", " ", "of", " ", "the", " ", "Langmuir", " ", "isotherm", " ", 
   "that", " ", "have", " ", "saturation", " ", "values", " ", "less", " ", 
   "than", " ", "one", " ", "as", " ", "related", " ", "to", " ", "the", " ", 
   RowBox[{"Henry", "'"}], "s", " ", "Law", " ", "constant", " ", "or", " ", 
   "other", " ", "laws", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Toth", " ", "equation"}], ",", " "}]}]}]}]], "Input",
 CellChangeTimes->{{3.5613088144974065`*^9, 3.5613088312343636`*^9}, {
  3.5613092460950923`*^9, 3.561309262343022*^9}, {3.5613216201118665`*^9, 
  3.561321683339483*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"a", "*", "x"}], 
    RowBox[{"1", "+", 
     RowBox[{"a", "*", "x"}]}]], ",", 
   RowBox[{"x", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561220649878209*^9, 3.5612206612178574`*^9}, 
   3.5613088513125124`*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.5612206616208806`*^9, 3.561308851864544*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"D", ":"}]}]], "Input",
 CellChangeTimes->{{3.561220825323244*^9, 3.5612208274923677`*^9}, {
  3.5613092717805614`*^9, 3.561309273999688*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "inverse", " ", "function", " ", "is", " ", "defined", " ", 
   "such", " ", "that", " ", "when", " ", "the", " ", "function", " ", "and", 
   " ", "its", " ", "inverse", " ", "are", " ", "applied", " ", "to", " ", 
   "one", " ", "another", " ", "in", " ", "each", " ", "order"}], ",", " ", 
  RowBox[{"the", " ", "identity", " ", "element"}], ",", " ", "x", ",", " ", 
  RowBox[{"is", " ", 
   RowBox[{"output", "."}]}]}]], "Input",
 CellChangeTimes->{{3.5613092824781733`*^9, 3.5613093247695923`*^9}, {
  3.5613094787213984`*^9, 3.561309479871464*^9}}],

Cell[BoxData[
 RowBox[{"Testing", " ", "a", " ", "trial", " ", "inverse", " ", "function", 
  " ", "to", " ", "see", " ", "if", " ", "it", " ", "rearranges", " ", 
  RowBox[{"appropriately", "."}]}]], "Input",
 CellChangeTimes->{{3.561309535512646*^9, 3.5613095523906116`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"y", "\[Equal]", 
    FractionBox["x", 
     RowBox[{"a", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}]}]]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.561220830028513*^9, 3.5612208398280735`*^9}, 
   3.5613095155575047`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"a", " ", "y"}], 
     RowBox[{"1", "+", 
      RowBox[{"a", " ", "y"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.561220840183094*^9, 3.5613095160835347`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Solving", " ", "for", " ", "the", " ", "inverse", " ", "function", 
  " ", "from", " ", "the", " ", "original", " ", 
  RowBox[{"function", ":"}]}]], "Input",
 CellChangeTimes->{{3.561309564533306*^9, 3.561309574515877*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"y", "\[Equal]", 
    RowBox[{"f", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["y", 
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "y"}], ")"}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.561309558224945*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"finv", "[", "x_", "]"}], "=", 
   FractionBox["x", 
    RowBox[{"a", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.561220964618211*^9, 3.561220983346282*^9}, {
  3.5612210196653595`*^9, 3.561221036302311*^9}}],

Cell[BoxData[
 RowBox[{"Applying", " ", "the", " ", "function", " ", "and", " ", "its", " ",
   "inverse", " ", "to", " ", "themselves", " ", "in", " ", "sequential", " ", 
  RowBox[{"orderings", ":"}]}]], "Input",
 CellChangeTimes->{{3.5613095804492164`*^9, 3.561309595315067*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"finv", "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.561220985335396*^9, 3.5612210012983093`*^9}}],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{{3.5612209894326305`*^9, 3.561221039357486*^9}, 
   3.561309578711117*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"f", "[", 
   RowBox[{"finv", "[", "x", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.561221008238706*^9, 3.5612210101708164`*^9}}],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{{3.5612210105508385`*^9, 3.561221040113529*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"This", " ", "function", " ", "passes", " ", "all", " ", "of", " ", 
  "the", " ", "tests", " ", "for", " ", "an", " ", "inverse", " ", 
  RowBox[{"function", "."}]}]], "Input",
 CellChangeTimes->{{3.561309598939274*^9, 3.5613096083168106`*^9}}],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"E", ":"}]}]], "Input",
 CellChangeTimes->{{3.5612213002894106`*^9, 3.561221302223521*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "f", " ", "is", " ", "continuous", " ", "and", " ", "infinitely", " ", 
   "differentiable", " ", "with", " ", "respect", " ", "to", " ", "x", " ", 
   "and", " ", "a", " ", "over", " ", "the", " ", "domain", " ", 
   RowBox[{
    RowBox[{"of", " ", "[", 
     RowBox[{"0", ",", "\[Infinity]"}], "]"}], ".", "Since"}], " ", 
   "negative", " ", "pressures", " ", "and", " ", "concentrations", " ", "do",
    " ", "not", " ", "make", " ", "physical", " ", "sense", " ", "for", " ", 
   "the", " ", "sytem", " ", "of", " ", "interest"}], ",", " ", 
  RowBox[{
  "they", " ", "have", " ", "been", " ", "neglected", " ", "from", " ", "the",
    " ", 
   RowBox[{"domin", "."}]}]}]], "Input",
 CellChangeTimes->{{3.561221304620658*^9, 3.5612213248388147`*^9}, {
  3.5613096485091095`*^9, 3.5613097193551617`*^9}}],

Cell[BoxData[
 RowBox[{"Part", " ", 
  RowBox[{"F", ":"}]}]], "Input",
 CellChangeTimes->{{3.5612213263649015`*^9, 3.561221327592972*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "It", " ", "is", " ", "not", " ", "clear", " ", "that", " ", "this", " ", 
   "integral", " ", "has", " ", "any", " ", "physical", " ", "meaning", " ", 
   "other", " ", "than", " ", "being", " ", "the", " ", "area", " ", "under", 
   " ", "the", " ", "curve", " ", "of", " ", "the", " ", "function", " ", 
   "given"}], ",", " ", 
  RowBox[{
  "which", " ", "is", " ", "not", " ", "the", " ", "same", " ", "as", " ", 
   "the", " ", "integral", " ", "of", " ", "the", " ", "Langmuir", " ", 
   RowBox[{"isotherm", "!"}], "  ", "This", " ", "is", " ", "however"}], ",", 
  " ", "useful", ",", " ", 
  RowBox[{
  "in", " ", "cmoputing", " ", "the", " ", "spreading", " ", "pressure"}], 
  ",", " ", 
  RowBox[{"\[Product]", 
   RowBox[{".", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{"See", " ", 
      RowBox[{"p", ".", " ", "610"}], " ", "to", " ", "interrelate", " ", 
      "that", " ", "calculation", " ", "to", " ", "this", " ", 
      RowBox[{"one", "."}]}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.561316982414605*^9, 3.5613170243200026`*^9}, {
  3.5613221005223446`*^9, 3.5613221451958995`*^9}, {3.561322209593583*^9, 
  3.561322231850856*^9}, {3.5613223102913427`*^9, 3.5613223289524097`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", 
   RowBox[{"a", "*", "x"}]], 
  RowBox[{
   FractionBox["z", 
    RowBox[{"1", "+", "z"}]], 
   RowBox[{"\[DifferentialD]", "z"}]}]}]], "Input",
 CellChangeTimes->{{3.5612213419507933`*^9, 3.561221355518569*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", "x"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{"a", " ", "x"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      FractionBox["1", 
       RowBox[{"a", " ", "x"}]], "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{
     RowBox[{"Re", "[", 
      FractionBox["1", 
       RowBox[{"a", " ", "x"}]], "]"}], "\[LessEqual]", 
     RowBox[{"-", "1"}]}], "||", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"a", " ", "x"}]], "\[NotElement]", "Reals"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.5612213575536857`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"This", " ", "integral", " ", "gives", " ", "a", " ", "count", " ", 
  "of", " ", "all", " ", "of", " ", "the", " ", "fraction", " ", "of", " ", 
  "sites", " ", "that", " ", "have", " ", "been", " ", "occupied", " ", "as", 
  " ", "the", " ", "pressure", " ", "or", " ", "concentration", " ", 
  "increases", " ", "to", " ", "a", " ", "certain", " ", "value", " ", "from",
   " ", "no", " ", "sites", " ", 
  RowBox[{"occupied", "."}]}]], "Input",
 CellChangeTimes->{{3.5613165108886356`*^9, 3.561316577563449*^9}, {
  3.561316922086155*^9, 3.5613169261363864`*^9}, {3.561317364016432*^9, 
  3.5613173667735896`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "x"], 
  RowBox[{
   FractionBox[
    RowBox[{"a", "*", "z"}], 
    RowBox[{"1", "+", 
     RowBox[{"a", "*", "z"}]}]], 
   RowBox[{"\[DifferentialD]", "z"}]}]}]], "Input",
 CellChangeTimes->{{3.561316476988697*^9, 3.56131648106993*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"a", " ", "x"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", 
       RowBox[{"a", " ", "x"}]}], "]"}]}], "a"], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      FractionBox["1", 
       RowBox[{"a", " ", "x"}]], "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{
     RowBox[{"Re", "[", 
      FractionBox["1", 
       RowBox[{"a", " ", "x"}]], "]"}], "\[LessEqual]", 
     RowBox[{"-", "1"}]}], "||", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"a", " ", "x"}]], "\[NotElement]", "Reals"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.561316485987211*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"func", "[", 
   RowBox[{"x_", ",", "a_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"a", " ", "*", "x"}], "-", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     RowBox[{"a", "*", " ", "x"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.561221373173579*^9, 3.561221377487826*^9}, {
  3.56131715067723*^9, 3.5613171561985455`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "x"}], "-", 
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", 
    RowBox[{"a", " ", "x"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.561221377982854*^9, 3.561317064328291*^9, 
  3.5613171575806246`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"func", "[", 
    RowBox[{"x", ",", "a"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5613170860695343`*^9, 3.5613171839381323`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
LbhvyD6zqf/ry2O/TahlxOMzjPrfMnGwMjvJkMenGfU/PWt+/YSmhhwH7lH/
u1UUSPu9acrj9tvw00Vi6UPhX3vP06s/vmDP+F5mvuSD+ZFaX9nz9pMvh4tE
CcKN161XLzfT4jiA724lFw2EHV61OA44f6//VBF9T0i/G6L8elef44Aefb9Y
FV3+zuNmA/V7rXs3r8uyu8LRLk8XNzvbiD23prxWqUb+rYT6L2kV/8Cqozr/
Fkv9T+tg309/pxl73kr9n/RiU1jwQzF7Hkf9X3mxR7L3TXP23IX677VphV33
WRbsuTb1P15+a0ZSoQV7fk79j+n5cccKcTv2HG30daMi+olg4ptvEbz1HXvG
98T4gTNu1D5WxZ7Db66TSuUpwvN95y7Oul+bPeO7pPuEFukmhxqy53MJvrpT
FY+Fvi1NI8Y3acaew+i7TxNFytJN5s3Zc58mi+ZL5UnCiLzQh6eSWrHnJMpr
3dHIv/1H/T936eXli4ct2fMe6n/Q1Eme5z52ZM+rqP8tfGufqlfVmT2HUv+b
pE8JrZ1szZ7PUv9tv7geq3nehj0vpf7rJzQe2muwLXsOpP6fihoe0jFfneec
sXTzcbE0XThj+qxzu1Wl7BnfWzfbP5h68pcOv9c823UYLRenCZMiCluKpjRk
z/hue3Jy1/9e5Bqy5yaP7rQUiZ4JWrfy5xg3MmHPFfS97M5lC/dRpW3Yc+6M
wekyRaqQFLnYqN0hMXsOp7zWQ438Wyj1v3L7wzm6qnk4PIdQ/59H9Nx1zMGO
PXen/n83LmxXedKePXek/ru9jtxxUMeRPaP/D7tU3fb3cGLP6P9U+3THWyFd
2HMe9b/1Tlv/B/2c2bPVB6u7MsVz4USBEPhL/o0943u0iYnBCNtXddizaFP8
IkV0lhAR4m5cZNSMPeO79obpGQuMAkzYc4rjCCepPFMYdfxxXJ6JGXu+Qt8Z
dUcGKnXeWbDnSEX5x2hZhpAi7zs/f0EH9uxJeS0jjfxbR+p/1phlNx/MVuff
mlD/F6zqkt1nkRN7rtr4p/9264K6rh3jzJ7fUf9LH3dQGlu5smf0f0+B3t6z
mW7sGf3/3KKiX/0x7urvU9R/8wlpDnopHuz5Q2BSdrTslTBu75XEMcHq/Bvq
WNYGT5VpJTVgz9fLx/wrlr4UjGu4ZA1+1Zw9ox6m5tOWR75Mbsue1+2r7CMX
vxC+9Nie7e/Zjj3Pou/j7ePWrR5Q0pE9D/H8t7ZIlC10H+OcaWVnw55FlNeK
0si/vaP+Ww8ofBzRT51/S6H+O/XIfDU00ZU9X6P+N1pWp8kHsTt7PkT9X9Zw
WsOk4QJ7Rv+fZ+jPVNyQsGf0/0fq4OtO17ux56HUf5tZidJXJ9R5zqcvHH4p
lW+EpNL42WunqPNv3lT/M8sl265fXmO1ZxutzGjZG8E1Qn4g/kpr9ow6oicT
RO59rpmz58PLH12UKV4L/rUe25bO6sieUW+wq/Kl0YMwG/a8Ln3nZrH0tXBa
+3SwbWd79jyM8lr3NfJvqdR/sZGVz2Qndf7Ni/rvM6iP6ePWAnuOof6X2Cc8
n/1Nwp6tqf8r5w7bec6vO3tG/58+ioqcJu/BntH/gKU1um5/4Mme0f9LT2ud
r/tJnee0lWuHi6W5QlJuh5A8iTr/doTqpobRvAiem+clj1FEvxXO3G3daHpA
W/aM+qtWB//7GNXAkj3XcN7TTS5+Kzjs0Xnd+Iw1e0b9xtsOHwLfGNiz5w9r
JphI5TlC691Ba3I6ObHn65TXqqeRf7Oh/jff3rH3XgN1/u0w9X/W253jOqrG
GzwbU//3y2tq7RjUgz2vp/4PfZMx/3yBJ3tG//06RZUHTPRiz+h/jZfbjwRn
qfOc6P+glPgTp1yk7HmjV2oTqTxfaHmw4s0kc3X+TZvqzT7Ylbvmuqnzb/N2
7vukVOYJ02heBM+oWzOXGS/1k3VizyOKJj2OluUJ7y9ucSotU+c5UQ+TnyYq
mh3pyJ59hC4nZYpcYfqL/1Y42Liw5+aU17qvkX/bQP1vVl+6Q66tzr/VoP6b
/jvaSP9DD/Y8l/p/M2+34djbPdlzIfW/4rLJrckR3uwZ/Z+QfdTgRzcpe0b/
n7Q/VL/kgzrPif7nfxz5zHaFOs9Z/DPygEzxXth46PbzTYbq/NtIqtNLqWdu
mTNLnX9L7yVbLJa+Fwr6FxfWkKrzb6j3M6Z5ETzfjHQZrIh+JwTENZ63wtiB
PaO+qHvYOp80B2f2HFVdjy9+J3g4vZBVxwF4nkd5rR4a+bci6n/TGpsdHqrW
3fA8gvp/sbEQ42Kszr+lUf/PLTbZG2Hpw56l1P86u2+lre7gy57R/+Vxad3q
tfRnz+j/NCdl8s9KdZ4T/V/9tvCfLinqPKff2VArubhQaLHdOmlQU3X+7RbV
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
/g9jGIgj
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
BbnrScor/7Nr/9WW+gbnifKlisMUj5Vh7ly2D4fvke5F58/zc19v13TNfYJ9
0MfMd0q56iK4V7APXQJfleINxR0nMH925vhHNrB1Wo99UmymGE3x2DmZbcKU
3DFRqRLblrbJbsi3ax/5d61fHUdxXdf0PKWT3Yp+bkOlm9E1lHdz+1m9a/na
nsH6vFjvP7jO8z48qGg//KbeefBzeC+3P6mf9E06prrZmNw+U75T8evQYHv1
PfP3BscAyhFUG5XtVe7QP/j9roTPja45roAfDI5Xlb88HBxLKE9RXVLX8x38
UHB8q3zkAb2ngnOcC6Jrr8o3BxY9PzVzDtoNngvfFxzLKQ8aHBwDK88aFBxn
Ks+6NThO+wS+JzjeU15zW3CM9Ck8OviYypsu5rzPFJ3PDguOQ37IneOq3ruU
844Njn9+ZX5CcByl3O3Z4PhKMcm64PhNOdec4Dhc+cuV0bVC5eB3BMd7n8O3
B8dvn+XO0Qfq+jnXX8Gxyn783dPB8dIG9pkefD3KQZ8MjpHWM/9CcPyp/PG7
4NhSOdpPwXXIkpT3Pwvv4Pgrg2NU5VyfBMeoytE+Co4zlZctCL4e5XF3Rtez
VDdYwfyjBedxqk/I3snWqW4h2yS7tI59JyCLymMZ4wuF/3cMN0bX4FRD+AI5
Sufi71bBo+Ht8Gr4GR0fXgs/B2dF1x503t+YXxicgyu+Xh0csynv+yOkGq9q
G8G1U+WGm0KqqcI/BsdyMdUPXoFL6zqDn4/y3Puir0O1hbXB8bZy4T9DqhUr
vwyu9yp//CDY5ij/XRMc5ysv3hhSnVk5dHAuqRxWdZe3ZN+Qv4d0DcrL9c6K
rslIvsz8nsjng3MN5a3bguvk+7PP+cG1r5paO4pZZdflW4LrhzXgZsE1PdVk
2gbXYKtqzQbXyqrDHYLrt4fl7vOoflsNbh5cb1RtZHdwHfsgFe1y18Arwq2D
a2tV5PuCa9QHM39RcB3vSMVQwbVB1Yh2BdfAD1TdJbgmqZrMacE1SdVq2gTX
YA/NXSNXLK44XH6sdvJ9qo/Jp92tgCLto/y8XrJvi+CxufOAGcnOyb5pe2dw
vb1CtC/WOZ5F3hicAy6TPwqui6p+1TK4Bqi6xA3Bfn8pfHZwbbYyfEZwPVa1
oJuC88rl8JnBvkx1ofHBeZbqM3nuPtchXMP24D5FWdn44LrrUfzePbiefzQ8
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
         "]], Polygon3DBox[CompressedData["
1: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
+A31L4zm0nBouHS36DHWHGuvbTRXgzPBnYZEay+e6evqt4nmqnByuPlHmX/b
dN3vHcKXanxoYs4J9+wUze3gVHCrD4v4yD2+nllzPxWc09DicJapwZwELgPn
QV+2L+Lp5Nyebmc4QZEfymaOZ3CjKcLvB3OMIZk5wKhgjQ83gFNNC+YYcC04
xZRgjgTXgENMCuZkcAty3ORgzkbumyo8PZjTDRV+Gw4TzPmezxyfd6i/H9dT
f/9ovUfsDJob03lmwTl0ZBGP8cZuYI6r/z7PKJjTjMj8TLcEv+OPiviC93IP
36f+DI3PDuZIL5OLhecEc8BXM3OEfsExFu5wsj7TIbEHgRfBHHsyeA0y906K
ftY8c7T9idFrB40IfztBuFlijwL/YKba3GDOOiYz/+X8xzQfLtbYLLV5RT58
TWMH5/Y3D0tdbzg+2utAw6JlWaPEo96p1+5l0VoADYAWQI+hz9Hj6LXBuesR
1DSplT4iXEl4uvBW4c7R2gGNgdYgx90Y7JmQ+8g53YNzILmImExsRp+iZy/X
50cn1iRok1OjtQBeJsZP+2jtgaZB25Cv6gR74OirCeS34JzA+9pc5FfyJXyO
Ggo8Gb5MbQVPmFoNNRC8Yjw6vLqfhW+Njm/ErqrFeqSGU7XI1xhVE6Jj02Fq
Q9V/UtetEZzzmV94mnibHyau5eHBUXuiRoQ3Rw2mvI5vT1ybuSX6u+vq81PU
v01tm/AxwlOjz+HcMsKDo9cga7G18OTod8y7JsdRayIHkgupoVFrokZYI3WO
pHZIDiQXUjOmlkUNqWbxfqktEa/gitWKeAZHgiudJlwntydO7Yga397F/bcN
1rz91J8UfW88k2HF72nHu1TrH51POwXXBKarPyKae7Qtfn+PIvd2KvJt18xe
SAfh94VnRudqNM2saA4CF7mswJ11f4vVv0XnDCc+8Z2J74Hn+Wr0tfBY3ouu
4VPLp8ZUNtrDp3ZJDRZvHw2KPlhOvBKeRo7QZ+upjYyuSR1T6Id9oz1+vH48
Tmrl3C/3BieHX1A/7lnwNbySAWq/JL7m2+rvp7ZXsEbk+x6NfvdR7aHoGEes
gy/irzWK9oLwgPCCzoj27vDk8OZOj/bm8DzwPk6L9j7Q3Gjvc6K9ITwlvCVi
yswi3hJrGmv87sQeEl5Ss2hvBg8HL6dptJeDx4PXQw7m2Y9PnZvrR3t/eIp4
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
         "]], Polygon3DBox[CompressedData["
1:eJwt13f8TeUfAPD7vde1adGvKCVpS7tfkzIamlb2Hu2I0K9hJ1KUESENhRYN
mcleySpZJcqO0iCyfu9P5/7xed3n834+z7nnnnOe5zy3bIvHaj6aTqVSa0RW
NMiXSi0CO/NSqRflyzOp1Ajxmtiub5S+xgrXar+gPV1dE3U99a9j/dkM1pT1
YovYw2wkq8TasFFipNipb7S+Jo53TPs77fxivLoN+oeLYWKbvpG8kbol2u21
33S8N8RdbA3rx6bJGxvbw5gd7HW2jH2dl5zzED5YbNH3mr4GrL72Qu0davob
u0z/q2Ko2KpvhL6G6v7U/lx7m7q+6qbrHyReET/rG66vvrrftT/U/kHd9+JB
NotVY4/IHxaXsonsH8cZL7/WMSbIvxYd1Y1h1fU9wg+yJewXtlssNHYp68De
lldT97C6r9jj7C1WlT3E/mIz0sm4GP+EsYvZI2yUvLK6tuqWsafY+3E9WUe2
knVjE9kEUcvYhmwx2yV/Sd0KdcvZ0+wDdjd7gjVna9lBNoptZEfYtyyfGMvW
sVWsu/zjOD57kh1lq1lWjGPr2besp/xTdXXYU2wFe4Z9yO5hndho8brYpe8N
fU2d83ztFtqvqHs5riurx+ayLfI+xi425n52jJ0p5rK0fJ/4Qr5H3QA2R93f
bD7bx4axJWwea8xeZJeweuwAW8D2s+FsKXtTvCF+0femvmbOZYF2S+1B6q5U
11j/QtaKDWZXsSZsP5vH/mLH4hmP+SJ6s0nsPvaMutWsF/uM1WVPs8NsGTsa
c4Z9w8aLceI3fe/oa+Vc6mjP0t6srpe6Bfprsy/ZJtaTzWeN2Qr2OxvMvmNj
xbviV31j9LV0vLras7V/Utdb3UL9TdhK9gcbEusOe1u8JXbre0tfc2PnajfS
7q+uvpgiv0/MYT/LnzN2kTHviDFij7639bUwtpH2cu296gapW52bC9PTyZyM
uTlX3T9sKTssf13dytx8+4odYv+IZ9X1zJdc87j2J6ppLz8U81XdETZa3yr+
DevBPmG12f/YHFab9WLnsLvZXvYu+44dYd3kf4hJbCs7yrrHtRO1WE/WQ1zv
XJqyVexP+VB1ax2vGVvDDrCR7AdWLq4Xe4KVZrVYG/YbOz7mEvuTneqYR+QV
xHJ2jJ3CDssvivWTHc0k69oH6WQtjTV1tpqyoqC+//L16gqpuSl3D7/IJvcl
7s/NuXszM5s8I/Gs3MreY1851mPGfpxbc7qmk3U91vfR6u9hk9la+dPqZqor
xY+yi8UKllJzt/hMvlpdFzRN3X/UHWIXxnmzI6xybu7NyCbPXDx75bQL+7w2
ng91RdSUZAfl58c5skNxPH6LvJ3vKMyqxrVit7LHWRFWjZ0U1yHmVF7yTq3E
To7njV0glrLDrAQ7ID9PnBvrh7y0sTW0uxhbXN2t6qrm5ugs/e/J3xfnaBfz
eQP/UV1xNWexQuwatoEVZuVZUXY928iKsRLiZnkb35GfVY7ngN3GOrKirHqc
M6vOHmWFWBV2G3s/fgNrxz5hJVkVdj8rwG5iZ/veIj6vi3chKxo1ubXhy2yy
9sQadC+bwtYZ+4y6L1lNNjWeqZh/bFbuWv3NThGnxpoiv0bdsJhv2eQ9HO/j
01iZeEcYe6q8s7yQ/h3qConCYo28Nd+uXTDeXep3q72aDZVPNrYBeymeidy7
/dNssneIPUTsQdqlk/dJvFeG6auUe+dMzyZrfKz1N+b2N9OyyXsp3k+12LS4
P8Z19R2z497k9hmTssl+J/Y91+X2KJ9lk71I7EluyO2DPs8m+7ERuX1O7Mkm
syliqsjEuzbmRdwbcR7Lip/VnRTjdW3nd6j7WL4q9gZsMqvBJrKVrCP7PK6p
sWmfl8X8iumm5kyWn10V944VjPes+DEdL0/zyscW/S3ZJnmeGMO2sg3spXSy
r4j9xXuOdUaco74rY66rKxDvMZHSn4nz1tdBfpf4VP4t76x7Kj89frPPy2NN
jX2smtvFhFgf1HVgk/TfyT5h37BObEom2R80Tyfra6yzgxyrFdvM0uIdddvU
leZ5Pi9NJ9c2rnEZlo9dkU72z/nZ92JgzFXHasH66M+vbgsrEfeJ7WAF2FZ5
STGF7WRnGHuPvK2xJdmd7FzWhHVl5WJ/zs5k97IH2MnsrrjHrCnrxs5mDdmJ
rDK7LPPvEpm60WdZjTqsfcwPdm+sJaxBOpkzMXfqsvKsPnuSnc7qxDuaVYxj
x5olv8BvKBNrr7y1uhL67uDn81JxzcQmdlysTaKuug7qSrGasUaweqwzO43V
Zhextux5diFrwS5mD7B+rAJrxabmS/YFsT84P94z8grifnV92UXqWvKN7BU2
h7VifdlAMUD8lFs/6jnfH7Rf1p6trqW65/WvZy/Gu4w1Y71zz+6AWMPYzNhj
GbuJDWbz5G3UvaDuEvYYG8iuYA+yE1gldrl2NT4+5osYxObKW6vrp+9C1ob1
YRew5nFNWTPWnZVnjeL6s9bsubgGrFlcP+dzdczLTHKvWmdS/76E1ufWvlgD
e8s3GztEe76xbZX0V/cBu8ZnBbE9/n/IrxDPqhutrgrrEnOUPcfGsttZ13jn
OeZ+do5YzA5mknV3Z269jnW7n/z4+C+lXU4sULc/nlO2T15eLGIH4lqxv+Rn
i4Xsb1aQbZOfLKayXSwT905eLNYTtjmT7JtqppP/WvGfa6Ca6mxcnFuYuglx
D9jY+M74X8Y+inmidiMrLiayn1ge2yAvIj5kP7I0+15eVHzENrHj2B/ys+K6
sn3sFt8xXr7EdzzKJmaS/4NV2YPsofhvYVxx8SsrE2uHut9jvVXXWT5MzXWs
PWvL9rIT4t0Qe9JM8n83/vf2ZRXj+XGsiurij/0AYy/X90A8E6wPG8dqxL6T
TWcN5SNizsjHygsbv0tdKTFD3Z5YW3kX+fDYh7LHWW+WF3viWNvkHeVFjP1F
XjrmjbpfeVG2W36amMl+i3VUbSf5q8Zfy9qxYur2sNNjfrG9sbbHmi9vqe4k
ViP3PK9LJ/vz2Kcvi/Um1nzWSV5MyS3q/g+psTZp
         "]], 
        Polygon3DBox[{{1080, 663, 782, 1319, 911, 912}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0r9L1GEcwPEnva6zPLtJCeQylRAxMbPO7O4PkJoaDGoQJMIUNCLianLT
KYj0bksXGwq3WqJNF3Hrh17az6U9jOZeH2j4fF/vh/vxfL8P3zNT89fnjqSU
npmLInrY5ZCV5pQKPGU9rk/rTn1DD+rlTEpF64pe0V36mq7pbn1L13Wvfuo3
M9Zn9YZ+pPv0O72k+/WOruvnfjNg/UKv6kH9Rq/pIb2lF3VGF8wH6zybzVBT
Sh+tz/NTPAt3eYF7HGEjnpWfeYkls69HecDL/MIxfuUVfmOZ3+Nc+CPOwv1m
7VkyP+O/2RL35N7eWzdxk3987zV/cZ0N1rjNRb5lla/40tzVT3iTC7zK+yzz
Ns9xgkVW7fE3nsO+J+M5mTOPTVt8zjwfspUPeCL+j8d5L+6Z8RLkOMsZc0xP
M8s7PBp7MxPnYO/JOG/d49KhHUlq17//v0f/AL7iO9M=
       "]]}, {
      Line3DBox[{829, 1162, 1163, 1141, 1167, 574, 1166, 1169, 1170, 1161, 
       1537, 1041, 1193, 1192, 1325, 1042, 830, 1326, 1043, 831, 1327, 1044, 
       832, 1328, 1045, 833, 1329, 1216, 1423, 834, 1330, 1046, 835, 1331, 
       1047, 836, 1332, 1048, 837, 1333, 1049, 838, 1334, 1050, 839, 1335, 
       1051, 840, 1535, 1143, 1052, 1144}], 
      Line3DBox[{841, 283, 1145, 277, 1538, 1168, 1142, 1207, 589, 842, 1336, 
       1053, 843, 1337, 1054, 844, 1338, 1055, 845, 1339, 1056, 846, 1340, 
       1217, 1424, 847, 1218, 1425, 848, 1341, 1057, 849, 1342, 1058, 850, 
       1343, 1059, 851, 1344, 1060, 852, 1345, 1061, 853, 1346, 1062, 854}], 
      Line3DBox[{855, 1171, 1129, 1146, 1187, 1528, 1322, 1186, 1185, 1208, 
       1219, 1539, 856, 1220, 1426, 857, 1347, 1063, 858, 1348, 1064, 859, 
       1349, 1065, 860, 1350, 1221, 1427, 861, 1222, 1428, 862, 1223, 1429, 
       863, 1351, 1066, 864, 1352, 1067, 865, 1353, 1068, 866, 1354, 1069, 
       867, 1355, 1070, 868}], 
      Line3DBox[{882, 1075, 1361, 881, 1074, 1360, 880, 1073, 1359, 879, 629, 
       878, 1435, 1229, 877, 1434, 1228, 876, 1433, 1227, 875, 1432, 1226, 
       1358, 874, 1072, 1357, 873, 1071, 1356, 872, 1431, 1225, 871, 1430, 
       1224, 870, 1540, 1189, 1209, 1188, 1210, 869, 1324, 1544, 1131, 1147, 
       1130, 1194, 1172}], 
      Line3DBox[{896, 1078, 1365, 895, 1077, 1364, 894, 1444, 1238, 893, 1443,
        1237, 892, 1442, 1236, 891, 1441, 1235, 890, 1440, 1234, 889, 1439, 
       1233, 1363, 888, 1076, 1362, 887, 1438, 1232, 886, 1437, 1231, 885, 
       1436, 1230, 884, 1541, 1191, 1211, 1190, 1212, 883, 1542, 1196, 1133, 
       1148, 1132, 1195, 1173}], 
      Line3DBox[{910, 1079, 1367, 909, 1456, 1249, 908, 1455, 1248, 907, 1454,
        1247, 906, 1453, 1246, 905, 1452, 1245, 904, 1451, 1244, 903, 1450, 
       1243, 1366, 902, 1449, 1242, 901, 1448, 1241, 900, 1447, 1240, 899, 
       1446, 1239, 898, 1323, 1445, 1213, 1215, 1214, 897, 1543, 1199, 1200, 
       1149, 1198, 1197, 1174}], 
      Line3DBox[{913, 1176, 1177, 1151, 1536, 1080, 912, 1368, 1081, 915, 
       1369, 1082, 917, 1370, 1083, 919, 1371, 1084, 921, 1372, 1085, 923, 
       1373, 1256, 1465, 925, 1374, 1086, 927, 1375, 1087, 929, 1376, 1088, 
       931, 1377, 1089, 933, 1378, 1090, 935, 1379, 1091, 937, 1380, 1092, 
       939}], Line3DBox[{938, 1472, 1263, 936, 1471, 1262, 934, 1470, 1261, 
       932, 1469, 1260, 930, 1468, 1259, 928, 1467, 1258, 926, 1466, 1257, 
       924, 1464, 1463, 1255, 922, 1462, 1254, 920, 1461, 1253, 918, 1460, 
       1252, 916, 1459, 1251, 914, 1458, 1250, 911, 1319, 1457, 1150, 1202, 
       1201, 1175}], 
      Line3DBox[{941, 1178, 1179, 1152, 1264, 1529, 940, 1381, 1093, 942, 
       1382, 1094, 943, 1383, 1095, 944, 1384, 1096, 945, 1385, 1097, 946, 
       1386, 1265, 1473, 947, 686, 948, 1387, 1098, 949, 1388, 1099, 950, 
       1389, 1100, 951, 1390, 1101, 952, 1391, 1102, 953, 1392, 1103, 954}], 
      Line3DBox[{956, 1180, 1134, 1153, 1266, 1530, 955, 1267, 1474, 957, 
       1393, 1104, 958, 1394, 1105, 959, 1395, 1106, 960, 1396, 1107, 961, 
       1397, 1268, 1475, 962, 1269, 1476, 963, 702, 964, 1398, 1108, 965, 
       1399, 1109, 966, 1400, 1110, 967, 1401, 1111, 968, 1402, 1112, 969}], 
      Line3DBox[{971, 1181, 1135, 1154, 1270, 1531, 970, 1271, 1477, 972, 
       1272, 1478, 973, 1403, 1113, 974, 1404, 1114, 975, 1405, 1115, 976, 
       1406, 1273, 1479, 977, 1274, 1480, 978, 1275, 1481, 979, 1276, 1482, 
       980, 1407, 1116, 981, 1408, 1117, 982, 1409, 1118, 983, 1410, 1119, 
       984}], Line3DBox[{998, 1124, 1416, 997, 1123, 1415, 996, 1122, 1414, 
       995, 1490, 1284, 994, 1489, 1283, 993, 1488, 1282, 992, 1487, 1281, 
       991, 1486, 1280, 1413, 990, 1121, 1412, 989, 1120, 1411, 988, 1485, 
       1279, 987, 1484, 1278, 986, 1483, 1277, 985, 1532, 1137, 1155, 1136, 
       1203, 1182}], 
      Line3DBox[{1012, 1127, 1420, 1011, 1126, 1419, 1010, 1500, 1294, 1009, 
       1499, 1293, 1008, 1498, 1292, 1007, 1497, 1291, 1006, 1496, 1290, 1005,
        1495, 1289, 1418, 1004, 1125, 1417, 1003, 1494, 1288, 1002, 1493, 
       1287, 1001, 1492, 1286, 1000, 1491, 1285, 999, 1533, 1139, 1156, 1138, 
       1204, 1183}], 
      Line3DBox[{1026, 1128, 1422, 1025, 1512, 1306, 1024, 1511, 1305, 1023, 
       1510, 1304, 1022, 1509, 1303, 1021, 1508, 1302, 1020, 1507, 1301, 1019,
        1506, 1300, 1421, 1018, 1505, 1299, 1017, 1504, 1298, 1016, 1503, 
       1297, 1015, 1502, 1296, 1014, 1501, 1295, 1013, 1534, 1140, 1157, 1206,
        1205, 1184}], 
      Line3DBox[{1040, 1160, 1527, 1321, 1039, 1526, 1318, 1038, 1525, 1317, 
       1037, 1524, 1316, 1036, 1523, 1315, 1035, 1522, 1314, 1034, 1521, 1313,
        1033, 1520, 1519, 1312, 1032, 1518, 1311, 1031, 1517, 1310, 1030, 
       1516, 1309, 1029, 1515, 1308, 1028, 1514, 1307, 1027, 1320, 1513, 1158,
        1165, 1164, 1159}]}, {
      Line3DBox[{356, 577, 1326, 357, 591, 1337, 383, 606, 1347, 398, 1431, 
       621, 413, 1437, 636, 428, 1447, 651, 443, 1460, 666, 1370, 458, 681, 
       1383, 473, 696, 1394, 488, 711, 1403, 503, 1485, 726, 518, 1493, 741, 
       533, 1503, 756, 548, 1516, 771, 563}], 
      Line3DBox[{358, 578, 1327, 359, 592, 1338, 384, 607, 1348, 399, 622, 
       1356, 414, 1438, 637, 429, 1448, 652, 444, 1461, 667, 1371, 459, 682, 
       1384, 474, 697, 1395, 489, 712, 1404, 504, 727, 1411, 519, 1494, 742, 
       534, 1504, 757, 549, 1517, 772, 564}], 
      Line3DBox[{360, 579, 1328, 361, 593, 1339, 385, 608, 1349, 400, 623, 
       1357, 415, 638, 1362, 430, 1449, 653, 445, 1462, 668, 1372, 460, 683, 
       1385, 475, 698, 1396, 490, 713, 1405, 505, 728, 1412, 520, 743, 1417, 
       535, 1505, 758, 550, 1518, 773, 565}], 
      Line3DBox[{362, 580, 1329, 364, 594, 1340, 386, 609, 1350, 401, 624, 
       1358, 416, 639, 1363, 431, 654, 1366, 446, 1463, 669, 1373, 461, 684, 
       1386, 476, 699, 1397, 491, 714, 1406, 506, 729, 1413, 521, 744, 1418, 
       536, 759, 1421, 551, 1519, 774, 566}], 
      Line3DBox[{366, 582, 1330, 367, 1425, 596, 388, 1428, 611, 403, 1433, 
       626, 418, 1440, 641, 433, 1451, 656, 448, 1466, 671, 1374, 463, 686, 
       478, 1476, 701, 493, 1480, 716, 508, 1487, 731, 523, 1496, 746, 538, 
       1507, 761, 553, 1521, 776, 568}], 
      Line3DBox[{368, 583, 1331, 369, 597, 1341, 389, 1429, 612, 404, 1434, 
       627, 419, 1441, 642, 434, 1452, 657, 449, 1467, 672, 1375, 464, 687, 
       1387, 479, 702, 494, 1481, 717, 509, 1488, 732, 524, 1497, 747, 539, 
       1508, 762, 554, 1522, 777, 569}], 
      Line3DBox[{370, 584, 1332, 371, 598, 1342, 390, 613, 1351, 405, 1435, 
       628, 420, 1442, 643, 435, 1453, 658, 450, 1468, 673, 1376, 465, 688, 
       1388, 480, 703, 1398, 495, 1482, 718, 510, 1489, 733, 525, 1498, 748, 
       540, 1509, 763, 555, 1523, 778, 570}], 
      Line3DBox[{372, 585, 1333, 373, 599, 1343, 391, 614, 1352, 406, 629, 
       421, 1443, 644, 436, 1454, 659, 451, 1469, 674, 1377, 466, 689, 1389, 
       481, 704, 1399, 496, 719, 1407, 511, 1490, 734, 526, 1499, 749, 541, 
       1510, 764, 556, 1524, 779, 571}], 
      Line3DBox[{374, 586, 1334, 375, 600, 1344, 392, 615, 1353, 407, 630, 
       1359, 422, 1444, 645, 437, 1455, 660, 452, 1470, 675, 1378, 467, 690, 
       1390, 482, 705, 1400, 497, 720, 1408, 512, 735, 1414, 527, 1500, 750, 
       542, 1511, 765, 557, 1525, 780, 572}], 
      Line3DBox[{376, 587, 1335, 377, 601, 1345, 393, 616, 1354, 408, 631, 
       1360, 423, 646, 1364, 438, 1456, 661, 453, 1471, 676, 1379, 468, 691, 
       1391, 483, 706, 1401, 498, 721, 1409, 513, 736, 1415, 528, 751, 1419, 
       543, 1512, 766, 558, 1526, 781, 573}], 
      Line3DBox[{378, 792, 1535, 793, 379, 602, 1346, 394, 617, 1355, 409, 
       632, 1361, 424, 647, 1365, 439, 662, 1367, 454, 1472, 677, 1380, 469, 
       692, 1392, 484, 707, 1402, 499, 722, 1410, 514, 737, 1416, 529, 752, 
       1420, 544, 767, 1422, 559, 1527, 794, 795, 796}], 
      Line3DBox[{560, 768, 789, 1513, 545, 753, 1534, 788, 530, 738, 1533, 
       787, 515, 723, 1532, 786, 500, 708, 1531, 785, 485, 693, 1530, 784, 
       470, 678, 1529, 783, 455, 1536, 663, 782, 1457, 440, 648, 817, 816, 
       827, 1543, 826, 425, 633, 814, 813, 825, 1542, 824, 410, 618, 811, 810,
        1544, 823, 822, 395, 603, 808, 1528, 807, 821, 820, 380, 588, 1538, 
       800, 799, 805, 804, 353, 574, 798, 797, 802, 801, 790}], 
      Line3DBox[{561, 769, 1514, 546, 754, 1501, 531, 739, 1491, 516, 724, 
       1483, 501, 709, 1477, 486, 694, 1474, 471, 1381, 679, 456, 1368, 664, 
       1458, 441, 649, 815, 1445, 426, 634, 1541, 812, 411, 619, 1540, 809, 
       396, 604, 1539, 806, 381, 589, 791, 354, 1537, 575, 819, 326, 803}], 
      Line3DBox[{562, 770, 1515, 547, 755, 1502, 532, 740, 1492, 517, 725, 
       1484, 502, 710, 1478, 487, 1393, 695, 472, 1382, 680, 457, 1369, 665, 
       1459, 442, 650, 1446, 427, 635, 1436, 412, 620, 1430, 397, 605, 1426, 
       382, 1336, 590, 355, 1325, 576, 818, 828}], 
      Line3DBox[{567, 775, 1520, 552, 760, 1506, 537, 745, 1495, 522, 730, 
       1486, 507, 715, 1479, 492, 700, 1475, 477, 685, 1473, 462, 670, 1465, 
       1464, 447, 655, 1450, 432, 640, 1439, 417, 625, 1432, 402, 610, 1427, 
       387, 595, 1424, 365, 581, 1423, 363}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
qyDdjLYRPJMbBM8kmuCZ/D+Wh/Ht
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["a", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  ImageSize->{381.9081919284627, 204.90580757712672`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0, 100}, {0, 1}, {-5.442048493874546*^-17, 95.38486533888769}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.9385212583344084, -3.1380753669228136`, 0.8495062325649302},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.5613171062386875`*^9, 3.5613171304790745`*^9}, {
  3.5613171619778757`*^9, 3.5613171846011696`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"func", "[", "x", "]"}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.561221382093089*^9, 3.5612213968559337`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.561221397303959*^9, 3.5613170671974545`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Problem", " ", "4"}], ":"}]], "Input",
 CellChangeTimes->{{3.5612214077395563`*^9, 3.561221409220641*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.5612218177170057`*^9, 3.5612218265665116`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "This", " ", "entropy", " ", "fundamental", " ", "equation", " ", "is", " ",
    "not", " ", "for", " ", "an", " ", "ideal", " ", "gas"}], ",", " ", 
  RowBox[{"which", " ", "scales", " ", "as", " ", "the", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"V", "/", "N"}], "]"}], " ", "and", " ", "the", " ", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"U", "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], "]"}], ".", "  ", "This"}], " ", 
   "can", " ", "also", " ", "be", " ", "rewritten", " ", "in", " ", "terms", 
   " ", "of", " ", 
   RowBox[{"temperature", ".", "  ", "Based"}], "  ", "upon", " ", "the", " ",
    "differential", " ", "form", " ", "given"}], ",", " ", 
  RowBox[{
  "chemical", " ", "potential", " ", "is", " ", "not", " ", "a", " ", 
   "factor"}], ",", " ", 
  RowBox[{
  "otherwise", " ", "there", " ", "would", " ", "have", " ", "been", " ", "a",
    " ", "sum", " ", "over", " ", "the", " ", "number", " ", "of", " ", 
   "particles", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
     "as", " ", "it", " ", "would", " ", "be", " ", "in", " ", "a", " ", 
      "more", " ", 
      RowBox[{"complete", "/", "realistic"}], " ", "ensamble"}], ")"}], ".", 
    "  ", "Therefore"}]}], ",", " ", 
  RowBox[{
  "it", " ", "is", " ", "assumed", " ", "that", " ", "the", " ", "number", 
   " ", "of", " ", "particles", " ", "is", " ", "held", " ", "constant", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"if", " ", "it", " ", 
       RowBox[{"weren", "'"}], "t", " ", "then", " ", "then", " ", 
       SubscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[PartialD]", "S"}], 
          RowBox[{"\[PartialD]", "N"}]], ")"}], 
        RowBox[{"V", ",", "E"}]]}], "=", 
      FractionBox[
       RowBox[{"-", "\[Mu]"}], "T"]}], ")"}], "."}]}]}]], "Input",
 CellChangeTimes->{{3.5613230687117214`*^9, 3.5613230843796177`*^9}, {
  3.561323132829389*^9, 3.561323149155323*^9}, {3.561323235666271*^9, 
  3.5613232366383266`*^9}, {3.561323274374485*^9, 3.561323297849828*^9}, {
  3.5613233781604214`*^9, 3.5613234456992846`*^9}, {3.561323518026421*^9, 
  3.5613235191844873`*^9}, {3.561323661649636*^9, 3.561323731345622*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["R", "2"], 
      RowBox[{"\[Theta]", "*", 
       SubscriptBox["\[Upsilon]", "0"]}]], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"n", "*", "V", "*", "U"}], ")"}], 
     RowBox[{"1", "/", "3"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5612216591089334`*^9, 3.561221710762888*^9}, 
   3.561221780440873*^9, {3.561221830364729*^9, 3.561221833201891*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", "^", "3"}]], "Input",
 CellChangeTimes->{{3.5612234158154116`*^9, 3.561223416443447*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   SuperscriptBox["R", "6"], " ", "U", " ", "V"}], 
  RowBox[{
   SuperscriptBox["\[Theta]", "3"], " ", 
   SubsuperscriptBox["\[Upsilon]", "0", "3"]}]]], "Output",
 CellChangeTimes->{3.5612234169674773`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["R", "2"], 
      RowBox[{"\[Theta]", "*", 
       SubscriptBox["\[Upsilon]", "0"]}]], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"n", "*", "V", "*", "U"}], ")"}], 
     RowBox[{"1", "/", "3"}]]}], ",", "V"}], "]"}]], "Input",
 CellChangeTimes->{{3.561221774063509*^9, 3.561221823703348*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   SuperscriptBox["R", "2"], " ", "U"}], 
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"n", " ", "U", " ", "V"}], ")"}], 
    RowBox[{"2", "/", "3"}]], " ", "\[Theta]", " ", 
   SubscriptBox["\[Upsilon]", "0"]}]]], "Output",
 CellChangeTimes->{{3.561221791340497*^9, 3.56122183545802*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Problem", " ", "5"}], ":"}]], "Input",
 CellChangeTimes->{{3.561221768561194*^9, 3.5612217700582795`*^9}}]
},
WindowSize->{581, 505},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.100000023841858,
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 374, 8, 53, "Input"],
Cell[934, 30, 168, 3, 32, "Input"],
Cell[1105, 35, 125, 2, 32, "Input"],
Cell[1233, 39, 135, 3, 32, "Input"],
Cell[1371, 44, 2518, 51, 300, "Input"],
Cell[CellGroupData[{
Cell[3914, 99, 396, 11, 44, "Input"],
Cell[4313, 112, 243, 7, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4593, 124, 168, 4, 32, "Input"],
Cell[4764, 130, 135, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4936, 136, 238, 7, 32, "Input"],
Cell[5177, 145, 192, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5406, 155, 674, 19, 93, "Input"],
Cell[6083, 176, 6621, 119, 273, "Output"]
}, Open  ]],
Cell[12719, 298, 319, 7, 53, "Input"],
Cell[CellGroupData[{
Cell[13063, 309, 365, 10, 32, "Input"],
Cell[13431, 321, 210, 6, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13678, 332, 370, 9, 32, "Input"],
Cell[14051, 343, 2604, 52, 273, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16692, 400, 151, 3, 32, "Input"],
Cell[16846, 405, 156, 5, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17039, 415, 205, 5, 32, "Input"],
Cell[17247, 422, 112, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17396, 428, 586, 16, 53, "Input"],
Cell[17985, 446, 5150, 92, 263, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23172, 543, 917, 25, 73, "Input"],
Cell[24092, 570, 1682, 34, 457, "Output"]
}, Open  ]],
Cell[25789, 607, 1127, 24, 133, "Input"],
Cell[CellGroupData[{
Cell[26941, 635, 190, 4, 32, "Input"],
Cell[27134, 641, 114, 2, 32, "Output"]
}, Open  ]],
Cell[27263, 646, 365, 8, 53, "Input"],
Cell[CellGroupData[{
Cell[27653, 658, 415, 10, 34, "Input"],
Cell[28071, 670, 3859, 70, 265, "Output"]
}, Open  ]],
Cell[31945, 743, 140, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[32110, 750, 387, 11, 49, "Input"],
Cell[32500, 763, 306, 9, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32843, 777, 125, 2, 32, "Input"],
Cell[32971, 781, 473, 10, 43, "Message"],
Cell[33447, 793, 110, 1, 32, "Output"]
}, Open  ]],
Cell[33572, 797, 1257, 25, 173, "Input"],
Cell[CellGroupData[{
Cell[34854, 826, 388, 11, 49, "Input"],
Cell[35245, 839, 780, 25, 56, "Output"]
}, Open  ]],
Cell[36040, 867, 483, 10, 73, "Input"],
Cell[CellGroupData[{
Cell[36548, 881, 430, 12, 49, "Input"],
Cell[36981, 895, 1499, 51, 149, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38517, 951, 472, 14, 49, "Input"],
Cell[38992, 967, 896, 28, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39925, 1000, 539, 15, 49, "Input"],
Cell[40467, 1017, 121, 2, 32, "Output"]
}, Open  ]],
Cell[40603, 1022, 252, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[40880, 1031, 438, 13, 49, "Input"],
Cell[41321, 1046, 378, 12, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41736, 1063, 480, 14, 49, "Input"],
Cell[42219, 1079, 627, 20, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42883, 1104, 488, 14, 49, "Input"],
Cell[43374, 1120, 380, 12, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43791, 1137, 548, 16, 49, "Input"],
Cell[44342, 1155, 82, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44461, 1161, 653, 19, 87, "Input"],
Cell[45117, 1182, 15558, 263, 285, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60712, 1450, 418, 12, 49, "Input"],
Cell[61133, 1464, 80, 1, 32, "Output"]
}, Open  ]],
Cell[61228, 1468, 207, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[61460, 1477, 468, 13, 49, "Input"],
Cell[61931, 1492, 79, 1, 32, "Output"]
}, Open  ]],
Cell[62025, 1496, 236, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[62286, 1506, 484, 15, 49, "Input"],
Cell[62773, 1523, 80, 1, 32, "Output"]
}, Open  ]],
Cell[62868, 1527, 800, 15, 133, "Input"],
Cell[63671, 1544, 56, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[63752, 1549, 759, 21, 99, "Input"],
Cell[64514, 1572, 17200, 303, 261, "Output"]
}, Open  ]],
Cell[81729, 1878, 138, 3, 32, "Input"],
Cell[81870, 1883, 215, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[82110, 1891, 298, 9, 56, "Input"],
Cell[82411, 1902, 72, 1, 32, "Output"]
}, Open  ]],
Cell[82498, 1906, 409, 6, 73, "Input"],
Cell[82910, 1914, 1067, 25, 133, "Input"],
Cell[CellGroupData[{
Cell[84002, 1943, 652, 20, 105, "Input"],
Cell[84657, 1965, 5968, 105, 276, "Output"]
}, Open  ]],
Cell[90640, 2073, 899, 14, 153, "Input"],
Cell[CellGroupData[{
Cell[91564, 2091, 345, 11, 56, "Input"],
Cell[91912, 2104, 267, 9, 61, "Output"]
}, Open  ]],
Cell[92194, 2116, 3743, 63, 593, "Input"],
Cell[CellGroupData[{
Cell[95962, 2183, 404, 12, 62, "Input"],
Cell[96369, 2197, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96476, 2203, 794, 22, 136, "Input"],
Cell[97273, 2227, 4818, 84, 289, "Output"]
}, Open  ]],
Cell[102106, 2314, 688, 10, 113, "Input"],
Cell[CellGroupData[{
Cell[102819, 2328, 302, 9, 56, "Input"],
Cell[103124, 2339, 387, 9, 23, "Message"],
Cell[103514, 2350, 308, 10, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103859, 2365, 431, 12, 56, "Input"],
Cell[104293, 2379, 437, 10, 23, "Message"],
Cell[104733, 2391, 415, 13, 66, "Output"]
}, Open  ]],
Cell[105163, 2407, 453, 10, 73, "Input"],
Cell[105619, 2419, 385, 7, 73, "Input"],
Cell[CellGroupData[{
Cell[106029, 2430, 251, 8, 48, "Input"],
Cell[106283, 2440, 72, 1, 32, "Output"]
}, Open  ]],
Cell[106370, 2444, 346, 8, 53, "Input"],
Cell[CellGroupData[{
Cell[106741, 2456, 310, 9, 48, "Input"],
Cell[107054, 2467, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107163, 2473, 338, 9, 48, "Input"],
Cell[107504, 2484, 200, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107741, 2493, 269, 8, 48, "Input"],
Cell[108013, 2503, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108122, 2509, 300, 9, 48, "Input"],
Cell[108425, 2520, 104, 1, 32, "Output"]
}, Open  ]],
Cell[108544, 2524, 141, 3, 32, "Input"],
Cell[108688, 2529, 140, 3, 32, "Input"],
Cell[108831, 2534, 815, 15, 133, "Input"],
Cell[CellGroupData[{
Cell[109671, 2553, 431, 12, 34, "Input"],
Cell[110105, 2567, 6097, 106, 269, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116239, 2678, 228, 6, 32, "Input"],
Cell[116470, 2686, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116577, 2692, 276, 7, 32, "Input"],
Cell[116856, 2701, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116965, 2707, 296, 8, 32, "Input"],
Cell[117264, 2717, 72, 1, 32, "Output"]
}, Open  ]],
Cell[117351, 2721, 138, 3, 32, "Input"],
Cell[117492, 2726, 1237, 21, 213, "Input"],
Cell[CellGroupData[{
Cell[118754, 2751, 423, 12, 45, "Input"],
Cell[119180, 2765, 3453, 63, 270, "Output"]
}, Open  ]],
Cell[122648, 2831, 620, 12, 93, "Input"],
Cell[CellGroupData[{
Cell[123293, 2847, 236, 6, 45, "Input"],
Cell[123532, 2855, 70, 1, 32, "Output"]
}, Open  ]],
Cell[123617, 2859, 136, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[123778, 2866, 427, 10, 32, "Input"],
Cell[124208, 2878, 2885, 54, 267, "Output"]
}, Open  ]],
Cell[127108, 2935, 1287, 26, 173, "Input"],
Cell[128398, 2963, 609, 12, 93, "Input"],
Cell[CellGroupData[{
Cell[129032, 2979, 782, 21, 73, "Input"],
Cell[129817, 3002, 2181, 46, 491, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132035, 3053, 211, 5, 32, "Input"],
Cell[132249, 3060, 94, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132380, 3066, 259, 6, 32, "Input"],
Cell[132642, 3074, 94, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132773, 3080, 279, 7, 32, "Input"],
Cell[133055, 3089, 92, 1, 32, "Output"]
}, Open  ]],
Cell[133162, 3093, 138, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[133325, 3100, 884, 26, 56, "Input"],
Cell[134212, 3128, 9976, 173, 309, "Output"]
}, Open  ]],
Cell[144203, 3304, 603, 12, 93, "Input"],
Cell[CellGroupData[{
Cell[144831, 3320, 355, 11, 34, "Input"],
Cell[145189, 3333, 279, 10, 32, "Output"]
}, Open  ]],
Cell[145483, 3346, 642, 14, 93, "Input"],
Cell[CellGroupData[{
Cell[146150, 3364, 504, 14, 34, "Input"],
Cell[146657, 3380, 159, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146853, 3388, 497, 15, 34, "Input"],
Cell[147353, 3405, 381, 11, 32, "Output"]
}, Open  ]],
Cell[147749, 3419, 289, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[148063, 3430, 321, 10, 34, "Input"],
Cell[148387, 3442, 216, 7, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148640, 3454, 337, 10, 52, "Input"],
Cell[148980, 3466, 69, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149086, 3472, 368, 12, 34, "Input"],
Cell[149457, 3486, 466, 16, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149960, 3507, 452, 15, 34, "Input"],
Cell[150415, 3524, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150524, 3530, 372, 12, 34, "Input"],
Cell[150899, 3544, 469, 17, 58, "Output"]
}, Open  ]],
Cell[151383, 3564, 872, 22, 93, "Input"],
Cell[CellGroupData[{
Cell[152280, 3590, 476, 15, 34, "Input"],
Cell[152759, 3607, 233, 8, 32, "Output"]
}, Open  ]],
Cell[153007, 3618, 141, 3, 32, "Input"],
Cell[153151, 3623, 3399, 59, 453, "Input"],
Cell[156553, 3684, 831, 16, 133, "Input"],
Cell[CellGroupData[{
Cell[157409, 3704, 342, 9, 45, "Input"],
Cell[157754, 3715, 184, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157975, 3725, 265, 8, 45, "Input"],
Cell[158243, 3735, 184, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158464, 3745, 142, 3, 32, "Input"],
Cell[158609, 3750, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158718, 3756, 147, 3, 32, "Input"],
Cell[158868, 3761, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158977, 3767, 143, 3, 32, "Input"],
Cell[159123, 3772, 92, 2, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159252, 3779, 441, 11, 32, "Input"],
Cell[159696, 3792, 92691, 1514, 194, "Output"]
}, Open  ]],
Cell[252402, 5309, 408, 8, 53, "Input"],
Cell[252813, 5319, 431, 8, 73, "Input"],
Cell[CellGroupData[{
Cell[253269, 5331, 317, 8, 32, "Input"],
Cell[253589, 5341, 1561, 33, 151, "Output"]
}, Open  ]],
Cell[255165, 5377, 451, 7, 53, "Input"],
Cell[CellGroupData[{
Cell[255641, 5388, 422, 10, 32, "Input"],
Cell[256066, 5400, 3131, 59, 276, "Output"]
}, Open  ]],
Cell[259212, 5462, 616, 15, 93, "Input"],
Cell[259831, 5479, 315, 5, 53, "Input"],
Cell[CellGroupData[{
Cell[260171, 5488, 243, 7, 46, "Input"],
Cell[260417, 5497, 363, 13, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260817, 5515, 245, 7, 46, "Input"],
Cell[261065, 5524, 363, 13, 53, "Output"]
}, Open  ]],
Cell[261443, 5540, 140, 3, 32, "Input"],
Cell[261586, 5545, 714, 14, 93, "Input"],
Cell[CellGroupData[{
Cell[262325, 5563, 208, 5, 32, "Input"],
Cell[262536, 5570, 69, 1, 32, "Output"]
}, Open  ]],
Cell[262620, 5574, 140, 3, 32, "Input"],
Cell[262763, 5579, 1251, 22, 153, "Input"],
Cell[CellGroupData[{
Cell[264039, 5605, 315, 9, 45, "Input"],
Cell[264357, 5616, 94, 1, 32, "Output"]
}, Open  ]],
Cell[264466, 5620, 189, 4, 32, "Input"],
Cell[264658, 5626, 604, 11, 93, "Input"],
Cell[265265, 5639, 277, 4, 53, "Input"],
Cell[CellGroupData[{
Cell[265567, 5647, 307, 9, 47, "Input"],
Cell[265877, 5658, 271, 8, 47, "Output"]
}, Open  ]],
Cell[266163, 5669, 248, 4, 53, "Input"],
Cell[CellGroupData[{
Cell[266436, 5677, 142, 4, 32, "Input"],
Cell[266581, 5683, 298, 10, 47, "Output"]
}, Open  ]],
Cell[266894, 5696, 312, 9, 47, "Input"],
Cell[267209, 5707, 282, 4, 53, "Input"],
Cell[CellGroupData[{
Cell[267516, 5715, 193, 4, 32, "Input"],
Cell[267712, 5721, 122, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267871, 5728, 193, 4, 32, "Input"],
Cell[268067, 5734, 96, 1, 32, "Output"]
}, Open  ]],
Cell[268178, 5738, 268, 4, 53, "Input"],
Cell[268449, 5744, 138, 3, 32, "Input"],
Cell[268590, 5749, 845, 17, 113, "Input"],
Cell[269438, 5768, 138, 3, 32, "Input"],
Cell[269579, 5773, 1251, 25, 178, "Input"],
Cell[CellGroupData[{
Cell[270855, 5802, 277, 8, 48, "Input"],
Cell[271135, 5812, 673, 22, 77, "Output"]
}, Open  ]],
Cell[271823, 5837, 641, 10, 93, "Input"],
Cell[CellGroupData[{
Cell[272489, 5851, 301, 9, 48, "Input"],
Cell[272793, 5862, 698, 23, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273528, 5890, 361, 10, 32, "Input"],
Cell[273892, 5902, 243, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274172, 5914, 395, 10, 53, "Input"],
Cell[274570, 5926, 93385, 1523, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367992, 7454, 211, 5, 32, "Input"],
Cell[368206, 7461, 94, 1, 32, "Output"]
}, Open  ]],
Cell[368315, 7465, 141, 3, 32, "Input"],
Cell[368459, 7470, 128, 2, 32, "Input"],
Cell[368590, 7474, 2243, 51, 231, "Input"],
Cell[370836, 7527, 488, 14, 52, "Input"],
Cell[CellGroupData[{
Cell[371349, 7545, 117, 2, 32, "Input"],
Cell[371469, 7549, 257, 7, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371763, 7561, 424, 13, 52, "Input"],
Cell[372190, 7576, 364, 10, 53, "Output"]
}, Open  ]],
Cell[372569, 7589, 141, 3, 32, "Input"]
}
]
*)

(* End of internal cache information *)
